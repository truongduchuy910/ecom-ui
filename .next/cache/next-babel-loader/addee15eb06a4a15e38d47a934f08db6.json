{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\ecom-ui\\\\components\\\\Category\\\\item.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport ReactGA from \"react-ga\";\nconst GET_PARENT = gql`\n  query($url: String) {\n    allCategories(where: { url: $url }) {\n      parent {\n        url\n      }\n      childs {\n        url\n      }\n    }\n  }\n`;\nexport function Item({\n  category,\n  style\n}) {\n  const router = useRouter();\n  const {\n    data\n  } = useQuery(GET_PARENT, {\n    variables: {\n      url: category === null || category === void 0 ? void 0 : category.url\n    }\n  });\n  let query = router.query;\n  const childUrl = (category === null || category === void 0 ? void 0 : category.childs) ? category === null || category === void 0 ? void 0 : category.childs.map(category => category === null || category === void 0 ? void 0 : category.url).toString() : [];\n\n  const handleClick = () => {\n    // google analytics\n    const event = {\n      category: \"Category\",\n      action: \"view\",\n      value: category.name\n    };\n    console.log(event);\n    ReactGA.event(event);\n\n    if ((category === null || category === void 0 ? void 0 : category.url) === \"back\") {\n      if (category === null || category === void 0 ? void 0 : category.parent) query.category = category === null || category === void 0 ? void 0 : category.parent.url;else {\n        delete query.category;\n      }\n      delete query.categories;\n      router.push({\n        query\n      });\n    } else {\n      query.category = category === null || category === void 0 ? void 0 : category.url;\n      if (query === null || query === void 0 ? void 0 : query.categories) query.categories = childUrl;else delete query.categories;\n      router.push({\n        query\n      });\n    }\n  };\n\n  return category ? __jsx(\"a\", {\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      cursor: \"pointer\",\n      display: \"block\"\n    }),\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, (category === null || category === void 0 ? void 0 : category.label) ? category === null || category === void 0 ? void 0 : category.label : category === null || category === void 0 ? void 0 : category.name) : null;\n}","map":{"version":3,"sources":["D:/Github/ecom-ui/components/Category/item.js"],"names":["useRouter","gql","useQuery","ReactGA","GET_PARENT","Item","category","style","router","data","variables","url","query","childUrl","childs","map","toString","handleClick","event","action","value","name","console","log","parent","categories","push","cursor","display","label"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,OAAP,MAAoB,UAApB;AAEA,MAAMC,UAAU,GAAGH,GAAI;;;;;;;;;;;CAAvB;AAYA,OAAO,SAASI,IAAT,CAAc;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAd,EAAmC;AACxC,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AAEA,QAAM;AAAES,IAAAA;AAAF,MAAWP,QAAQ,CAACE,UAAD,EAAa;AAAEM,IAAAA,SAAS,EAAE;AAAEC,MAAAA,GAAG,EAAEL,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEK;AAAjB;AAAb,GAAb,CAAzB;AACA,MAAIC,KAAK,GAAGJ,MAAM,CAACI,KAAnB;AAEA,QAAMC,QAAQ,GAAG,CAAAP,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEQ,MAAV,IACbR,QADa,aACbA,QADa,uBACbA,QAAQ,CAAEQ,MAAV,CAAiBC,GAAjB,CAAsBT,QAAD,IAAcA,QAAd,aAAcA,QAAd,uBAAcA,QAAQ,CAAEK,GAA7C,EAAkDK,QAAlD,EADa,GAEb,EAFJ;;AAGA,QAAMC,WAAW,GAAG,MAAM;AACxB;AACA,UAAMC,KAAK,GAAG;AACZZ,MAAAA,QAAQ,EAAE,UADE;AAEZa,MAAAA,MAAM,EAAE,MAFI;AAGZC,MAAAA,KAAK,EAAEd,QAAQ,CAACe;AAHJ,KAAd;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAf,IAAAA,OAAO,CAACe,KAAR,CAAcA,KAAd;;AAEA,QAAI,CAAAZ,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEK,GAAV,MAAkB,MAAtB,EAA8B;AAC5B,UAAIL,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAEkB,MAAd,EAAsBZ,KAAK,CAACN,QAAN,GAAiBA,QAAjB,aAAiBA,QAAjB,uBAAiBA,QAAQ,CAAEkB,MAAV,CAAiBb,GAAlC,CAAtB,KACK;AACH,eAAOC,KAAK,CAACN,QAAb;AACD;AACD,aAAOM,KAAK,CAACa,UAAb;AACAjB,MAAAA,MAAM,CAACkB,IAAP,CAAY;AAAEd,QAAAA;AAAF,OAAZ;AACD,KAPD,MAOO;AACLA,MAAAA,KAAK,CAACN,QAAN,GAAiBA,QAAjB,aAAiBA,QAAjB,uBAAiBA,QAAQ,CAAEK,GAA3B;AACA,UAAIC,KAAJ,aAAIA,KAAJ,uBAAIA,KAAK,CAAEa,UAAX,EAAuBb,KAAK,CAACa,UAAN,GAAmBZ,QAAnB,CAAvB,KACK,OAAOD,KAAK,CAACa,UAAb;AACLjB,MAAAA,MAAM,CAACkB,IAAP,CAAY;AAAEd,QAAAA;AAAF,OAAZ;AACD;AACF,GAvBD;;AAwBA,SAAON,QAAQ,GACb;AACE,IAAA,KAAK,kCACAC,KADA;AAEHoB,MAAAA,MAAM,EAAE,SAFL;AAGHC,MAAAA,OAAO,EAAE;AAHN,MADP;AAME,IAAA,OAAO,EAAEX,WANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG,CAAAX,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEuB,KAAV,IAAkBvB,QAAlB,aAAkBA,QAAlB,uBAAkBA,QAAQ,CAAEuB,KAA5B,GAAoCvB,QAApC,aAAoCA,QAApC,uBAAoCA,QAAQ,CAAEe,IARjD,CADa,GAWX,IAXJ;AAYD","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nconst GET_PARENT = gql`\r\n  query($url: String) {\r\n    allCategories(where: { url: $url }) {\r\n      parent {\r\n        url\r\n      }\r\n      childs {\r\n        url\r\n      }\r\n    }\r\n  }\r\n`;\r\nexport function Item({ category, style }) {\r\n  const router = useRouter();\r\n\r\n  const { data } = useQuery(GET_PARENT, { variables: { url: category?.url } });\r\n  let query = router.query;\r\n\r\n  const childUrl = category?.childs\r\n    ? category?.childs.map((category) => category?.url).toString()\r\n    : [];\r\n  const handleClick = () => {\r\n    // google analytics\r\n    const event = {\r\n      category: \"Category\",\r\n      action: \"view\",\r\n      value: category.name,\r\n    };\r\n    console.log(event);\r\n    ReactGA.event(event);\r\n\r\n    if (category?.url === \"back\") {\r\n      if (category?.parent) query.category = category?.parent.url;\r\n      else {\r\n        delete query.category;\r\n      }\r\n      delete query.categories;\r\n      router.push({ query });\r\n    } else {\r\n      query.category = category?.url;\r\n      if (query?.categories) query.categories = childUrl;\r\n      else delete query.categories;\r\n      router.push({ query });\r\n    }\r\n  };\r\n  return category ? (\r\n    <a\r\n      style={{\r\n        ...style,\r\n        cursor: \"pointer\",\r\n        display: \"block\",\r\n      }}\r\n      onClick={handleClick}\r\n    >\r\n      {category?.label ? category?.label : category?.name}\r\n    </a>\r\n  ) : null;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}