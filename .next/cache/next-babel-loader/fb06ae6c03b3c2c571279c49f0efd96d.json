{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/media/huy/New Volume/linux/apps/ecom-ui/components/Cart/quickCart.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, Fragment, useReducer, useContext } from \"react\";\nimport { Create as CreateCustomer } from \"../Customer/create\";\nimport { CREATE_ORDER_ITEMS, CREATE_ORDER, CART, OrderItemsCreateInputs, order } from \".\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { Loading } from \"../src/Loading\";\nimport { useRouter } from \"next/router\";\nimport { page } from \"../../config/index\";\nimport { SellerContext } from \"../src/SellerProvider\";\nexport var QuickCart = function QuickCart(_ref) {\n  _s();\n\n  var cartItems = _ref.cartItems;\n  var theme = useContext(SellerContext);\n  var router = useRouter(); // query\n\n  var _useQuery = useQuery(CART),\n      cartData = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error; // mutation\n\n\n  var _useMutation = useMutation(CREATE_ORDER_ITEMS),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createOrderItems = _useMutation2[0];\n\n  var _useMutation3 = useMutation(CREATE_ORDER),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      createOrder = _useMutation4[0];\n\n  if (loading || error || !cartData) return __jsx(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 45\n    }\n  });\n  var customer = cartData.customer,\n      user = cartData.user;\n  var sum = 0;\n  cartItems === null || cartItems === void 0 ? void 0 : cartItems.map(function (cartItem) {\n    sum += cartItem.price;\n  }); // create OrderItemsCreateInputs (GraphQL type)\n\n  var dataOICI = OrderItemsCreateInputs(cartItems);\n  dataOICI === null || dataOICI === void 0 ? void 0 : dataOICI.map(function (data) {\n    return data.data.ofSeller = {\n      connect: {\n        id: theme.seller.id\n      }\n    };\n  }); // function\n\n  return __jsx(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, (cartItems === null || cartItems === void 0 ? void 0 : cartItems.length) ? __jsx(CreateCustomer, {\n    onCreate: function onCreate(_ref2) {\n      var customer = _ref2.customer;\n      order({\n        createOrderItems: createOrderItems,\n        createOrder: createOrder,\n        dataOICI: dataOICI,\n        page: page,\n        customer: customer,\n        sum: sum,\n        router: router\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }) : null);\n};\n\n_s(QuickCart, \"Or8AbOM9L8+q7JUTcS9WaFvEDPo=\", false, function () {\n  return [useRouter, useQuery, useMutation, useMutation];\n});\n\n_c = QuickCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuickCart\");","map":{"version":3,"sources":["/media/huy/New Volume/linux/apps/ecom-ui/components/Cart/quickCart.js"],"names":["useState","Fragment","useReducer","useContext","Create","CreateCustomer","CREATE_ORDER_ITEMS","CREATE_ORDER","CART","OrderItemsCreateInputs","order","useMutation","useQuery","Loading","useRouter","page","SellerContext","QuickCart","cartItems","theme","router","cartData","data","loading","error","createOrderItems","createOrder","customer","user","sum","map","cartItem","price","dataOICI","ofSeller","connect","id","seller","length"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,UAA7B,EAAyCC,UAAzC,QAA2D,OAA3D;AAEA,SAASC,MAAM,IAAIC,cAAnB,QAAyC,oBAAzC;AACA,SACEC,kBADF,EAEEC,YAFF,EAGEC,IAHF,EAIEC,sBAJF,EAKEC,KALF,QAMO,GANP;AAOA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAmB;AAAA;;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AAC1C,MAAMC,KAAK,GAAGhB,UAAU,CAACa,aAAD,CAAxB;AACA,MAAMI,MAAM,GAAGN,SAAS,EAAxB,CAF0C,CAG1C;;AAH0C,kBAICF,QAAQ,CAACJ,IAAD,CAJT;AAAA,MAI5Ba,QAJ4B,aAIlCC,IAJkC;AAAA,MAIlBC,OAJkB,aAIlBA,OAJkB;AAAA,MAITC,KAJS,aAITA,KAJS,EAK1C;;;AAL0C,qBAMfb,WAAW,CAACL,kBAAD,CANI;AAAA;AAAA,MAMnCmB,gBANmC;;AAAA,sBAOpBd,WAAW,CAACJ,YAAD,CAPS;AAAA;AAAA,MAOnCmB,WAPmC;;AAS1C,MAAIH,OAAO,IAAIC,KAAX,IAAoB,CAACH,QAAzB,EAAmC,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AATO,MAWlCM,QAXkC,GAWfN,QAXe,CAWlCM,QAXkC;AAAA,MAWxBC,IAXwB,GAWfP,QAXe,CAWxBO,IAXwB;AAY1C,MAAIC,GAAG,GAAG,CAAV;AACAX,EAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEY,GAAX,CAAe,UAACC,QAAD,EAAc;AAC3BF,IAAAA,GAAG,IAAIE,QAAQ,CAACC,KAAhB;AACD,GAFD,EAb0C,CAiB1C;;AACA,MAAIC,QAAQ,GAAGxB,sBAAsB,CAACS,SAAD,CAArC;AACAe,EAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEH,GAAV,CACE,UAACR,IAAD;AAAA,WAAWA,IAAI,CAACA,IAAL,CAAUY,QAAV,GAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,EAAE,EAAEjB,KAAK,CAACkB,MAAN,CAAaD;AAAnB;AAAX,KAAhC;AAAA,GADF,EAnB0C,CAuB1C;;AACA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAAlB,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEoB,MAAX,IACC,MAAC,cAAD;AACE,IAAA,QAAQ,EAAE,yBAAkB;AAAA,UAAfX,QAAe,SAAfA,QAAe;AAC1BjB,MAAAA,KAAK,CAAC;AACJe,QAAAA,gBAAgB,EAAhBA,gBADI;AAEJC,QAAAA,WAAW,EAAXA,WAFI;AAGJO,QAAAA,QAAQ,EAARA,QAHI;AAIJlB,QAAAA,IAAI,EAAJA,IAJI;AAKJY,QAAAA,QAAQ,EAARA,QALI;AAMJE,QAAAA,GAAG,EAAHA,GANI;AAOJT,QAAAA,MAAM,EAANA;AAPI,OAAD,CAAL;AASD,KAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAcG,IAfN,CADF;AAmBD,CA3CM;;GAAMH,S;UAEIH,S,EAE4BF,Q,EAEhBD,W,EACLA,W;;;KAPXM,S","sourcesContent":["import { useState, Fragment, useReducer, useContext } from \"react\";\n\nimport { Create as CreateCustomer } from \"../Customer/create\";\nimport {\n  CREATE_ORDER_ITEMS,\n  CREATE_ORDER,\n  CART,\n  OrderItemsCreateInputs,\n  order,\n} from \".\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { Loading } from \"../src/Loading\";\nimport { useRouter } from \"next/router\";\nimport { page } from \"../../config/index\";\nimport { SellerContext } from \"../src/SellerProvider\";\nexport const QuickCart = ({ cartItems }) => {\n  const theme = useContext(SellerContext);\n  const router = useRouter();\n  // query\n  const { data: cartData, loading, error } = useQuery(CART);\n  // mutation\n  const [createOrderItems] = useMutation(CREATE_ORDER_ITEMS);\n  const [createOrder] = useMutation(CREATE_ORDER);\n\n  if (loading || error || !cartData) return <Loading />;\n\n  const { customer, user } = cartData;\n  let sum = 0;\n  cartItems?.map((cartItem) => {\n    sum += cartItem.price;\n  });\n\n  // create OrderItemsCreateInputs (GraphQL type)\n  let dataOICI = OrderItemsCreateInputs(cartItems);\n  dataOICI?.map(\n    (data) => (data.data.ofSeller = { connect: { id: theme.seller.id } })\n  );\n\n  // function\n  return (\n    <Fragment>\n      {cartItems?.length ? (\n        <CreateCustomer\n          onCreate={({ customer }) => {\n            order({\n              createOrderItems,\n              createOrder,\n              dataOICI,\n              page,\n              customer,\n              sum,\n              router,\n            });\n          }}\n        />\n      ) : null}\n    </Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}