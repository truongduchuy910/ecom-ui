{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/ecom-ui/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { List as Products } from \"../components/Product/list\";\nimport { toAttributeGourpWhereInput } from \"../lib/chip\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { Sidebar } from \"../components/Sidebar\";\nimport { theme } from \"../config/index\";\nimport { Filter } from \"../components/Product/filter\";\nimport { css } from \"../components/src/css\";\nimport { HeaderStory } from \"../components/UI/HeaderStory\";\nimport { Fragment } from \"react\";\nimport { Feature } from \"../components/UI/Feature\";\n\nconst Index = () => {\n  const router = useRouter();\n  let query = router.query;\n  const category = query.category;\n  const categories = query.categories;\n  const brand = query.brand;\n  const search = query.search;\n  const price_from = query.price_from ? Number(query.price_from) : 0;\n  const price_to = query.price_to ? Number(query.price_to) : 999999999;\n  const attributes = toAttributeGourpWhereInput(query.attributes ? query.attributes.split(\",\") : []);\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(HeaderStory, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), __jsx(Feature, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/pages/index.js"],"names":["useRouter","List","Products","toAttributeGourpWhereInput","Container","Row","Col","Sidebar","theme","Filter","css","HeaderStory","Fragment","Feature","Index","router","query","category","categories","brand","search","price_from","Number","price_to","attributes","split"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,IAAI,IAAIC,QAAjB,QAAiC,4BAAjC;AAEA,SAASC,0BAAT,QAA2C,aAA3C;AAEA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,YAApC;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AAEA,SAASC,MAAT,QAAuB,8BAAvB;AAEA,SAASC,GAAT,QAAoB,uBAApB;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,OAAT,QAAwB,0BAAxB;;AACA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,MAAM,GAAGf,SAAS,EAAxB;AACA,MAAIgB,KAAK,GAAGD,MAAM,CAACC,KAAnB;AACA,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;AACA,QAAMC,UAAU,GAAGF,KAAK,CAACE,UAAzB;AACA,QAAMC,KAAK,GAAGH,KAAK,CAACG,KAApB;AACA,QAAMC,MAAM,GAAGJ,KAAK,CAACI,MAArB;AACA,QAAMC,UAAU,GAAGL,KAAK,CAACK,UAAN,GAAmBC,MAAM,CAACN,KAAK,CAACK,UAAP,CAAzB,GAA8C,CAAjE;AACA,QAAME,QAAQ,GAAGP,KAAK,CAACO,QAAN,GAAiBD,MAAM,CAACN,KAAK,CAACO,QAAP,CAAvB,GAA0C,SAA3D;AACA,QAAMC,UAAU,GAAGrB,0BAA0B,CAC3Ca,KAAK,CAACQ,UAAN,GAAmBR,KAAK,CAACQ,UAAN,CAAiBC,KAAjB,CAAuB,GAAvB,CAAnB,GAAiD,EADN,CAA7C;AAIA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAnBD;;AAoBA,eAAeX,KAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport { List as Products } from \"../components/Product/list\";\n\nimport { toAttributeGourpWhereInput } from \"../lib/chip\";\n\nimport { Container, Row, Col } from \"reactstrap\";\nimport { Sidebar } from \"../components/Sidebar\";\nimport { theme } from \"../config/index\";\n\nimport { Filter } from \"../components/Product/filter\";\n\nimport { css } from \"../components/src/css\";\nimport { HeaderStory } from \"../components/UI/HeaderStory\";\nimport { Fragment } from \"react\";\nimport { Feature } from \"../components/UI/Feature\";\nconst Index = () => {\n  const router = useRouter();\n  let query = router.query;\n  const category = query.category;\n  const categories = query.categories;\n  const brand = query.brand;\n  const search = query.search;\n  const price_from = query.price_from ? Number(query.price_from) : 0;\n  const price_to = query.price_to ? Number(query.price_to) : 999999999;\n  const attributes = toAttributeGourpWhereInput(\n    query.attributes ? query.attributes.split(\",\") : []\n  );\n\n  return (\n    <Fragment>\n      <HeaderStory />\n      <Feature />\n    </Fragment>\n  );\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}