{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useMemo } from \"react\";\nimport { ApolloClient } from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { HttpLink } from \"@apollo/client/link/http\";\nimport { page } from \"../config.json\";\n;\nimport { InMemoryCache, makeVar, gql } from \"@apollo/client\";\nimport { init } from \"./action\";\nexport var orderCountVar = makeVar(0);\nexport var newOrderVar = makeVar(false);\nexport var newOrderCountVar = makeVar();\nexport var customerVar = makeVar({\n  id: null\n});\nexport var refetchCustomer = makeVar( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n})));\nexport var cache = new InMemoryCache();\nvar httpLink = new HttpLink({\n  uri: page.server + \"/admin/api\",\n  credentials: \"same-origin\"\n});\nvar authLink = setContext(function (_, _ref2) {\n  var headers = _ref2.headers;\n\n  if (true) {\n    var token = localStorage.getItem(\"token\");\n    return {\n      headers: _objectSpread(_objectSpread({}, headers), {}, {\n        authorization: token ? \"Bearer \".concat(token) : \"\"\n      })\n    };\n  }\n});\n\nfunction createApolloClient() {\n  return new ApolloClient({\n    ssrMode: false,\n    link: authLink.concat(httpLink),\n    cache: cache\n  });\n}\n\nvar apolloClient;\nexport function initializeApollo() {\n  var _apolloClient2;\n\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var _apolloClient = (_apolloClient2 = apolloClient) !== null && _apolloClient2 !== void 0 ? _apolloClient2 : createApolloClient();\n\n  if (initialState) {\n    _apolloClient.cache.restore(initialState);\n  }\n\n  if (false) return _apolloClient;\n  if (!apolloClient) apolloClient = _apolloClient;\n  return _apolloClient;\n}\nexport function useApollo(initialState) {\n  var store = useMemo(function () {\n    init();\n    return initializeApollo(initialState);\n  }, [initialState]);\n  return store;\n}","map":null,"metadata":{},"sourceType":"module"}