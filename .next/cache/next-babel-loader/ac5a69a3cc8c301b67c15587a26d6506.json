{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { IoIosHeartEmpty, IoIosHeart } from \"react-icons/io\";\nimport { MdCompareArrows, MdDoneAll } from \"react-icons/md\";\nimport { removeWishListItem, addProductToLocalWishlist, addProductToLocalCompare } from \"../components/apollo/action\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { useContext, useState } from \"react\";\nimport { SellerContext } from \"../src/SellerProvider\";\nexport function ImgProduct({\n  product,\n  style,\n  onClick\n}) {\n  var _data$wishlist, _ImgSrcs$imgIndex, _ImgSrcs$imgIndex$fil;\n\n  const theme = useContext(SellerContext);\n  const {\n    data\n  } = useQuery(gql`\n    query {\n      wishlist @client\n    }\n  `);\n  const isInWishlist = data === null || data === void 0 ? void 0 : (_data$wishlist = data.wishlist) === null || _data$wishlist === void 0 ? void 0 : _data$wishlist.some(item => item.id === product.id);\n  let ImgSrcs = (product === null || product === void 0 ? void 0 : product.images) || [];\n\n  if (product.image) {\n    ImgSrcs = [{\n      file: product.image\n    }].concat(ImgSrcs);\n  }\n\n  ImgSrcs = ImgSrcs.map(src => {\n    var _src$file;\n\n    return theme.server + (src === null || src === void 0 ? void 0 : (_src$file = src.file) === null || _src$file === void 0 ? void 0 : _src$file.publicUrl);\n  });\n\n  if (product.altImages) {\n    ImgSrcs = product.altImages.split(\",\").concat(ImgSrcs);\n  }\n\n  const {\n    0: imgIndex,\n    1: setImgIndex\n  } = useState(0);\n  return __jsx(\"div\", {\n    style: {\n      position: \"inherit\"\n    }\n  }, __jsx(\"img\", {\n    src: ImgSrcs[imgIndex] ? ImgSrcs[imgIndex] : \"/img/no-img.png\",\n    onClick: onClick,\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      width: \"100%\",\n      cursor: \"pointer\"\n    }),\n    key: (_ImgSrcs$imgIndex = ImgSrcs[imgIndex]) === null || _ImgSrcs$imgIndex === void 0 ? void 0 : (_ImgSrcs$imgIndex$fil = _ImgSrcs$imgIndex.file) === null || _ImgSrcs$imgIndex$fil === void 0 ? void 0 : _ImgSrcs$imgIndex$fil.publicUrl\n  }), __jsx(\"i\", {\n    onClick: () => isInWishlist ? removeWishListItem(product) : addProductToLocalWishlist(product),\n    style: theme.css.btnIcon()\n  }, isInWishlist ? __jsx(MdDoneAll, null) : __jsx(IoIosHeartEmpty, null)));\n}","map":null,"metadata":{},"sourceType":"module"}