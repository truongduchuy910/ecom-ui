{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/media/huy/New Volume/linux/apps/ecom-ui/components/Product/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"query($first:Int,$skip:Int, $product: ProductWhereInput) {\\n        allProducts(first:$first,skip:$skip, where: $product) {\\n            id\\n            name\\n            file {\\n                publicUrl\\n            }\\n            url\\n        }\\n    }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport { useContext, useState } from \"react\";\nimport { Query, SellerContext } from \"../../apollo\";\nimport { Loading } from \"../Loading\";\nimport { One } from \"./One\";\n\nvar Products = function Products(_ref) {\n  _s();\n\n  var _ref$option = _ref.option,\n      option = _ref$option === void 0 ? 1 : _ref$option,\n      ProductWhereInput = _ref.ProductWhereInput,\n      _ref$limit = _ref.limit,\n      limit = _ref$limit === void 0 ? 3 : _ref$limit;\n  // data\n  var theme = useContext(SellerContext);\n  var variables = {\n    product: _objectSpread({\n      seller: theme.seller\n    }, ProductWhereInput),\n    first: limit,\n    skip: 0\n  };\n\n  var _useQuery = useQuery(gql(_templateObject()), {\n    variables: variables\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading,\n      fetchMore = _useQuery.fetchMore; // method\n\n\n  var _useState = useState(true),\n      mor = _useState[0],\n      setMor = _useState[1];\n\n  var more = mor ? function () {\n    try {\n      var _data$allProducts;\n\n      variables.skip = data === null || data === void 0 ? void 0 : (_data$allProducts = data.allProducts) === null || _data$allProducts === void 0 ? void 0 : _data$allProducts.length;\n      fetchMore({\n        variables: variables,\n        updateQuery: function updateQuery(prev, _ref2) {\n          var _fetchMoreResult$allP;\n\n          var fetchMoreResult = _ref2.fetchMoreResult;\n\n          if (!((_fetchMoreResult$allP = fetchMoreResult.allProducts) === null || _fetchMoreResult$allP === void 0 ? void 0 : _fetchMoreResult$allP.length)) {\n            setMor(false);\n            return prev;\n          }\n\n          return Object.assign({}, prev, {\n            allProducts: [].concat(_toConsumableArray(prev.allProducts), _toConsumableArray(fetchMoreResult.allProducts))\n          });\n        }\n      });\n    } catch (e) {\n      setMor(false);\n    }\n  } : false; // modify\n\n  var products = data === null || data === void 0 ? void 0 : data.allProducts.map(function (product) {\n    var _product$file;\n\n    return _objectSpread(_objectSpread({}, product), {}, {\n      guilde: theme.server + (product === null || product === void 0 ? void 0 : (_product$file = product.file) === null || _product$file === void 0 ? void 0 : _product$file.publicUrl)\n    });\n  }); // render\n\n  if (!(error || loading)) {\n    switch (option) {\n      case 1:\n        return __jsx(One, {\n          products: products,\n          more: more,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 28\n          }\n        });\n\n      default:\n        return __jsx(\"pre\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 24\n          }\n        }, \"Invalid components.\");\n    }\n  } else return __jsx(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  });\n};\n\n_s(Products, \"rKy3JPNpk+phplG4mr4/gNvS4us=\", false, function () {\n  return [useQuery];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/media/huy/New Volume/linux/apps/ecom-ui/components/Product/index.js"],"names":["gql","useQuery","useContext","useState","Query","SellerContext","Loading","One","Products","option","ProductWhereInput","limit","theme","variables","product","seller","first","skip","data","error","loading","fetchMore","mor","setMor","more","allProducts","length","updateQuery","prev","fetchMoreResult","Object","assign","e","products","map","guilde","server","file","publicUrl"],"mappings":"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","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\nimport { useContext, useState } from \"react\";\nimport { Query, SellerContext } from \"../../apollo\";\nimport { Loading } from \"../Loading\";\nimport { One } from \"./One\";\n\nconst Products = ({ option = 1, ProductWhereInput, limit = 3 }) => {\n    // data\n    let theme = useContext(SellerContext);\n    let variables = { product: { seller: theme.seller, ...ProductWhereInput }, first: limit, skip: 0 };\n    const { data, error, loading, fetchMore } = useQuery(gql`query($first:Int,$skip:Int, $product: ProductWhereInput) {\n        allProducts(first:$first,skip:$skip, where: $product) {\n            id\n            name\n            file {\n                publicUrl\n            }\n            url\n        }\n    }`, { variables });\n\n    // method\n    const [mor, setMor] = useState(true);\n    const more = mor ? () => {\n        try {\n            variables.skip = data?.allProducts?.length;\n            fetchMore({\n                variables,\n                updateQuery: (prev, { fetchMoreResult }) => {\n                    if (!fetchMoreResult.allProducts?.length) {\n                        setMor(false)\n                        return prev;\n                    }\n                    return Object.assign({}, prev, {\n                        allProducts: [...prev.allProducts, ...fetchMoreResult.allProducts],\n                    });\n                },\n            });\n        } catch (e) {\n            setMor(false)\n        }\n    } : false;\n    // modify\n    const products = data?.allProducts.map(product => {\n\n        return { ...product, guilde: theme.server + product?.file?.publicUrl };\n    })\n    // render\n    if (!(error || loading)) {\n        switch (option) {\n            case 1: return <One products={products} more={more} />\n            default:\n                return <pre>Invalid components.</pre>\n        }\n    } else return <Loading />\n}\nexport default Products"]},"metadata":{},"sourceType":"module"}