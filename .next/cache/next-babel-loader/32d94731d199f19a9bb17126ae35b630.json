{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _s = $RefreshSig$();\n\nimport { useQuery } from \"@apollo/client\";\nexport var Query = function Query(_ref) {\n  _s();\n\n  var query = _ref.query,\n      variables = _ref.variables,\n      children = _ref.children;\n\n  var _useQuery = useQuery(query, {\n    variables: variables\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading,\n      fetchMore = _useQuery.fetchMore;\n\n  function more() {\n    var _data$collection;\n\n    var collection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var count = (_data$collection = data[collection]) === null || _data$collection === void 0 ? void 0 : _data$collection.length;\n    variables.first = count;\n\n    try {\n      fetchMore({\n        variables: variables,\n        updateQuery: function updateQuery(prev, _ref2) {\n          var _fetchMoreResult$allP;\n\n          var fetchMoreResult = _ref2.fetchMoreResult;\n\n          if (!((_fetchMoreResult$allP = fetchMoreResult.allProducts) === null || _fetchMoreResult$allP === void 0 ? void 0 : _fetchMoreResult$allP.length)) {\n            return prev;\n          }\n\n          return Object.assign({}, prev, {\n            allProducts: [].concat(_toConsumableArray(prev.allProducts), _toConsumableArray(fetchMoreResult.allProducts))\n          });\n        }\n      });\n    } catch (e) {}\n  }\n\n  return children({\n    data: data,\n    error: error,\n    loading: loading,\n    more: more\n  });\n};\n\n_s(Query, \"H5Blujjb5lnbExdzVNMGHM2BI7U=\", false, function () {\n  return [useQuery];\n});\n\n_c = Query;\n\nvar _c;\n\n$RefreshReg$(_c, \"Query\");","map":{"version":3,"sources":["/media/huy/New Volume/linux/apps/ecom-ui/apollo/Query.js"],"names":["useQuery","Query","query","variables","children","data","error","loading","fetchMore","more","collection","count","length","first","updateQuery","prev","fetchMoreResult","allProducts","Object","assign","e"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAoC;AAAA;;AAAA,MAAjCC,KAAiC,QAAjCA,KAAiC;AAAA,MAA1BC,SAA0B,QAA1BA,SAA0B;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACXJ,QAAQ,CAACE,KAAD,EAAQ;AAAEC,IAAAA,SAAS,EAATA;AAAF,GAAR,CADG;AAAA,MAC/CE,IAD+C,aAC/CA,IAD+C;AAAA,MACzCC,KADyC,aACzCA,KADyC;AAAA,MAClCC,OADkC,aAClCA,OADkC;AAAA,MACzBC,SADyB,aACzBA,SADyB;;AAEvD,WAASC,IAAT,GAA+B;AAAA;;AAAA,QAAjBC,UAAiB,uEAAJ,EAAI;AAC7B,QAAMC,KAAK,uBAAGN,IAAI,CAACK,UAAD,CAAP,qDAAG,iBAAkBE,MAAhC;AACAT,IAAAA,SAAS,CAACU,KAAV,GAAkBF,KAAlB;;AACA,QAAI;AACFH,MAAAA,SAAS,CAAC;AACRL,QAAAA,SAAS,EAATA,SADQ;AAERW,QAAAA,WAAW,EAAE,qBAACC,IAAD,SAA+B;AAAA;;AAAA,cAAtBC,eAAsB,SAAtBA,eAAsB;;AAC1C,cAAI,2BAACA,eAAe,CAACC,WAAjB,0DAAC,sBAA6BL,MAA9B,CAAJ,EAA0C;AACxC,mBAAOG,IAAP;AACD;;AACD,iBAAOG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,IAAlB,EAAwB;AAC7BE,YAAAA,WAAW,+BAAMF,IAAI,CAACE,WAAX,sBAA2BD,eAAe,CAACC,WAA3C;AADkB,WAAxB,CAAP;AAGD;AATO,OAAD,CAAT;AAWD,KAZD,CAYE,OAAOG,CAAP,EAAU,CAAG;AAChB;;AACD,SAAOhB,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,KAAK,EAALA,KAAR;AAAeC,IAAAA,OAAO,EAAPA,OAAf;AAAwBE,IAAAA,IAAI,EAAJA;AAAxB,GAAD,CAAf;AACD,CApBM;;GAAMR,K;UACiCD,Q;;;KADjCC,K","sourcesContent":["import { useQuery } from \"@apollo/client\";\r\n\r\nexport const Query = ({ query, variables, children }) => {\r\n  const { data, error, loading, fetchMore } = useQuery(query, { variables });\r\n  function more(collection = '') {\r\n    const count = data[collection]?.length;\r\n    variables.first = count;\r\n    try {\r\n      fetchMore({\r\n        variables,\r\n        updateQuery: (prev, { fetchMoreResult }) => {\r\n          if (!fetchMoreResult.allProducts?.length) {\r\n            return prev;\r\n          }\r\n          return Object.assign({}, prev, {\r\n            allProducts: [...prev.allProducts, ...fetchMoreResult.allProducts],\r\n          });\r\n        },\r\n      });\r\n    } catch (e) { }\r\n  }\r\n  return children({ data, error, loading, more });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}