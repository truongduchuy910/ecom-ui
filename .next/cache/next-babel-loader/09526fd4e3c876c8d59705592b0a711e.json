{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/home/huy/apps/ecom-ui/components/Sidebar/filter.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($category: ID) {\\n    Category(id: $category) {\\n      id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { filterCategoryVar, filterAttributeVar } from \"../../apollo/client\";\nimport { Fragment } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nvar GET_NAME = gql(_templateObject());\nexport var Filter = function Filter(_ref) {\n  _s();\n\n  var category = _ref.category,\n      brand = _ref.brand,\n      search = _ref.search,\n      price_from = _ref.price_from,\n      price_to = _ref.price_to,\n      attributes = _ref.attributes;\n\n  var _useQuery = useQuery(GET_NAME, {\n    variables: {\n      category: category\n    }\n  }),\n      data = _useQuery.data;\n\n  console.log(data);\n  return __jsx(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }\n  });\n};\n\n_s(Filter, \"JtionF1PqWN50DPWu724eJIU2SM=\", false, function () {\n  return [useQuery];\n});\n\n_c = Filter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/components/Sidebar/filter.js"],"names":["filterCategoryVar","filterAttributeVar","Fragment","gql","useQuery","GET_NAME","Filter","category","brand","search","price_from","price_to","attributes","variables","data","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,iBAAT,EAA4BC,kBAA5B,QAAsD,qBAAtD;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,IAAMC,QAAQ,GAAGF,GAAH,mBAAd;AAQA,OAAO,IAAMG,MAAM,GAAG,SAATA,MAAS,OAOhB;AAAA;;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,KAKI,QALJA,KAKI;AAAA,MAJJC,MAII,QAJJA,MAII;AAAA,MAHJC,UAGI,QAHJA,UAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADJC,UACI,QADJA,UACI;;AAAA,kBACaR,QAAQ,CAACC,QAAD,EAAW;AAAEQ,IAAAA,SAAS,EAAE;AAAEN,MAAAA,QAAQ,EAARA;AAAF;AAAb,GAAX,CADrB;AAAA,MACIO,IADJ,aACIA,IADJ;;AAEJC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAO,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAXM;;GAAMR,M;UAQMF,Q;;;KARNE,M","sourcesContent":["import { filterCategoryVar, filterAttributeVar } from \"../../apollo/client\";\nimport { Fragment } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nconst GET_NAME = gql`\n  query($category: ID) {\n    Category(id: $category) {\n      id\n      name\n    }\n  }\n`;\nexport const Filter = ({\n  category,\n  brand,\n  search,\n  price_from,\n  price_to,\n  attributes,\n}) => {\n  const { data } = useQuery(GET_NAME, { variables: { category } });\n  console.log(data);\n  return <Fragment></Fragment>;\n};\n"]},"metadata":{},"sourceType":"module"}