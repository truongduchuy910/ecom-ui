{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/ecom-ui/components/AttributeGroups/listOne.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// show in product detail\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Item } from \"./itemOne\";\nimport { Fragment } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport { queryVar } from \"../../apollo/action\";\nimport { page } from \"../../config\";\nimport { Spinner } from \"reactstrap\";\nconst GET_ATTRIBUTES = gql`\n  query($seller: UserWhereInput) {\n    allAttributes(where: { seller: $seller }) {\n      id\n      name\n      url\n    }\n  }\n`;\nexport function List({\n  attributeGroups\n}) {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, attributeGroups.name), attributeGroups === null || attributeGroups === void 0 ? void 0 : attributeGroups.map(attributeGroup => __jsx(Item, {\n    key: attributeGroup.id,\n    attributeGroup: attributeGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/components/AttributeGroups/listOne.js"],"names":["gql","useQuery","Item","Fragment","useRouter","Link","queryVar","page","Spinner","GET_ATTRIBUTES","List","attributeGroups","name","map","attributeGroup","id"],"mappings":";;;AAAA;AACA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,MAAMC,cAAc,GAAGT,GAAI;;;;;;;;CAA3B;AASA,OAAO,SAASU,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAmC;AACxC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,eAAe,CAACC,IAArB,CADF,EAEGD,eAFH,aAEGA,eAFH,uBAEGA,eAAe,CAAEE,GAAjB,CAAsBC,cAAD,IACpB,MAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,cAAc,CAACC,EAA1B;AAA8B,IAAA,cAAc,EAAED,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFH,CADF;AAQD","sourcesContent":["// show in product detail\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Item } from \"./itemOne\";\nimport { Fragment } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport { queryVar } from \"../../apollo/action\";\nimport { page } from \"../../config\";\nimport { Spinner } from \"reactstrap\";\nconst GET_ATTRIBUTES = gql`\n  query($seller: UserWhereInput) {\n    allAttributes(where: { seller: $seller }) {\n      id\n      name\n      url\n    }\n  }\n`;\nexport function List({ attributeGroups }) {\n  return (\n    <div>\n      <h6>{attributeGroups.name}</h6>\n      {attributeGroups?.map((attributeGroup) => (\n        <Item key={attributeGroup.id} attributeGroup={attributeGroup} />\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}