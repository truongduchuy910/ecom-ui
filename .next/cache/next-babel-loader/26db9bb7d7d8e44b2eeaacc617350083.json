{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/huy/apps/ecom-ui/components/Cart/quickCart.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, Fragment } from \"react\";\nimport { Create as CreateCustomer } from \"../Customer/create\";\nimport { CREATE_ORDER_ITEMS, CREATE_ORDER, CART } from \".\";\nimport { useMutation } from \"@apollo/client\";\nexport var QuickCart = function QuickCart(_ref) {\n  _s();\n\n  var onClick = _ref.onClick;\n\n  // query\n  var _useQuery = useQuery(CART),\n      cartData = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error; // mutation\n\n\n  var _useMutation = useMutation(CREATE_ORDER_ITEMS),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createOrderItems = _useMutation2[0];\n\n  var _useMutation3 = useMutation(CREATE_ORDER),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      createOrder = _useMutation4[0];\n\n  if (loading || error || !cartData) return __jsx(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 45\n    }\n  });\n  var cartItems = cartData.cartItems;\n  var sum = 0;\n  cartItems === null || cartItems === void 0 ? void 0 : cartItems.map(function (cartItem) {\n    sum += cartItem.price;\n  }); // create OrderItemsCreateInputs (GraphQL type)\n\n  var dataOICI = OrderItemsCreateInputs(cartItems);\n  dataOICI === null || dataOICI === void 0 ? void 0 : dataOICI.map(function (data) {\n    return data.data.ofSeller = {\n      connect: {\n        id: page.seller.id\n      }\n    };\n  });\n\n  var order = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var customer, _yield$createOrderIte, dataCOI, error, variables, _yield$createOrder, dataCreateOrder, ER;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              customer = _ref2.customer;\n              _context.next = 3;\n              return createOrderItems({\n                variables: {\n                  data: dataOICI\n                }\n              });\n\n            case 3:\n              _yield$createOrderIte = _context.sent;\n              dataCOI = _yield$createOrderIte.data;\n              error = _yield$createOrderIte.error;\n\n              if (!dataCOI.createOrderItems) {\n                _context.next = 22;\n                break;\n              }\n\n              variables = {\n                items: dataCOI.createOrderItems.map(function (e) {\n                  return {\n                    id: e.id\n                  };\n                }),\n                customer: {\n                  id: customer.id\n                },\n                ofSeller: {\n                  id: page.seller.id\n                },\n                total: sum\n              };\n              _context.prev = 8;\n              _context.next = 11;\n              return createOrder({\n                variables: variables\n              });\n\n            case 11:\n              _yield$createOrder = _context.sent;\n              dataCreateOrder = _yield$createOrder.data;\n              ER = _yield$createOrder.errors;\n              newOrderVar(true);\n              newOrderCountVar(true);\n              emptyCart();\n              router.push({\n                pathname: \"/order\"\n              });\n              _context.next = 22;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](8);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[8, 20]]);\n    }));\n\n    return function order(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(CreateCustomer, {\n    onCreate: function onCreate(_ref4) {\n      var customer = _ref4.customer;\n      order({\n        customer: customer\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(QuickCart, \"kxf5Q9aMUDAX3f7uUnpdhOAj82s=\", true, function () {\n  return [useMutation, useMutation];\n});\n\n_c = QuickCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuickCart\");","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/components/Cart/quickCart.js"],"names":["useState","Fragment","Create","CreateCustomer","CREATE_ORDER_ITEMS","CREATE_ORDER","CART","useMutation","QuickCart","onClick","useQuery","cartData","data","loading","error","createOrderItems","createOrder","cartItems","sum","map","cartItem","price","dataOICI","OrderItemsCreateInputs","ofSeller","connect","id","page","seller","order","customer","variables","dataCOI","items","e","total","dataCreateOrder","ER","errors","newOrderVar","newOrderCountVar","emptyCart","router","push","pathname"],"mappings":"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","sourcesContent":["import { useState, Fragment } from \"react\";\n\nimport { Create as CreateCustomer } from \"../Customer/create\";\nimport { CREATE_ORDER_ITEMS, CREATE_ORDER, CART } from \".\";\nimport { useMutation } from \"@apollo/client\";\nexport const QuickCart = ({ onClick }) => {\n  // query\n  const { data: cartData, loading, error } = useQuery(CART);\n  // mutation\n  const [createOrderItems] = useMutation(CREATE_ORDER_ITEMS);\n  const [createOrder] = useMutation(CREATE_ORDER);\n\n  if (loading || error || !cartData) return <Loading />;\n\n  const { cartItems } = cartData;\n  let sum = 0;\n  cartItems?.map((cartItem) => {\n    sum += cartItem.price;\n  });\n\n  // create OrderItemsCreateInputs (GraphQL type)\n  let dataOICI = OrderItemsCreateInputs(cartItems);\n  dataOICI?.map(\n    (data) => (data.data.ofSeller = { connect: { id: page.seller.id } })\n  );\n  const order = async ({ customer }) => {\n    // create cart items\n    const { data: dataCOI, error } = await createOrderItems({\n      variables: {\n        data: dataOICI,\n      },\n    });\n    // creat cart and connect cart items\n    if (dataCOI.createOrderItems) {\n      let variables = {\n        items: dataCOI.createOrderItems.map((e) => ({\n          id: e.id,\n        })),\n        customer: { id: customer.id },\n        ofSeller: { id: page.seller.id },\n        total: sum,\n      };\n      try {\n        const { data: dataCreateOrder, errors: ER } = await createOrder({\n          variables,\n        });\n        newOrderVar(true);\n        newOrderCountVar(true);\n        emptyCart();\n        router.push({ pathname: \"/order\" });\n      } catch {}\n    }\n  };\n  return (\n    <Fragment>\n      <CreateCustomer\n        onCreate={({ customer }) => {\n          order({ customer });\n        }}\n      />\n    </Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}