{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/huy/apps/ecom-ui/components/Cart/quickCart.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, Fragment } from \"react\";\nimport { Create as CreateCustomer } from \"../Customer/create\";\nimport { CREATE_ORDER_ITEMS, CREATE_ORDER, CART } from \".\";\nimport { useMutation } from \"@apollo/client\";\nexport var QuickCart = function QuickCart(_ref) {\n  _s();\n\n  var onClick = _ref.onClick;\n\n  var _useMutation = useMutation(CREATE_ORDER_ITEMS),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createOrderItems = _useMutation2[0];\n\n  var _useMutation3 = useMutation(CREATE_ORDER),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      createOrder = _useMutation4[0];\n\n  var _useQuery = useQuery(CART),\n      cartData = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var order = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$createOrderIte, dataCOI, error, variables, _yield$createOrder, dataCreateOrder, ER;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return createOrderItems({\n                variables: {\n                  data: dataOICI\n                }\n              });\n\n            case 2:\n              _yield$createOrderIte = _context.sent;\n              dataCOI = _yield$createOrderIte.data;\n              error = _yield$createOrderIte.error;\n\n              if (!dataCOI.createOrderItems) {\n                _context.next = 21;\n                break;\n              }\n\n              variables = {\n                items: dataCOI.createOrderItems.map(function (e) {\n                  return {\n                    id: e.id\n                  };\n                }),\n                ofSeller: {\n                  id: page.seller.id\n                },\n                total: sum\n              };\n              _context.prev = 7;\n              _context.next = 10;\n              return createOrder({\n                variables: variables\n              });\n\n            case 10:\n              _yield$createOrder = _context.sent;\n              dataCreateOrder = _yield$createOrder.data;\n              ER = _yield$createOrder.errors;\n              newOrderVar(true);\n              newOrderCountVar(true);\n              emptyCart();\n              router.push({\n                pathname: \"/order\"\n              });\n              _context.next = 21;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](7);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[7, 19]]);\n    }));\n\n    return function order() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(CreateCustomer, {\n    onCreate: function onCreate() {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(QuickCart, \"YN0z3W5ndiNs80hGxdLFXyMQG6Y=\", true, function () {\n  return [useMutation, useMutation];\n});\n\n_c = QuickCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuickCart\");","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/components/Cart/quickCart.js"],"names":["useState","Fragment","Create","CreateCustomer","CREATE_ORDER_ITEMS","CREATE_ORDER","CART","useMutation","QuickCart","onClick","createOrderItems","createOrder","useQuery","cartData","data","loading","error","order","variables","dataOICI","dataCOI","items","map","e","id","ofSeller","page","seller","total","sum","dataCreateOrder","ER","errors","newOrderVar","newOrderCountVar","emptyCart","router","push","pathname"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AAEA,SAASC,MAAM,IAAIC,cAAnB,QAAyC,oBAAzC;AACA,SAASC,kBAAT,EAA6BC,YAA7B,EAA2CC,IAA3C,QAAuD,GAAvD;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAiB;AAAA;;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,qBACbF,WAAW,CAACH,kBAAD,CADE;AAAA;AAAA,MACjCM,gBADiC;;AAAA,sBAElBH,WAAW,CAACF,YAAD,CAFO;AAAA;AAAA,MAEjCM,WAFiC;;AAAA,kBAGGC,QAAQ,CAACN,IAAD,CAHX;AAAA,MAG1BO,QAH0B,aAGhCC,IAHgC;AAAA,MAGhBC,OAHgB,aAGhBA,OAHgB;AAAA,MAGPC,KAHO,aAGPA,KAHO;;AAKxC,MAAMC,KAAK;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAE2BP,gBAAgB,CAAC;AACtDQ,gBAAAA,SAAS,EAAE;AACTJ,kBAAAA,IAAI,EAAEK;AADG;AAD2C,eAAD,CAF3C;;AAAA;AAAA;AAEEC,cAAAA,OAFF,yBAEJN,IAFI;AAEWE,cAAAA,KAFX,yBAEWA,KAFX;;AAAA,mBAQRI,OAAO,CAACV,gBARA;AAAA;AAAA;AAAA;;AASNQ,cAAAA,SATM,GASM;AACdG,gBAAAA,KAAK,EAAED,OAAO,CAACV,gBAAR,CAAyBY,GAAzB,CAA6B,UAACC,CAAD;AAAA,yBAAQ;AAC1CC,oBAAAA,EAAE,EAAED,CAAC,CAACC;AADoC,mBAAR;AAAA,iBAA7B,CADO;AAIdC,gBAAAA,QAAQ,EAAE;AAAED,kBAAAA,EAAE,EAAEE,IAAI,CAACC,MAAL,CAAYH;AAAlB,iBAJI;AAKdI,gBAAAA,KAAK,EAAEC;AALO,eATN;AAAA;AAAA;AAAA,qBAiB4ClB,WAAW,CAAC;AAC9DO,gBAAAA,SAAS,EAATA;AAD8D,eAAD,CAjBvD;;AAAA;AAAA;AAiBMY,cAAAA,eAjBN,sBAiBAhB,IAjBA;AAiB+BiB,cAAAA,EAjB/B,sBAiBuBC,MAjBvB;AAoBRC,cAAAA,WAAW,CAAC,IAAD,CAAX;AACAC,cAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAC,cAAAA,SAAS;AACTC,cAAAA,MAAM,CAACC,IAAP,CAAY;AAAEC,gBAAAA,QAAQ,EAAE;AAAZ,eAAZ;AAvBQ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAALrB,KAAK;AAAA;AAAA;AAAA,KAAX;;AA2BA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAgB,IAAA,QAAQ,EAAE,oBAAM,CAAE,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CArCM;;GAAMT,S;UACgBD,W,EACLA,W;;;KAFXC,S","sourcesContent":["import { useState, Fragment } from \"react\";\n\nimport { Create as CreateCustomer } from \"../Customer/create\";\nimport { CREATE_ORDER_ITEMS, CREATE_ORDER, CART } from \".\";\nimport { useMutation } from \"@apollo/client\";\nexport const QuickCart = ({ onClick }) => {\n  const [createOrderItems] = useMutation(CREATE_ORDER_ITEMS);\n  const [createOrder] = useMutation(CREATE_ORDER);\n  const { data: cartData, loading, error } = useQuery(CART);\n\n  const order = async () => {\n    // create cart items\n    const { data: dataCOI, error } = await createOrderItems({\n      variables: {\n        data: dataOICI,\n      },\n    });\n    // creat cart and connect cart items\n    if (dataCOI.createOrderItems) {\n      let variables = {\n        items: dataCOI.createOrderItems.map((e) => ({\n          id: e.id,\n        })),\n        ofSeller: { id: page.seller.id },\n        total: sum,\n      };\n      try {\n        const { data: dataCreateOrder, errors: ER } = await createOrder({\n          variables,\n        });\n        newOrderVar(true);\n        newOrderCountVar(true);\n        emptyCart();\n        router.push({ pathname: \"/order\" });\n      } catch {}\n    }\n  };\n  return (\n    <Fragment>\n      <CreateCustomer onCreate={() => {}} />\n    </Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}