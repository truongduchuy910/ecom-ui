{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($seller: UserWhereInput) {\\n    allAttributes(where: { seller: $seller }) {\\n      id\\n      name\\n      url\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// show in product detail\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Item } from \"./itemOne\";\nimport { Fragment, useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Link } from \"../src/Link\";\nimport { queryVar } from \"../../components/apollo/action\";\nimport { Spinner, Row, Col } from \"reactstrap\";\nimport { SellerContext } from \"../src/SellerProvider\";\nvar GET_ATTRIBUTES = gql(_templateObject());\nexport function List(_ref) {\n  var attributeGroups = _ref.attributeGroups;\n  var theme = useContext(SellerContext);\n  return __jsx(\"div\", null, attributeGroups === null || attributeGroups === void 0 ? void 0 : attributeGroups.map(function (attributeGroup) {\n    return __jsx(Row, {\n      key: attributeGroup.id\n    }, __jsx(Col, {\n      xs: 4\n    }, __jsx(\"h5\", {\n      style: _objectSpread({}, theme.css.h5)\n    }, attributeGroup.name, \":\")), __jsx(Col, {\n      xs: 8\n    }, __jsx(Item, {\n      attributeGroup: attributeGroup\n    })));\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}