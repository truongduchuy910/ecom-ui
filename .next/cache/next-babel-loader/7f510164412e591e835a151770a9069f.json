{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useMemo } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { page } from \"../../config.json\";\nimport { refetchCustomer, customerVar } from \"../../apollo/client\";\nimport { useRouter } from \"next/router\";\nimport { chooseCustomer } from \"../../apollo/action\";\nconst CREATE_CUSTOMER = gql`\n  mutation($data: CustomerCreateInput) {\n    createCustomer(data: $data) {\n      id\n      phone\n      name\n      address\n    }\n  }\n`;\nexport function Create({\n  onSubmit\n}) {\n  const {\n    0: phone,\n    1: setPhone\n  } = useState();\n  const {\n    0: name,\n    1: setName\n  } = useState();\n  const {\n    0: address,\n    1: setAddress\n  } = useState();\n  const [createCustomer] = useMutation(CREATE_CUSTOMER);\n  const router = useRouter();\n\n  const submit = async e => {\n    /**\n     * Prevent submit from reloading the page\n     */\n    e.preventDefault();\n    e.stopPropagation();\n    const {\n      phone,\n      name,\n      address\n    } = e.target;\n    const {\n      data\n    } = await createCustomer({\n      variables: {\n        data: {\n          phone: phone.value,\n          name: name.value,\n          address: address.value,\n          ofSeller: {\n            connect: {\n              id: page.seller.id\n            }\n          }\n        }\n      }\n    });\n    chooseCustomer({\n      customer: data.createCustomer\n    });\n    setName(\"\");\n    setPhone(\"\");\n    setAddress(\"\");\n    onSubmit();\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: submit\n  }, __jsx(\"h5\", null, \"T\\u1EA1o \\u0110\\u1ECBa Ch\\u1EC9 Nh\\u1EADn M\\u1EDBi\"), __jsx(\"input\", {\n    required: true,\n    name: \"name\",\n    placeholder: \"T\\xEAn\",\n    value: name,\n    onChange: e => setName(e.target.value)\n  }), __jsx(\"input\", {\n    required: true,\n    name: \"phone\",\n    placeholder: \"\\u0110i\\u1EC7n Tho\\u1EA1i\",\n    type: \"number\",\n    value: phone,\n    onChange: e => setPhone(e.target.value)\n  }), __jsx(\"input\", {\n    required: true,\n    name: \"address\",\n    placeholder: \"\\u0110\\u1ECBa Ch\\u1EC9\",\n    value: address,\n    onChange: e => setAddress(e.target.value)\n  }), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"T\\u1EA1o\"));\n}","map":null,"metadata":{},"sourceType":"module"}