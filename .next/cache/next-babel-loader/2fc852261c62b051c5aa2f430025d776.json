{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/ecom-ui/components/Customer/create.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useMemo } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { page } from \"../../config/yensaodatquang.json\";\nimport { refetchCustomer, customerVar } from \"../../apollo/client\";\nimport { useRouter } from \"next/router\";\nimport { chooseCustomer } from \"../../apollo/action\";\nimport { css } from \"../src/css\";\nimport theme from \"../src/theme\";\nconst CREATE_CUSTOMER = gql`\n  mutation($data: CustomerCreateInput) {\n    createCustomer(data: $data) {\n      id\n      phone\n      name\n      address\n    }\n  }\n`;\nexport function Create({\n  onSubmit\n}) {\n  const {\n    0: phone,\n    1: setPhone\n  } = useState();\n  const {\n    0: name,\n    1: setName\n  } = useState();\n  const {\n    0: address,\n    1: setAddress\n  } = useState();\n  const [createCustomer] = useMutation(CREATE_CUSTOMER);\n  const router = useRouter();\n\n  const submit = async e => {\n    /**\n     * Prevent submit from reloading the page\n     */\n    e.preventDefault();\n    e.stopPropagation();\n    const {\n      phone,\n      name,\n      address\n    } = e.target;\n    const {\n      data\n    } = await createCustomer({\n      variables: {\n        data: {\n          phone: phone.value,\n          name: name.value,\n          address: address.value,\n          ofSeller: {\n            connect: {\n              id: page.seller.id\n            }\n          }\n        }\n      }\n    });\n    chooseCustomer({\n      customer: data.createCustomer\n    });\n    setName(\"\");\n    setPhone(\"\");\n    setAddress(\"\");\n    onSubmit();\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"T\\u1EA1o \\u0110\\u1ECBa Ch\\u1EC9 Nh\\u1EADn M\\u1EDBi\"), __jsx(\"input\", {\n    required: true,\n    name: \"name\",\n    placeholder: \"T\\xEAn\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), __jsx(\"input\", {\n    required: true,\n    name: \"phone\",\n    placeholder: \"\\u0110i\\u1EC7n Tho\\u1EA1i\",\n    type: \"number\",\n    value: phone,\n    onChange: e => setPhone(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), __jsx(\"input\", {\n    style: _objectSpread(_objectSpread({}, css.input), {}, {\n      width: \"100%\",\n      marginBottom: theme.spacing(3)\n    }),\n    required: true,\n    name: \"address\",\n    placeholder: \"\\u0110\\u1ECBa Ch\\u1EC9\",\n    value: address,\n    onChange: e => setAddress(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"T\\u1EA1o\"));\n}","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/components/Customer/create.js"],"names":["useState","useMemo","gql","useMutation","page","refetchCustomer","customerVar","useRouter","chooseCustomer","css","theme","CREATE_CUSTOMER","Create","onSubmit","phone","setPhone","name","setName","address","setAddress","createCustomer","router","submit","e","preventDefault","stopPropagation","target","data","variables","value","ofSeller","connect","id","seller","customer","input","width","marginBottom","spacing"],"mappings":"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","sourcesContent":["import { useState, useMemo } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { page } from \"../../config/yensaodatquang.json\";\nimport { refetchCustomer, customerVar } from \"../../apollo/client\";\nimport { useRouter } from \"next/router\";\nimport { chooseCustomer } from \"../../apollo/action\";\nimport { css } from \"../src/css\";\nimport theme from \"../src/theme\";\nconst CREATE_CUSTOMER = gql`\n  mutation($data: CustomerCreateInput) {\n    createCustomer(data: $data) {\n      id\n      phone\n      name\n      address\n    }\n  }\n`;\nexport function Create({ onSubmit }) {\n  const [phone, setPhone] = useState();\n  const [name, setName] = useState();\n  const [address, setAddress] = useState();\n  const [createCustomer] = useMutation(CREATE_CUSTOMER);\n  const router = useRouter();\n\n  const submit = async (e) => {\n    /**\n     * Prevent submit from reloading the page\n     */\n    e.preventDefault();\n    e.stopPropagation();\n    const { phone, name, address } = e.target;\n    const { data } = await createCustomer({\n      variables: {\n        data: {\n          phone: phone.value,\n          name: name.value,\n          address: address.value,\n          ofSeller: { connect: { id: page.seller.id } },\n        },\n      },\n    });\n    chooseCustomer({ customer: data.createCustomer });\n\n    setName(\"\");\n    setPhone(\"\");\n    setAddress(\"\");\n\n    onSubmit();\n  };\n  return (\n    <form onSubmit={submit}>\n      <h5>Tạo Địa Chỉ Nhận Mới</h5>\n      <input\n        required\n        name=\"name\"\n        placeholder=\"Tên\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <input\n        required\n        name=\"phone\"\n        placeholder=\"Điện Thoại\"\n        type=\"number\"\n        value={phone}\n        onChange={(e) => setPhone(e.target.value)}\n      />\n\n      <input\n        style={{ ...css.input, width: \"100%\", marginBottom: theme.spacing(3) }}\n        required\n        name=\"address\"\n        placeholder=\"Địa Chỉ\"\n        value={address}\n        onChange={(e) => setAddress(e.target.value)}\n      />\n      <button type=\"submit\">Tạo</button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}