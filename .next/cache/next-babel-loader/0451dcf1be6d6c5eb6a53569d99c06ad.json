{"ast":null,"code":"var _jsxFileName = \"/media/huy/New Volume/linux/apps/ecom-ui/pages/products.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { Fragment } from \"react\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport Categories from \"../components/Category\";\nimport Products from \"../components/Product/List/index\";\nimport Item from \"../components/Product/Item/index\";\nimport Attributes from \"../components/Attribute\";\nimport Brands from \"../components/Brand\";\nexport default function ProductDetali() {\n  const router = useRouter();\n  const query = router.query;\n  const {\n    category,\n    attribute,\n    brand\n  } = query;\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, __jsx(Categories, {\n    onChoose: category => {\n      query.category = category.url;\n      router.push({\n        pathname: \"/products\",\n        query\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }), __jsx(Attributes, {\n    onChoose: attribute => {\n      query.attribute = attribute.url;\n      router.push({\n        pathname: \"/products\",\n        query\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), __jsx(Brands, {\n    onChoose: brand => {\n      query.brand = brand.url;\n      router.push({\n        pathname: \"/products\",\n        query\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  })), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, __jsx(Products, {\n    ProductWhereInput: {\n      OR: [{\n        category: {\n          url: category\n        }\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/media/huy/New Volume/linux/apps/ecom-ui/pages/products.js"],"names":["useRouter","Fragment","Col","Container","Row","Categories","Products","Item","Attributes","Brands","ProductDetali","router","query","category","attribute","brand","url","push","pathname","OR"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,YAApC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,IAAP,MAAiB,kCAAjB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,eAAe,SAASC,aAAT,GAAyB;AACtC,QAAMC,MAAM,GAAGX,SAAS,EAAxB;AACA,QAAMY,KAAK,GAAGD,MAAM,CAACC,KAArB;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,MAAiCH,KAAvC;AACA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,QAAQ,EAAGC,QAAD,IAAc;AACtBD,MAAAA,KAAK,CAACC,QAAN,GAAiBA,QAAQ,CAACG,GAA1B;AACAL,MAAAA,MAAM,CAACM,IAAP,CAAY;AACVC,QAAAA,QAAQ,EAAE,WADA;AAEVN,QAAAA;AAFU,OAAZ;AAID,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,MAAC,UAAD;AACE,IAAA,QAAQ,EAAGE,SAAD,IAAe;AACvBF,MAAAA,KAAK,CAACE,SAAN,GAAkBA,SAAS,CAACE,GAA5B;AACAL,MAAAA,MAAM,CAACM,IAAP,CAAY;AACVC,QAAAA,QAAQ,EAAE,WADA;AAEVN,QAAAA;AAFU,OAAZ;AAID,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAmBE,MAAC,MAAD;AACE,IAAA,QAAQ,EAAGG,KAAD,IAAW;AACnBH,MAAAA,KAAK,CAACG,KAAN,GAAcA,KAAK,CAACC,GAApB;AACAL,MAAAA,MAAM,CAACM,IAAP,CAAY;AACVC,QAAAA,QAAQ,EAAE,WADA;AAEVN,QAAAA;AAFU,OAAZ;AAID,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF,EA8BE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AACE,IAAA,iBAAiB,EAAE;AAAEO,MAAAA,EAAE,EAAE,CAAC;AAAEN,QAAAA,QAAQ,EAAE;AAAEG,UAAAA,GAAG,EAAEH;AAAP;AAAZ,OAAD;AAAN,KADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA9BF,CADF,CADF,CADF;AA0CD","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport { Fragment } from \"react\";\r\nimport { Col, Container, Row } from \"reactstrap\";\r\nimport Categories from \"../components/Category\";\r\nimport Products from \"../components/Product/List/index\";\r\nimport Item from \"../components/Product/Item/index\";\r\nimport Attributes from \"../components/Attribute\";\r\nimport Brands from \"../components/Brand\";\r\nexport default function ProductDetali() {\r\n  const router = useRouter();\r\n  const query = router.query;\r\n  const { category, attribute, brand } = query;\r\n  return (\r\n    <Fragment>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Categories\r\n              onChoose={(category) => {\r\n                query.category = category.url;\r\n                router.push({\r\n                  pathname: \"/products\",\r\n                  query,\r\n                });\r\n              }}\r\n            />\r\n            <Attributes\r\n              onChoose={(attribute) => {\r\n                query.attribute = attribute.url;\r\n                router.push({\r\n                  pathname: \"/products\",\r\n                  query,\r\n                });\r\n              }}\r\n            />\r\n            <Brands\r\n              onChoose={(brand) => {\r\n                query.brand = brand.url;\r\n                router.push({\r\n                  pathname: \"/products\",\r\n                  query,\r\n                });\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <Products\r\n              ProductWhereInput={{ OR: [{ category: { url: category } }] }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}