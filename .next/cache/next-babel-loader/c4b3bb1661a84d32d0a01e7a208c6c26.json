{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    customer @client\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    compare @client\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    wishlist @client\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    cartItems @client\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    user @client\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { cache } from \"./client\";\nimport { makeVar, gql } from \"@apollo/client\";\nexport var USER = gql(_templateObject());\nexport var CART = gql(_templateObject2());\nexport var WISHLIST = gql(_templateObject3());\nexport var COMPARE = gql(_templateObject4());\nexport var CUSTOMER = gql(_templateObject5()); // initialize\n\nexport var init = function init() {\n  cache.writeQuery({\n    query: USER,\n    data: {\n      user: true ? JSON.parse(localStorage.getItem(\"user\")) : {\n        id: null,\n        email: null,\n        isAdmin: null,\n        isSeller: null\n      }\n    }\n  });\n  cache.writeQuery({\n    query: CART,\n    data: {\n      cartItems: true ? JSON.parse(localStorage.getItem(\"cartItems\") || '{ \"data\": [] }').data : null\n    }\n  });\n  cache.writeQuery({\n    query: COMPARE,\n    data: {\n      compare: true ? JSON.parse(localStorage.getItem(\"compare\") || '{ \"data\": [] }').data : null\n    }\n  });\n  cache.writeQuery({\n    query: WISHLIST,\n    data: {\n      wishlist: true ? JSON.parse(localStorage.getItem(\"wishlist\") || '{ \"data\": [] }').data : null\n    }\n  });\n  cache.writeQuery({\n    query: CUSTOMER,\n    data: {\n      customer: {\n        phone: null,\n        name: null,\n        address: null\n      }\n    }\n  });\n};\n\nvar modifyUser = function modifyUser(_ref) {\n  var _user = _ref.user;\n\n  if (true) {\n    if (_user) {\n      localStorage.setItem(\"user\", JSON.stringify(_user));\n    } else {\n      localStorage.removeItem(\"user\");\n    }\n\n    cache.modify({\n      fields: {\n        user: function user() {\n          return _user;\n        }\n      }\n    });\n  }\n};\n\nvar modifyCart = function modifyCart(_ref2) {\n  var items = _ref2.items;\n\n  if (true) {\n    localStorage.setItem(\"cartItems\", JSON.stringify({\n      data: items\n    }));\n    cache.modify({\n      fields: {\n        cartItems: function cartItems() {\n          return items;\n        }\n      }\n    });\n  }\n};\n\nvar modifyWishlist = function modifyWishlist(_ref3) {\n  var items = _ref3.items;\n\n  if (true) {\n    localStorage.setItem(\"wishlist\", JSON.stringify({\n      data: items\n    }));\n    cache.modify({\n      fields: {\n        wishlist: function wishlist() {\n          return items;\n        }\n      }\n    });\n  }\n};\n\nvar modifyCompare = function modifyCompare(_ref4) {\n  var items = _ref4.items;\n\n  if (true) {\n    localStorage.setItem(\"compare\", JSON.stringify({\n      data: items\n    }));\n    cache.modify({\n      fields: {\n        compare: function compare() {\n          return items;\n        }\n      }\n    });\n  }\n};\n\nvar modifyCustomer = function modifyCustomer(_ref5) {\n  var _customer = _ref5.customer;\n\n  if (true) {\n    if (_customer) {\n      localStorage.setItem(\"customer\", JSON.stringify(_customer));\n    } else {\n      localStorage.removeItem(\"customer\");\n    }\n\n    cache.modify({\n      fields: {\n        customer: function customer() {\n          return _customer;\n        }\n      }\n    });\n  }\n};\n/* \n    you can use client variable below\n*/\n\n\nexport var emptyCompare = function emptyCompare() {\n  modifyCompare({\n    items: []\n  });\n};\nexport var removeCompareItem = function removeCompareItem(removeItem) {\n  var products = [];\n\n  try {\n    // get\n    products = JSON.parse(localStorage.getItem(\"compare\") || '{ \"data\": [] }').data;\n  } catch (_unused) {} // change\n\n\n  var items = [];\n  products.map(function (product) {\n    if (product.id !== removeItem.id) items.push(product);\n  });\n  modifyCompare({\n    items: items\n  });\n};\nexport function addProductToLocalCompare(newProduct) {\n  // get\n  var products = [];\n\n  try {\n    products = JSON.parse(localStorage.getItem(\"compare\") || '{ \"data\": [] }').data;\n  } catch (_unused2) {} // change\n\n\n  var others = [];\n  products.map(function (product) {\n    if (product.id !== newProduct.id) {\n      others.push(product);\n    }\n  });\n  var items = [].concat(others, [newProduct]); // save\n\n  modifyCompare({\n    items: items\n  });\n}\nexport var onSignIn = function onSignIn(_ref6) {\n  var user = _ref6.user;\n  modifyUser({\n    user: user\n  });\n};\nexport var onSignOut = function onSignOut() {\n  modifyUser({\n    user: null\n  });\n};\nexport var chooseCustomer = function chooseCustomer(_ref7) {\n  var customer = _ref7.customer;\n  modifyCustomer({\n    customer: customer\n  });\n};\nexport var emptyCart = function emptyCart() {\n  modifyCart({\n    items: []\n  });\n};\nexport var removeCartItem = function removeCartItem(removeItem) {\n  // get\n  var cartItems = JSON.parse(localStorage.getItem(\"cartItems\") || '{ \"data\": [] }').data; // change\n\n  var items = [];\n  cartItems.map(function (item) {\n    if (item.product.id !== removeItem.product.id) items.push(item);\n  });\n  modifyCart({\n    items: items\n  });\n};\nexport var changeCartItem = function changeCartItem(cartItem, change) {\n  // get\n  var cartItems = [];\n\n  try {\n    cartItems = JSON.parse(localStorage.getItem(\"cartItems\") || '{ \"data\": [] }').data;\n  } catch (_unused3) {} // change\n\n\n  var items = [];\n  var price = cartItem.product.price - cartItem.product.sale;\n  cartItems.map(function (item, index) {\n    var quantity = item.quantity + change > 0 ? item.quantity + change : item.quantity;\n\n    if (item.product.id !== cartItem.product.id) {\n      items.push(item);\n    } else {\n      items.push({\n        product: item.product,\n        quantity: quantity,\n        price: price * quantity\n      });\n    }\n  }); // save\n\n  modifyCart({\n    items: items\n  });\n};\nexport function addProductToLocalCart(_ref8) {\n  var product = _ref8.product,\n      variables = _ref8.variables;\n  // get\n  var cartItems = [];\n\n  try {\n    cartItems = JSON.parse(localStorage.getItem(\"cartItems\") || '{ \"data\": [] }').data;\n  } catch (_unused4) {} // change\n\n\n  var items = [];\n  var exist = false;\n  var price = product.price - product.sale;\n  cartItems.map(function (cartItem) {\n    if (cartItem.product.id !== product.id) {\n      items.push(cartItem);\n    } else {\n      exist = true;\n      items.push({\n        product: cartItem.product,\n        quantity: cartItem.quantity + 1,\n        price: price * (cartItem.quantity + 1)\n      });\n    }\n  });\n  if (exist === false) items.push({\n    product: product,\n    quantity: 1,\n    price: price\n  }); // save\n\n  modifyCart({\n    items: items\n  });\n}\nexport var emptyWishlist = function emptyWishlist() {\n  modifyWishlist({\n    items: []\n  });\n};\nexport var removeWishListItem = function removeWishListItem(removeItem) {\n  var products = [];\n\n  try {\n    // get\n    products = JSON.parse(localStorage.getItem(\"wishlist\") || '{ \"data\": [] }').data;\n  } catch (_unused5) {} // change\n\n\n  var items = [];\n  products.map(function (product) {\n    if (product.id !== removeItem.id) items.push(product);\n  });\n  modifyWishlist({\n    items: items\n  });\n};\nexport function addProductToLocalWishlist(newProduct) {\n  // get\n  var products = [];\n\n  try {\n    products = JSON.parse(localStorage.getItem(\"wishlist\") || '{ \"data\": [] }').data;\n  } catch (_unused6) {} // change\n\n\n  var others = [];\n  products.map(function (product) {\n    if (product.id !== newProduct.id) {\n      others.push(product);\n    }\n  });\n  var items = [].concat(others, [newProduct]); // save\n\n  modifyWishlist({\n    items: items\n  });\n}","map":null,"metadata":{},"sourceType":"module"}