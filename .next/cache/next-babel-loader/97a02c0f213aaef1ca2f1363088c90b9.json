{"ast":null,"code":"var _jsxFileName = \"/home/robert/Documents/loaloa.tech/ecom-ui/components/Customer/create.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { gql, useMutation } from \"@apollo/client\";\nimport { refetchCustomer } from \"../../apollo/client\";\nimport { useContext } from \"react\";\nimport { SellerContext } from \"../src/SellerProvider\";\nconst CREATE_CUSTOMER = gql`\n  mutation($data: CustomerCreateInput) {\n    createCustomer(data: $data) {\n      id\n      phone\n      name\n      address\n    }\n  }\n`;\nexport function Create({\n  onCreate = () => {}\n}) {\n  const theme = useContext(SellerContext);\n  const [createCustomer] = useMutation(CREATE_CUSTOMER);\n  const refetchCus = refetchCustomer();\n\n  const submit = async e => {\n    // Prevent submit from reloading the page\n    e.preventDefault();\n    e.stopPropagation();\n    const {\n      phone,\n      name,\n      address\n    } = e.target;\n\n    if (phone.value && name.value && address.value) {\n      const {\n        data,\n        errors\n      } = await createCustomer({\n        variables: {\n          data: {\n            phone: phone.value,\n            name: name.value,\n            address: address.value,\n            ofSeller: {\n              connect: {\n                id: theme.seller.id\n              }\n            }\n          }\n        }\n      });\n      const customer = data === null || data === void 0 ? void 0 : data.createCustomer;\n\n      if (customer === null || customer === void 0 ? void 0 : customer.id) {\n        onCreate({\n          customer\n        });\n      }\n    }\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: submit,\n    noValidate: true,\n    style: {\n      marginBottom: theme.spacing(3)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(\"h5\", {\n    style: _objectSpread(_objectSpread({}, theme.css.h5), {}, {\n      textTransform: \"capitalize\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"\\u0110i\\u1EC1n th\\xF4ng tin nh\\u1EADn h\\xE0ng\"), __jsx(\"input\", {\n    style: _objectSpread(_objectSpread({}, theme.css.input), {}, {\n      width: \"100%\",\n      marginBottom: theme.spacing(3)\n    }),\n    required: true,\n    name: \"name\",\n    placeholder: \"T\\xEAn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), __jsx(\"input\", {\n    style: _objectSpread(_objectSpread({}, theme.css.input), {}, {\n      width: \"100%\",\n      marginBottom: theme.spacing(3)\n    }),\n    required: true,\n    name: \"phone\",\n    placeholder: \"\\u0110i\\u1EC7n Tho\\u1EA1i\",\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), __jsx(\"input\", {\n    style: _objectSpread(_objectSpread({}, theme.css.input), {}, {\n      width: \"100%\",\n      marginBottom: theme.spacing(3)\n    }),\n    required: true,\n    name: \"address\",\n    placeholder: \"\\u0110\\u1ECBa Ch\\u1EC9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    style: theme.css.button,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"X\\xE1c nh\\u1EADn th\\xF4ng tin\"));\n}","map":{"version":3,"sources":["/home/robert/Documents/loaloa.tech/ecom-ui/components/Customer/create.js"],"names":["gql","useMutation","refetchCustomer","useContext","SellerContext","CREATE_CUSTOMER","Create","onCreate","theme","createCustomer","refetchCus","submit","e","preventDefault","stopPropagation","phone","name","address","target","value","data","errors","variables","ofSeller","connect","id","seller","customer","marginBottom","spacing","css","h5","textTransform","input","width","button"],"mappings":"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","sourcesContent":["import { gql, useMutation } from \"@apollo/client\";\n\nimport { refetchCustomer } from \"../../apollo/client\";\n\nimport { useContext } from \"react\";\nimport { SellerContext } from \"../src/SellerProvider\";\n\nconst CREATE_CUSTOMER = gql`\n  mutation($data: CustomerCreateInput) {\n    createCustomer(data: $data) {\n      id\n      phone\n      name\n      address\n    }\n  }\n`;\nexport function Create({ onCreate = () => {} }) {\n  const theme = useContext(SellerContext);\n\n  const [createCustomer] = useMutation(CREATE_CUSTOMER);\n  const refetchCus = refetchCustomer();\n\n  const submit = async (e) => {\n    // Prevent submit from reloading the page\n    e.preventDefault();\n    e.stopPropagation();\n\n    const { phone, name, address } = e.target;\n    \n    if (phone.value && name.value && address.value) {\n      const { data, errors } = await createCustomer({\n        variables: {\n          data: {\n            phone: phone.value,\n            name: name.value,\n            address: address.value,\n            ofSeller: { connect: { id: theme.seller.id } },\n          },\n        },\n      });\n      const customer = data?.createCustomer;\n      if (customer?.id) {\n        onCreate({ customer });\n      }\n    }\n  };\n  return (\n    <form\n      onSubmit={submit}\n      noValidate\n      style={{ marginBottom: theme.spacing(3) }}\n    >\n      <h5 style={{ ...theme.css.h5, textTransform: \"capitalize\" }}>\n        Điền thông tin nhận hàng\n      </h5>\n      <input\n        style={{\n          ...theme.css.input,\n          width: \"100%\",\n          marginBottom: theme.spacing(3),\n        }}\n        required\n        name=\"name\"\n        placeholder=\"Tên\"\n      />\n      <input\n        style={{\n          ...theme.css.input,\n          width: \"100%\",\n          marginBottom: theme.spacing(3),\n        }}\n        required\n        name=\"phone\"\n        placeholder=\"Điện Thoại\"\n        type=\"number\"\n      />\n\n      <input\n        style={{\n          ...theme.css.input,\n          width: \"100%\",\n          marginBottom: theme.spacing(3),\n        }}\n        required\n        name=\"address\"\n        placeholder=\"Địa Chỉ\"\n      />\n      <button style={theme.css.button} type=\"submit\">\n        Xác nhận thông tin\n      </button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}