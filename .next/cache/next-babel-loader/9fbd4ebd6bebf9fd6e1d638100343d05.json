{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Item } from \"./item\";\nimport { Loading } from \"../src/Loading\";\nimport { useRouter } from \"next/router\";\nimport { useContext, useState } from \"react\";\nimport { IoIosList, IoIosArrowRoundBack } from \"react-icons/io\";\nimport { SellerContext } from \"../src/SellerProvider\";\nconst GET_CATEGORIES = gql`\n  query($seller: UserWhereInput, $category: String, $root: Boolean) {\n    allCategories(\n      where: {\n        seller: $seller\n        OR: [{ url: $category }, { parent_is_null: $root }]\n      }\n    ) {\n      id\n      name\n      label\n      url\n      parent {\n        url\n      }\n      childs {\n        id\n        name\n        label\n        url\n      }\n    }\n  }\n`;\nexport function List() {\n  var _data$allCategories, _data$allCategories2;\n\n  const theme = useContext(SellerContext);\n  const router = useRouter();\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const {\n    category\n  } = router.query;\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_CATEGORIES, {\n    variables: {\n      seller: theme.seller,\n      category,\n      root: category ? false : true\n    }\n  });\n  if (error || loading) return __jsx(Loading, null);\n  return !loading && data ? __jsx(\"div\", null, __jsx(\"h5\", {\n    style: theme.css.h5\n  }, __jsx(IoIosList, {\n    style: theme.css.iconHeader\n  }), category ? data.allCategories[0].name : \"Danh Má»¥c\"), category ? data.allCategories[0].childs.map(cate => __jsx(Item, {\n    key: cate.id,\n    category: cate,\n    style: {\n      display: \"block\",\n      marginBottom: theme.spacing(2)\n    }\n  })) : (_data$allCategories = data.allCategories) === null || _data$allCategories === void 0 ? void 0 : _data$allCategories.slice(0, open ? data.allCategories.length : 7).map(category => __jsx(Item, {\n    key: category.id,\n    category: category,\n    style: {\n      display: \"block\",\n      marginBottom: theme.spacing(2)\n    }\n  })), (data === null || data === void 0 ? void 0 : (_data$allCategories2 = data.allCategories) === null || _data$allCategories2 === void 0 ? void 0 : _data$allCategories2.length) > 7 ? open ? __jsx(\"a\", {\n    onClick: () => setOpen(false),\n    style: {\n      color: theme.primary\n    }\n  }, \"R\\xFAt g\\u1ECDn\") : __jsx(\"a\", {\n    onClick: () => setOpen(true),\n    style: {\n      color: theme.primary\n    }\n  }, \"Xem th\\xEAm\") : null, category ? __jsx(\"a\", {\n    style: {\n      display: \"block\",\n      marginBottom: theme.spacing(2),\n      color: theme.primary\n    },\n    onClick: () => {\n      var _data$allCategories$;\n\n      let query = router.query;\n      if ((_data$allCategories$ = data.allCategories[0]) === null || _data$allCategories$ === void 0 ? void 0 : _data$allCategories$.parent) query.category = data.allCategories[0].parent.url;else delete query.category;\n      router.push({\n        query\n      });\n    }\n  }, __jsx(IoIosArrowRoundBack, null), \" Quay l\\u1EA1i\") : null) : null;\n}","map":null,"metadata":{},"sourceType":"module"}