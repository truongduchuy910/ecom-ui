{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { List as Products } from \"../../components/Product/list\";\nimport { Container, Spinner } from \"reactstrap\";\nimport { Product } from \"../../components/Product/detail\";\nimport { useRouter } from \"next/router\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { Loading } from \"../../components/src/Loading\";\nimport { Divider } from \"../../components/src/Divider\";\nconst GET_PRODUCTS = gql`\n  query($url: String) {\n    allProducts(first: 1, where: { url: $url }) {\n      id\n      image {\n        publicUrl\n      }\n      name\n      price\n      sale\n      images {\n        file {\n          publicUrl\n        }\n      }\n      brand {\n        name\n        url\n      }\n      category {\n        name\n        url\n      }\n      description\n      file {\n        publicUrl\n      }\n      guide\n      attributeGroups {\n        id\n        name\n        attributes {\n          id\n          name\n          url\n        }\n      }\n    }\n  }\n`;\nexport default function ProductDetali() {\n  var _data$allProducts;\n\n  const router = useRouter();\n  const {\n    slug\n  } = router.query;\n  let {\n    data,\n    error,\n    loading\n  } = useQuery(GET_PRODUCTS, {\n    variables: {\n      url: slug\n    }\n  });\n  if (error) return __jsx(\"i\", null, error);\n  if (loading) return __jsx(Loading, null);\n  const product = (data === null || data === void 0 ? void 0 : (_data$allProducts = data.allProducts) === null || _data$allProducts === void 0 ? void 0 : _data$allProducts.length) ? data.allProducts[0] : null;\n  return product ? __jsx(Container, null, __jsx(Product, {\n    product: product\n  }), __jsx(\"h4\", null, \"S\\u1EA3n Ph\\u1EA9m Li\\xEAn Quan\"), __jsx(Divider, null), __jsx(Products, {\n    category: product.category.url,\n    except: slug,\n    more: false\n  })) : null;\n}","map":null,"metadata":{},"sourceType":"module"}