{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($seller: UserWhereInput) {\\n    allAttributes(where: { seller: $seller }) {\\n      id\\n      name\\n      url\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// show in product detail\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Item } from \"./itemOne\";\nimport { Fragment } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Link } from \"../src/Link\";\nimport { queryVar } from \"../../apollo/action\";\nimport { page } from \"../../config/index\";\nimport { Spinner } from \"reactstrap\";\nvar GET_ATTRIBUTES = gql(_templateObject());\nexport function List(_ref) {\n  var attributeGroups = _ref.attributeGroups;\n  return __jsx(\"div\", null, attributeGroups === null || attributeGroups === void 0 ? void 0 : attributeGroups.map(function (attributeGroup) {\n    return __jsx(Fragment, {\n      key: attributeGroup.id\n    }, __jsx(\"h5\", {\n      style: {\n        color: \"black\",\n        display: \"inline-block\"\n      }\n    }, attributeGroup.name, \":\"), __jsx(Item, {\n      attributeGroup: attributeGroup\n    }));\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}