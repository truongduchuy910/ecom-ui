{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/ecom-ui/components/User/signin.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, Fragment } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql } from \"@apollo/client\";\nimport { useMutation } from \"@apollo/client\";\nimport { onSignIn, init } from \"../../apollo/action\";\nimport { getErrorMessage } from \"../../lib/chip\";\nimport { useApollo } from \"../../apollo/client\";\nexport const SignInMutation = gql`\n  mutation($email: String!, $password: String!) {\n    authenticateUserWithPassword(email: $email, password: $password) {\n      token\n      item {\n        id\n        email\n        isAdmin\n        isSeller\n      }\n    }\n  }\n`;\nexport function SignIn() {\n  const router = useRouter();\n  const client = useApollo();\n  const [signIn] = useMutation(SignInMutation);\n  const {\n    0: errorMsg,\n    1: setErrorMsg\n  } = useState();\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const email = event.currentTarget.elements.email.value;\n    const password = event.currentTarget.elements.password.value;\n\n    try {\n      await client.clearStore();\n      const {\n        data\n      } = await signIn({\n        variables: {\n          email: email,\n          password: password\n        }\n      });\n\n      if (data.authenticateUserWithPassword) {\n        const {\n          authenticateUserWithPassword: {\n            token,\n            item\n          }\n        } = data;\n        localStorage.setItem(\"token\", token);\n        onSignIn({\n          user: item\n        });\n        await router.push({\n          pathname: \"/\"\n        });\n        await client.resetStore();\n        init();\n      }\n    } catch (error) {\n      setErrorMsg(getErrorMessage(error));\n    }\n  }\n\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"\\u0110\\u0103ng Nh\\u1EADp\"), __jsx(\"form\", {\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"T\\xE0i kho\\u1EA3n\"), __jsx(\"input\", {\n    required: true,\n    id: \"email\",\n    label: \"T\\xE0i kho\\u1EA3n\",\n    name: \"email\",\n    placeholder: \"Nh\\u1EADp T\\xE0i kho\\u1EA3n\",\n    style: {\n      border: \"1px solid black\",\n      padding: 3,\n      paddingLeft: 13\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"M\\u1EADt kh\\u1EA9u\"), __jsx(\"input\", {\n    required: true,\n    name: \"password\",\n    label: \"M\\u1EADt kh\\u1EA9u\",\n    placeholder: \"Nh\\u1EADp M\\u1EADt kh\\u1EA9u\",\n    type: \"password\",\n    id: \"password\",\n    style: {\n      border: \"1px solid black\",\n      padding: 3,\n      paddingLeft: 13\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    style: {\n      marginTop: 21\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Ti\\u1EBFp T\\u1EE5c\"), __jsx(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \" \", errorMsg)));\n}","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/components/User/signin.js"],"names":["useState","Fragment","useRouter","gql","useMutation","onSignIn","init","getErrorMessage","useApollo","SignInMutation","SignIn","router","client","signIn","errorMsg","setErrorMsg","handleSubmit","event","preventDefault","email","currentTarget","elements","value","password","clearStore","data","variables","authenticateUserWithPassword","token","item","localStorage","setItem","user","push","pathname","resetStore","error","border","padding","paddingLeft","marginTop"],"mappings":"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","sourcesContent":["import { useState, Fragment } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql } from \"@apollo/client\";\nimport { useMutation } from \"@apollo/client\";\nimport { onSignIn, init } from \"../../apollo/action\";\nimport { getErrorMessage } from \"../../lib/chip\";\nimport { useApollo } from \"../../apollo/client\";\nexport const SignInMutation = gql`\n  mutation($email: String!, $password: String!) {\n    authenticateUserWithPassword(email: $email, password: $password) {\n      token\n      item {\n        id\n        email\n        isAdmin\n        isSeller\n      }\n    }\n  }\n`;\n\nexport function SignIn() {\n  const router = useRouter();\n  const client = useApollo();\n  const [signIn] = useMutation(SignInMutation);\n  const [errorMsg, setErrorMsg] = useState();\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const email = event.currentTarget.elements.email.value;\n    const password = event.currentTarget.elements.password.value;\n    try {\n      await client.clearStore();\n      const { data } = await signIn({\n        variables: {\n          email: email,\n          password: password,\n        },\n      });\n      if (data.authenticateUserWithPassword) {\n        const {\n          authenticateUserWithPassword: { token, item },\n        } = data;\n        localStorage.setItem(\"token\", token);\n        onSignIn({ user: item });\n        await router.push({ pathname: \"/\" });\n        await client.resetStore();\n        init();\n      }\n    } catch (error) {\n      setErrorMsg(getErrorMessage(error));\n    }\n  }\n  return (\n    <Fragment>\n      <h2>Đăng Nhập</h2>\n      <form noValidate onSubmit={handleSubmit}>\n        <h5>Tài khoản</h5>\n        <input\n          required\n          id=\"email\"\n          label=\"Tài khoản\"\n          name=\"email\"\n          placeholder=\"Nhập Tài khoản\"\n          style={{ border: \"1px solid black\", padding: 3, paddingLeft: 13 }}\n        />\n        <h5>Mật khẩu</h5>\n        <input\n          required\n          name=\"password\"\n          label=\"Mật khẩu\"\n          placeholder=\"Nhập Mật khẩu\"\n          type=\"password\"\n          id=\"password\"\n          style={{ border: \"1px solid black\", padding: 3, paddingLeft: 13 }}\n        />\n\n        <button\n          type=\"submit\"\n          style={{\n            marginTop: 21,\n          }}\n        >\n          Tiếp Tục\n        </button>\n        <i> {errorMsg}</i>\n      </form>\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}