{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/ecom-ui/components/Customer/ChooseCustomer.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Fragment } from \"react\";\nconst GET_CUSTOMERS = gql`\n  query {\n    allCustomers {\n      id\n      name\n      phone\n      address\n    }\n  }\n`;\nexport const ChooseCustomer = () => {\n  var _data$allCustomers, _customer;\n\n  const {\n    data,\n    loading,\n    error,\n    refetch\n  } = useQuery(GET_CUSTOMERS);\n\n  if (data === null || data === void 0 ? void 0 : (_data$allCustomers = data.allCustomers) === null || _data$allCustomers === void 0 ? void 0 : _data$allCustomers.length) {\n    chooseCustomer({\n      customer: data === null || data === void 0 ? void 0 : data.allCustomers[0]\n    });\n  }\n\n  if (loading) return __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 23\n    }\n  });\n  if (error) return null;\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"h5\", {\n    style: _objectSpread(_objectSpread({}, css.h5), {}, {\n      display: \"inline-block\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Th\\xF4ng Tin Ng\\u01B0\\u1EDDi Nh\\u1EADn\"), __jsx(\"a\", {\n    style: {\n      float: \"right\",\n      display: \"inline-block\",\n      color: theme.secondary\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Thay \\u0111\\u1ED5i\"), __jsx(\"div\", {\n    style: {\n      marginBottom: theme.spacing(3)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, ((_customer = customer) === null || _customer === void 0 ? void 0 : _customer.id) ? __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    style: css.a,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, customer.name), __jsx(\"a\", {\n    style: css.a,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, customer.phone), __jsx(\"a\", {\n    style: css.a,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, customer.address)) : \"Bạn chưa chọn địa chỉ nhận.\"), \"u\");\n};","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/components/Customer/ChooseCustomer.js"],"names":["Fragment","GET_CUSTOMERS","gql","ChooseCustomer","data","loading","error","refetch","useQuery","allCustomers","length","chooseCustomer","customer","css","h5","display","float","color","theme","secondary","marginBottom","spacing","id","a","name","phone","address"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,MAAMC,aAAa,GAAGC,GAAI;;;;;;;;;CAA1B;AAUA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAClC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,KAAjB;AAAwBC,IAAAA;AAAxB,MAAoCC,QAAQ,CAACP,aAAD,CAAlD;;AACA,MAAIG,IAAJ,aAAIA,IAAJ,6CAAIA,IAAI,CAAEK,YAAV,uDAAI,mBAAoBC,MAAxB,EAAgC;AAC9BC,IAAAA,cAAc,CAAC;AAAEC,MAAAA,QAAQ,EAAER,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEK,YAAN,CAAmB,CAAnB;AAAZ,KAAD,CAAd;AACD;;AACD,MAAIJ,OAAJ,EAAa,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,IAAP;AACX,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,kCAAOO,GAAG,CAACC,EAAX;AAAeC,MAAAA,OAAO,EAAE;AAAxB,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADF,EAIE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,OADF;AAELD,MAAAA,OAAO,EAAE,cAFJ;AAGLE,MAAAA,KAAK,EAAEC,KAAK,CAACC;AAHR,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,EAaE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AAAhB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,cAAAT,QAAQ,UAAR,8CAAUU,EAAV,IACC,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,KAAK,EAAET,GAAG,CAACU,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBX,QAAQ,CAACY,IAA3B,CADF,EAEE;AAAG,IAAA,KAAK,EAAEX,GAAG,CAACU,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBX,QAAQ,CAACa,KAA3B,CAFF,EAGE;AAAG,IAAA,KAAK,EAAEZ,GAAG,CAACU,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBX,QAAQ,CAACc,OAA3B,CAHF,CADD,GAOC,6BARJ,CAbF,MADF;AA4BD,CAnCM","sourcesContent":["import { Fragment } from \"react\";\nconst GET_CUSTOMERS = gql`\n  query {\n    allCustomers {\n      id\n      name\n      phone\n      address\n    }\n  }\n`;\nexport const ChooseCustomer = () => {\n  const { data, loading, error, refetch } = useQuery(GET_CUSTOMERS);\n  if (data?.allCustomers?.length) {\n    chooseCustomer({ customer: data?.allCustomers[0] });\n  }\n  if (loading) return <Loading />;\n  if (error) return null;\n  return (\n    <Fragment>\n      <h5 style={{ ...css.h5, display: \"inline-block\" }}>\n        Thông Tin Người Nhận\n      </h5>\n      <a\n        style={{\n          float: \"right\",\n          display: \"inline-block\",\n          color: theme.secondary,\n        }}\n      >\n        Thay đổi\n      </a>\n      <div style={{ marginBottom: theme.spacing(3) }}>\n        {customer?.id ? (\n          <Fragment>\n            <a style={css.a}>{customer.name}</a>\n            <a style={css.a}>{customer.phone}</a>\n            <a style={css.a}>{customer.address}</a>\n          </Fragment>\n        ) : (\n          \"Bạn chưa chọn địa chỉ nhận.\"\n        )}\n      </div>\n      u\n    </Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}