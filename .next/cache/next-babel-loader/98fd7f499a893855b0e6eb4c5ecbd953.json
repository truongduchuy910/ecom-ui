{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useMemo } from \"react\";\nimport { ApolloClient } from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { HttpLink } from \"@apollo/client/link/http\";\nimport { page } from \"../config\";\nimport { InMemoryCache, makeVar, gql } from \"@apollo/client\";\nexport var orderCountVar = makeVar(0);\nexport var newOrderVar = makeVar(false);\nexport var customerVar = makeVar();\nexport var refetchCustomer = makeVar(function () {});\nexport var cache = new InMemoryCache();\nvar httpLink = new HttpLink({\n  uri: page.server + \"/admin/api\",\n  credentials: \"same-origin\"\n});\nvar authLink = setContext(function (_, _ref) {\n  var headers = _ref.headers;\n\n  if (true) {\n    var token = localStorage.getItem(\"token\");\n    return {\n      headers: _objectSpread(_objectSpread({}, headers), {}, {\n        authorization: token ? \"Bearer \".concat(token) : \"\"\n      })\n    };\n  }\n});\n\nfunction createApolloClient() {\n  return new ApolloClient({\n    ssrMode: false,\n    link: authLink.concat(httpLink),\n    cache: cache\n  });\n}\n\nvar apolloClient;\nexport function initializeApollo() {\n  var _apolloClient2;\n\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var _apolloClient = (_apolloClient2 = apolloClient) !== null && _apolloClient2 !== void 0 ? _apolloClient2 : createApolloClient();\n\n  if (initialState) {\n    _apolloClient.cache.restore(initialState);\n  }\n\n  if (false) return _apolloClient;\n  if (!apolloClient) apolloClient = _apolloClient;\n  return _apolloClient;\n}\nexport function useApollo(initialState) {\n  _s();\n\n  var store = useMemo(function () {\n    return initializeApollo(initialState);\n  }, [initialState]);\n  return store;\n}\n\n_s(useApollo, \"K8ucUnUnAgJZGJWAL9Ze8IHCmoQ=\");","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/apollo/client.js"],"names":["useMemo","ApolloClient","setContext","HttpLink","page","InMemoryCache","makeVar","gql","orderCountVar","newOrderVar","customerVar","refetchCustomer","cache","httpLink","uri","server","credentials","authLink","_","headers","token","localStorage","getItem","authorization","createApolloClient","ssrMode","link","concat","apolloClient","initializeApollo","initialState","_apolloClient","restore","useApollo","store"],"mappings":";;;;;;;;AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,SAASC,IAAT,QAAqB,WAArB;AACA,SAASC,aAAT,EAAwBC,OAAxB,EAAiCC,GAAjC,QAA4C,gBAA5C;AAEA,OAAO,IAAMC,aAAa,GAAGF,OAAO,CAAC,CAAD,CAA7B;AACP,OAAO,IAAMG,WAAW,GAAGH,OAAO,CAAC,KAAD,CAA3B;AACP,OAAO,IAAMI,WAAW,GAAGJ,OAAO,EAA3B;AACP,OAAO,IAAMK,eAAe,GAAGL,OAAO,CAAC,YAAM,CAAE,CAAT,CAA/B;AACP,OAAO,IAAIM,KAAK,GAAG,IAAIP,aAAJ,EAAZ;AAEP,IAAMQ,QAAQ,GAAG,IAAIV,QAAJ,CAAa;AAC5BW,EAAAA,GAAG,EAAEV,IAAI,CAACW,MAAL,GAAc,YADS;AAE5BC,EAAAA,WAAW,EAAE;AAFe,CAAb,CAAjB;AAIA,IAAMC,QAAQ,GAAGf,UAAU,CAAC,UAACgB,CAAD,QAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAC9C,YAAmC;AACjC,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,WAAO;AACLH,MAAAA,OAAO,kCACFA,OADE;AAELI,QAAAA,aAAa,EAAEH,KAAK,oBAAaA,KAAb,IAAuB;AAFtC;AADF,KAAP;AAMD;AACF,CAV0B,CAA3B;;AAWA,SAASI,kBAAT,GAA8B;AAC5B,SAAO,IAAIvB,YAAJ,CAAiB;AACtBwB,IAAAA,OAAO,OADe;AAEtBC,IAAAA,IAAI,EAAET,QAAQ,CAACU,MAAT,CAAgBd,QAAhB,CAFgB;AAGtBD,IAAAA,KAAK,EAALA;AAHsB,GAAjB,CAAP;AAKD;;AAED,IAAIgB,YAAJ;AACA,OAAO,SAASC,gBAAT,GAA+C;AAAA;;AAAA,MAArBC,YAAqB,uEAAN,IAAM;;AACpD,MAAMC,aAAa,qBAAGH,YAAH,2DAAmBJ,kBAAkB,EAAxD;;AACA,MAAIM,YAAJ,EAAkB;AAChBC,IAAAA,aAAa,CAACnB,KAAd,CAAoBoB,OAApB,CAA4BF,YAA5B;AACD;;AACD,aAAmC,OAAOC,aAAP;AACnC,MAAI,CAACH,YAAL,EAAmBA,YAAY,GAAGG,aAAf;AAEnB,SAAOA,aAAP;AACD;AACD,OAAO,SAASE,SAAT,CAAmBH,YAAnB,EAAiC;AAAA;;AACtC,MAAMI,KAAK,GAAGlC,OAAO,CAAC;AAAA,WAAM6B,gBAAgB,CAACC,YAAD,CAAtB;AAAA,GAAD,EAAuC,CAACA,YAAD,CAAvC,CAArB;AACA,SAAOI,KAAP;AACD;;GAHeD,S","sourcesContent":["import { useMemo } from \"react\";\nimport { ApolloClient } from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { HttpLink } from \"@apollo/client/link/http\";\n\nimport { page } from \"../config\";\nimport { InMemoryCache, makeVar, gql } from \"@apollo/client\";\n\nexport const orderCountVar = makeVar(0);\nexport const newOrderVar = makeVar(false);\nexport const customerVar = makeVar();\nexport const refetchCustomer = makeVar(() => {});\nexport let cache = new InMemoryCache();\n\nconst httpLink = new HttpLink({\n  uri: page.server + \"/admin/api\",\n  credentials: \"same-origin\",\n});\nconst authLink = setContext((_, { headers }) => {\n  if (typeof window !== \"undefined\") {\n    const token = localStorage.getItem(\"token\");\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : \"\",\n      },\n    };\n  }\n});\nfunction createApolloClient() {\n  return new ApolloClient({\n    ssrMode: typeof window === \"undefined\",\n    link: authLink.concat(httpLink),\n    cache,\n  });\n}\n\nlet apolloClient;\nexport function initializeApollo(initialState = null) {\n  const _apolloClient = apolloClient ?? createApolloClient();\n  if (initialState) {\n    _apolloClient.cache.restore(initialState);\n  }\n  if (typeof window === \"undefined\") return _apolloClient;\n  if (!apolloClient) apolloClient = _apolloClient;\n\n  return _apolloClient;\n}\nexport function useApollo(initialState) {\n  const store = useMemo(() => initializeApollo(initialState), [initialState]);\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}