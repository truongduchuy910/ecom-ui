{"ast":null,"code":"var _jsxFileName = \"/media/huy/New Volume/linux/apps/ecom-ui/components/Post/list.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Loading } from \"../src/Loading\";\nconst GET_ATTRIBUTES = gql`\n  query($seller: UserWhereInput) {\n    allPosts(where: { seller: $seller }) {\n      id\n      file {\n        publicUrl\n      }\n    }\n  }\n`;\nexport function List({\n  attributes\n}) {\n  var _data$allPosts$, _data$allPosts$$file;\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_ATTRIBUTES, {\n    variables: {\n      seller: theme.seller\n    }\n  });\n  if (loading || error) return __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 32\n    }\n  });\n  let source = attributes ? attributes : data.allAttributes;\n  return !loading && data ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: theme.server + ((_data$allPosts$ = data.allPosts[0]) === null || _data$allPosts$ === void 0 ? void 0 : (_data$allPosts$$file = _data$allPosts$.file) === null || _data$allPosts$$file === void 0 ? void 0 : _data$allPosts$$file.publicUrl),\n    style: {\n      borderRadius: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), JSON.stringify(data)) : null;\n}","map":{"version":3,"sources":["/media/huy/New Volume/linux/apps/ecom-ui/components/Post/list.js"],"names":["gql","useQuery","Loading","GET_ATTRIBUTES","List","attributes","data","loading","error","variables","seller","theme","source","allAttributes","server","allPosts","file","publicUrl","borderRadius","JSON","stringify"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAEA,SAASC,OAAT,QAAwB,gBAAxB;AAEA,MAAMC,cAAc,GAAGH,GAAI;;;;;;;;;CAA3B;AAUA,OAAO,SAASI,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAA8B;AAAA;;AACnC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BP,QAAQ,CAACE,cAAD,EAAiB;AACxDM,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAM,EAAEC,KAAK,CAACD;AAAhB;AAD6C,GAAjB,CAAzC;AAIA,MAAIH,OAAO,IAAIC,KAAf,EAAsB,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEtB,MAAII,MAAM,GAAGP,UAAU,GAAGA,UAAH,GAAgBC,IAAI,CAACO,aAA5C;AACA,SAAO,CAACN,OAAD,IAAYD,IAAZ,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEK,KAAK,CAACG,MAAN,uBAAeR,IAAI,CAACS,QAAL,CAAc,CAAd,CAAf,4EAAe,gBAAkBC,IAAjC,yDAAe,qBAAwBC,SAAvC,CADP;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMGC,IAAI,CAACC,SAAL,CAAed,IAAf,CANH,CADK,GASH,IATJ;AAUD","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\n\nimport { Loading } from \"../src/Loading\";\n\nconst GET_ATTRIBUTES = gql`\n  query($seller: UserWhereInput) {\n    allPosts(where: { seller: $seller }) {\n      id\n      file {\n        publicUrl\n      }\n    }\n  }\n`;\nexport function List({ attributes }) {\n  const { data, loading, error } = useQuery(GET_ATTRIBUTES, {\n    variables: { seller: theme.seller },\n  });\n\n  if (loading || error) return <Loading />;\n\n  let source = attributes ? attributes : data.allAttributes;\n  return !loading && data ? (\n    <div>\n      <img\n        src={theme.server + data.allPosts[0]?.file?.publicUrl}\n        style={{ borderRadius: 15 }}\n      />\n\n      {JSON.stringify(data)}\n    </div>\n  ) : null;\n}\n"]},"metadata":{},"sourceType":"module"}