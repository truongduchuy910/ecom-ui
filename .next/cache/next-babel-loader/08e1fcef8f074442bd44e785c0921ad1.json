{"ast":null,"code":"var _jsxFileName = \"/media/huy/New Volume/linux/apps/ecom-ui/pages/post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { List as Posts } from '../components/Post/list';\nimport { Container } from 'reactstrap';\nimport { Post } from '../components/Post/detail';\nimport { useRouter } from 'next/router';\nimport { useQuery, gql } from '@apollo/client';\nimport { Loading } from '../components/src/Loading';\nimport { css } from '../components/src/css';\nimport { useEffect } from 'react';\nconst GET_PRODUCTS = gql`\n  query($url: String) {\n    allPosts(first: 1, where: {url: $url}) {\n      id\n      url\n      file {\n        publicUrl\n      }\n      name\n      price\n      sale\n      images {\n        file {\n          publicUrl\n        }\n      }\n      brand {\n        name\n        url\n      }\n      hashtag {\n        name\n        url\n      }\n      description\n      file {\n        publicUrl\n      }\n      guide\n      altImages\n    }\n  }\n`;\nexport default function PostDetali() {\n  var _data$allPosts;\n\n  const router = useRouter();\n  const {\n    detail\n  } = router.query;\n  let {\n    data,\n    error,\n    loading\n  } = useQuery(GET_PRODUCTS, {\n    variables: {\n      url: detail\n    }\n  });\n  useEffect(() => {\n    if (data) window.scroll({\n      top: 0,\n      left: 0,\n      behavior: 'smooth'\n    });\n  });\n  if (error || loading) return __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 32\n    }\n  });\n  const post = (data === null || data === void 0 ? void 0 : (_data$allPosts = data.allPosts) === null || _data$allPosts === void 0 ? void 0 : _data$allPosts.length) ? data.allPosts[0] : null;\n  return post ? __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, __jsx(Post, {\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), __jsx(\"h5\", {\n    style: css.h5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"S\\u1EA3n Ph\\u1EA9m Li\\xEAn Quan\"), __jsx(Posts, {\n    hashtag: post.hashtag.url,\n    except: detail,\n    more: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  })) : null;\n}","map":{"version":3,"sources":["/media/huy/New Volume/linux/apps/ecom-ui/pages/post.js"],"names":["List","Posts","Container","Post","useRouter","useQuery","gql","Loading","css","useEffect","GET_PRODUCTS","PostDetali","router","detail","query","data","error","loading","variables","url","window","scroll","top","left","behavior","post","allPosts","length","h5","hashtag"],"mappings":";;;AAAA,SAAQA,IAAI,IAAIC,KAAhB,QAA4B,yBAA5B;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,SAAQC,IAAR,QAAmB,2BAAnB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,QAAR,EAAkBC,GAAlB,QAA4B,gBAA5B;AACA,SAAQC,OAAR,QAAsB,2BAAtB;AACA,SAAQC,GAAR,QAAkB,uBAAlB;AACA,SAAQC,SAAR,QAAwB,OAAxB;AACA,MAAMC,YAAY,GAAGJ,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAzB;AAiCA,eAAe,SAASK,UAAT,GAAsB;AAAA;;AACnC,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAM;AAACS,IAAAA;AAAD,MAAWD,MAAM,CAACE,KAAxB;AACA,MAAI;AAACC,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,MAAyBZ,QAAQ,CAACK,YAAD,EAAe;AAClDQ,IAAAA,SAAS,EAAE;AAACC,MAAAA,GAAG,EAAEN;AAAN;AADuC,GAAf,CAArC;AAGAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,IAAJ,EACEK,MAAM,CAACC,MAAP,CAAc;AACZC,MAAAA,GAAG,EAAE,CADO;AAEZC,MAAAA,IAAI,EAAE,CAFM;AAGZC,MAAAA,QAAQ,EAAE;AAHE,KAAd;AAKH,GAPQ,CAAT;AAQA,MAAIR,KAAK,IAAIC,OAAb,EAAsB,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACtB,QAAMQ,IAAI,GAAG,CAAAV,IAAI,SAAJ,IAAAA,IAAI,WAAJ,8BAAAA,IAAI,CAAEW,QAAN,kEAAgBC,MAAhB,IAAyBZ,IAAI,CAACW,QAAL,CAAc,CAAd,CAAzB,GAA4C,IAAzD;AAEA,SAAOD,IAAI,GACT,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAI,IAAA,KAAK,EAAEjB,GAAG,CAACoB,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAFF,EAGE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAEH,IAAI,CAACI,OAAL,CAAaV,GAA7B;AAAkC,IAAA,MAAM,EAAEN,MAA1C;AAAkD,IAAA,IAAI,EAAE,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADS,GAMP,IANJ;AAOD","sourcesContent":["import {List as Posts} from '../components/Post/list';\nimport {Container} from 'reactstrap';\nimport {Post} from '../components/Post/detail';\nimport {useRouter} from 'next/router';\nimport {useQuery, gql} from '@apollo/client';\nimport {Loading} from '../components/src/Loading';\nimport {css} from '../components/src/css';\nimport {useEffect} from 'react';\nconst GET_PRODUCTS = gql`\n  query($url: String) {\n    allPosts(first: 1, where: {url: $url}) {\n      id\n      url\n      file {\n        publicUrl\n      }\n      name\n      price\n      sale\n      images {\n        file {\n          publicUrl\n        }\n      }\n      brand {\n        name\n        url\n      }\n      hashtag {\n        name\n        url\n      }\n      description\n      file {\n        publicUrl\n      }\n      guide\n      altImages\n    }\n  }\n`;\nexport default function PostDetali() {\n  const router = useRouter();\n  const {detail} = router.query;\n  let {data, error, loading} = useQuery(GET_PRODUCTS, {\n    variables: {url: detail},\n  });\n  useEffect(() => {\n    if (data)\n      window.scroll({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n  });\n  if (error || loading) return <Loading />;\n  const post = data?.allPosts?.length ? data.allPosts[0] : null;\n\n  return post ? (\n    <Container>\n      <Post post={post} />\n      <h5 style={css.h5}>Sản Phẩm Liên Quan</h5>\n      <Posts hashtag={post.hashtag.url} except={detail} more={false} />\n    </Container>\n  ) : null;\n}\n"]},"metadata":{},"sourceType":"module"}