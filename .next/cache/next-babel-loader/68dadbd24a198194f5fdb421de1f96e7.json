{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Item } from \"./item\";\nimport { Fragment } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport { queryVar } from \"../../apollo/action\";\nimport { page } from \"../../config/yensaodatquang.json\";\nimport { Spinner, Alert } from \"reactstrap\";\nimport { getErrorMessage } from \"../../lib/chip\";\nimport { Loading } from \"../src/Loading\";\nconst GET_ATTRIBUTES = gql`\n  query($seller: UserWhereInput) {\n    allAttributes(where: { seller: $seller }) {\n      id\n      name\n      url\n    }\n  }\n`;\nexport function List({\n  attributes\n}) {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_ATTRIBUTES, {\n    variables: {\n      seller: page.seller\n    }\n  });\n  if (loading) return __jsx(Loading, null);\n  if (error) return __jsx(\"i\", {\n    color: \"danger\"\n  }, getErrorMessage(error));\n  let source = attributes ? attributes : data.allAttributes;\n  return !loading && data ? __jsx(\"div\", null, __jsx(\"h5\", null, \"Thu\\u1ED9c T\\xEDnh\"), __jsx(Item, {\n    attribute: {\n      id: \"all-attribute\",\n      name: \"Tất Cả\",\n      url: \"all\"\n    }\n  }), source.map(attribute => __jsx(Item, {\n    key: attribute.id,\n    attribute: attribute\n  }))) : null;\n}","map":null,"metadata":{},"sourceType":"module"}