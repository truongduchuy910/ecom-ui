{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($seller: UserWhereInput) {\\n    allBrands(where: { seller: $seller }) {\\n      id\\n      name\\n      url\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Item } from \"./item\";\nimport { page, theme } from \"../../config/index\";\nimport { getErrorMessage } from \"../../lib/chip\";\nimport { Loading } from \"../src/Loading\";\nimport { css } from \"../src/css\";\nimport { useState } from \"react\";\nimport { IoIosArchive, IoIosStarOutline, IoIosCheckbox, IoIosCheckmark, IoIosCheckboxOutline, IoIosContact, IoIosHome, IoIosAdd, IoIosFlag, IoIosFlashlight, IoIosBusiness, IoIosCash, IoIosDesktop, IoIosOptions, IoIosBookmark } from \"react-icons/io\";\nvar GET_CATEGORIES = gql(_templateObject());\nexport function List() {\n  var _data$allBrands, _data$allBrands2, _data$allBrands3;\n\n  var _useQuery = useQuery(GET_CATEGORIES, {\n    variables: {\n      seller: page.seller\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  if (loading) return __jsx(Loading, null);\n  if (error) return __jsx(\"i\", {\n    color: \"danger\"\n  }, getErrorMessage(error));\n  return !loading && data ? __jsx(\"div\", null, __jsx(\"h5\", {\n    style: css.h5\n  }, __jsx(IoIosBookmark, {\n    style: css.iconHeader\n  }), \" Th\\u01B0\\u01A1ng Hi\\u1EC7u\"), __jsx(Item, {\n    brand: {\n      id: \"all-brand\",\n      name: \"Tất Cả \",\n      url: \"all\"\n    }\n  }), data === null || data === void 0 ? void 0 : (_data$allBrands = data.allBrands) === null || _data$allBrands === void 0 ? void 0 : _data$allBrands.slice(0, open ? data === null || data === void 0 ? void 0 : (_data$allBrands2 = data.allBrands) === null || _data$allBrands2 === void 0 ? void 0 : _data$allBrands2.lenght : 7).map(function (brand) {\n    return __jsx(Item, {\n      key: brand.id,\n      brand: brand,\n      style: {\n        display: \"block\"\n      }\n    });\n  }), (data === null || data === void 0 ? void 0 : (_data$allBrands3 = data.allBrands) === null || _data$allBrands3 === void 0 ? void 0 : _data$allBrands3.length) > 7 ? open ? __jsx(\"a\", {\n    onClick: function onClick() {\n      return setOpen(false);\n    },\n    style: {\n      color: theme.primary\n    }\n  }, \"R\\xFAt g\\u1ECDn\") : __jsx(\"a\", {\n    onClick: function onClick() {\n      return setOpen(true);\n    },\n    style: {\n      color: theme.primary\n    }\n  }, \"Xem th\\xEAm\") : null) : null;\n}","map":null,"metadata":{},"sourceType":"module"}