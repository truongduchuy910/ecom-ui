{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/home/huy/apps/ecom-ui/components/Brand/list.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($seller: UserWhereInput) {\\n    allBrands(where: { seller: $seller }) {\\n      id\\n      name\\n      url\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Item } from \"./item\";\nimport { page } from \"../../config/index\";\nimport { getErrorMessage } from \"../../lib/chip\";\nimport { Loading } from \"../src/Loading\";\nimport { css } from \"../src/css\";\nvar GET_CATEGORIES = gql(_templateObject());\nexport function List() {\n  _s();\n\n  var _this = this;\n\n  var _useQuery = useQuery(GET_CATEGORIES, {\n    variables: {\n      seller: page.seller\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 23\n    }\n  });\n  if (error) return __jsx(\"i\", {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, getErrorMessage(error));\n  return !loading && data ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, __jsx(\"h5\", {\n    style: css.h5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Th\\u01B0\\u01A1ng Hi\\u1EC7u\"), __jsx(Item, {\n    brand: {\n      id: \"all-brand\",\n      name: \"Tất Cả \",\n      url: \"all\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), data.allBrands.map(function (brand) {\n    return __jsx(Item, {\n      key: brand.id,\n      brand: brand,\n      style: {\n        display: \"block\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    });\n  })) : null;\n}\n\n_s(List, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/components/Brand/list.js"],"names":["gql","useQuery","Item","page","getErrorMessage","Loading","css","GET_CATEGORIES","List","variables","seller","data","loading","error","h5","id","name","url","allBrands","map","brand","display"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,IAAT,QAAqB,oBAArB;AAEA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,IAAMC,cAAc,GAAGP,GAAH,mBAApB;AASA,OAAO,SAASQ,IAAT,GAAgB;AAAA;;AAAA;;AAAA,kBACYP,QAAQ,CAACM,cAAD,EAAiB;AACxDE,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAM,EAAEP,IAAI,CAACO;AAAf;AAD6C,GAAjB,CADpB;AAAA,MACbC,IADa,aACbA,IADa;AAAA,MACPC,OADO,aACPA,OADO;AAAA,MACEC,KADF,aACEA,KADF;;AAIrB,MAAID,OAAJ,EAAa,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAG,IAAA,KAAK,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBT,eAAe,CAACS,KAAD,CAAlC,CAAP;AACX,SAAO,CAACD,OAAD,IAAYD,IAAZ,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAEL,GAAG,CAACQ,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,EAAE,EAAE,WAAN;AAAmBC,MAAAA,IAAI,EAAE,SAAzB;AAAoCC,MAAAA,GAAG,EAAE;AAAzC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGN,IAAI,CAACO,SAAL,CAAeC,GAAf,CAAmB,UAACC,KAAD;AAAA,WAClB,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAK,CAACL,EAAjB;AAAqB,MAAA,KAAK,EAAEK,KAA5B;AAAmC,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADkB;AAAA,GAAnB,CAHH,CADK,GAQH,IARJ;AASD;;GAfeb,I;UACmBP,Q;;;KADnBO,I","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\nimport { Item } from \"./item\";\nimport { page } from \"../../config/index\";\n\nimport { getErrorMessage } from \"../../lib/chip\";\nimport { Loading } from \"../src/Loading\";\nimport { css } from \"../src/css\";\nconst GET_CATEGORIES = gql`\n  query($seller: UserWhereInput) {\n    allBrands(where: { seller: $seller }) {\n      id\n      name\n      url\n    }\n  }\n`;\nexport function List() {\n  const { data, loading, error } = useQuery(GET_CATEGORIES, {\n    variables: { seller: page.seller },\n  });\n  if (loading) return <Loading />;\n  if (error) return <i color=\"danger\">{getErrorMessage(error)}</i>;\n  return !loading && data ? (\n    <div>\n      <h5 style={css.h5}>Thương Hiệu</h5>\n      <Item brand={{ id: \"all-brand\", name: \"Tất Cả \", url: \"all\" }} />\n      {data.allBrands.map((brand) => (\n        <Item key={brand.id} brand={brand} style={{ display: \"block\" }} />\n      ))}\n    </div>\n  ) : null;\n}\n"]},"metadata":{},"sourceType":"module"}