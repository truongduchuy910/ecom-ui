{"ast":null,"code":"var _jsxFileName = \"/media/huy/New Volume/linux/apps/ecom-ui/components/Category/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport { useContext } from \"react\";\nimport { Loading } from \"../Loading\";\nimport { One } from \"./One\";\nimport { Query, SellerContext } from \"../../apollo\";\n\nconst Categories = ({\n  option = 1,\n  onChoose\n}) => {\n  // data\n  let theme = useContext(SellerContext);\n  let variables = {\n    category: {\n      seller: theme.seller\n    }\n  };\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(gql`query($category: CategoryWhereInput) {\n        allCategories(where: $category) {\n            id\n            name\n            url\n        }\n    }`, {\n    variables\n  }); // modify\n\n  const categories = data === null || data === void 0 ? void 0 : data.allCategories.map(category => {\n    var _category$file;\n\n    return _objectSpread(_objectSpread({}, category), {}, {\n      img: theme.server + (category === null || category === void 0 ? void 0 : (_category$file = category.file) === null || _category$file === void 0 ? void 0 : _category$file.publicUrl)\n    });\n  }); // render\n\n  if (!(error || loading)) {\n    switch (option) {\n      case 1:\n        return __jsx(One, {\n          categories: categories,\n          onChoose: onChoose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 28\n          }\n        });\n\n      default:\n        return __jsx(\"pre\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 24\n          }\n        }, \"Invalid components.\");\n    }\n  } else return __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }\n  });\n};\n\nexport default Categories;","map":{"version":3,"sources":["/media/huy/New Volume/linux/apps/ecom-ui/components/Category/index.js"],"names":["gql","useQuery","useContext","Loading","One","Query","SellerContext","Categories","option","onChoose","theme","variables","category","seller","data","error","loading","categories","allCategories","map","img","server","file","publicUrl"],"mappings":";;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,cAArC;;AAGA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAM,GAAG,CAAX;AAAcC,EAAAA;AAAd,CAAD,KAA8B;AAC7C;AACA,MAAIC,KAAK,GAAGR,UAAU,CAACI,aAAD,CAAtB;AACA,MAAIK,SAAS,GAAG;AAAEC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,MAAM,EAAEH,KAAK,CAACG;AAAhB;AAAZ,GAAhB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2Bf,QAAQ,CAACD,GAAI;;;;;;MAAL,EAMrC;AAAEW,IAAAA;AAAF,GANqC,CAAzC,CAJ6C,CAW7C;;AACA,QAAMM,UAAU,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEI,aAAN,CAAoBC,GAApB,CAAwBP,QAAQ,IAAI;AAAA;;AACnD,2CAAYA,QAAZ;AAAsBQ,MAAAA,GAAG,EAAEV,KAAK,CAACW,MAAN,IAAeT,QAAf,aAAeA,QAAf,yCAAeA,QAAQ,CAAEU,IAAzB,mDAAe,eAAgBC,SAA/B;AAA3B;AACH,GAFkB,CAAnB,CAZ6C,CAe7C;;AACA,MAAI,EAAER,KAAK,IAAIC,OAAX,CAAJ,EAAyB;AACrB,YAAQR,MAAR;AACI,WAAK,CAAL;AAAQ,eAAO,MAAC,GAAD;AAAK,UAAA,UAAU,EAAES,UAAjB;AAA6B,UAAA,QAAQ,EAAER,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACR;AACI,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AAHR;AAKH,GAND,MAMO,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEV,CAxBD;;AAyBA,eAAeF,UAAf","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\nimport { useContext } from \"react\";\nimport { Loading } from \"../Loading\";\nimport { One } from \"./One\";\nimport { Query, SellerContext } from \"../../apollo\";\n\n\nconst Categories = ({ option = 1, onChoose }) => {\n    // data\n    let theme = useContext(SellerContext);\n    let variables = { category: { seller: theme.seller } };\n    const { data, error, loading } = useQuery(gql`query($category: CategoryWhereInput) {\n        allCategories(where: $category) {\n            id\n            name\n            url\n        }\n    }`, { variables });\n    // modify\n    const categories = data?.allCategories.map(category => {\n        return { ...category, img: theme.server + category?.file?.publicUrl };\n    })\n    // render\n    if (!(error || loading)) {\n        switch (option) {\n            case 1: return <One categories={categories} onChoose={onChoose} />\n            default:\n                return <pre>Invalid components.</pre>\n        }\n    } else return <Loading />\n\n}\nexport default Categories"]},"metadata":{},"sourceType":"module"}