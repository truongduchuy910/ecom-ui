{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/home/huy/apps/ecom-ui/components/Category/list.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($seller: UserWhereInput) {\\n    allCategories(where: { seller: $seller, root: true }) {\\n      id\\n      name\\n      label\\n      url\\n      childs {\\n        id\\n        name\\n        label\\n        url\\n        childs {\\n          id\\n          name\\n          label\\n          url\\n          childs {\\n            id\\n            name\\n            label\\n            url\\n            childs {\\n              id\\n              name\\n              label\\n              url\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Item } from \"./item\";\nimport { page } from \"../../config.json\";\nimport { Spinner } from \"reactstrap\";\nimport { Loading } from \"../src/Loading\";\nvar GET_CATEGORIES = gql(_templateObject());\nexport function List() {\n  _s();\n\n  var _this = this;\n\n  var _useQuery = useQuery(GET_CATEGORIES, {\n    variables: {\n      seller: page.seller\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (error) return __jsx(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, error);\n  if (loading) return __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }\n  });\n  return !loading && data ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Danh M\\u1EE5c\"), __jsx(Item, {\n    categories: [{\n      id: \"all-category\",\n      name: \"Tất Cả \",\n      url: \"all\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), data.allCategories.map(function (category) {\n    return __jsx(Item, {\n      key: category.id,\n      categories: [category],\n      level: 0,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    });\n  })) : null;\n}\n\n_s(List, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/components/Category/list.js"],"names":["gql","useQuery","Item","page","Spinner","Loading","GET_CATEGORIES","List","variables","seller","data","loading","error","id","name","url","allCategories","map","category"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAEA,SAASC,IAAT,QAAqB,QAArB;AAEA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AAEA,IAAMC,cAAc,GAAGN,GAAH,mBAApB;AAkCA,OAAO,SAASO,IAAT,GAAgB;AAAA;;AAAA;;AAAA,kBACYN,QAAQ,CAACK,cAAD,EAAiB;AACxDE,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAM,EAAEN,IAAI,CAACM;AAAf;AAD6C,GAAjB,CADpB;AAAA,MACbC,IADa,aACbA,IADa;AAAA,MACPC,OADO,aACPA,OADO;AAAA,MACEC,KADF,aACEA,KADF;;AAIrB,MAAIA,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAJ,CAAP;AACX,MAAID,OAAJ,EAAa,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,SAAO,CAACA,OAAD,IAAYD,IAAZ,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,MAAC,IAAD;AACE,IAAA,UAAU,EAAE,CAAC;AAAEG,MAAAA,EAAE,EAAE,cAAN;AAAsBC,MAAAA,IAAI,EAAE,SAA5B;AAAuCC,MAAAA,GAAG,EAAE;AAA5C,KAAD,CADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAMGL,IAAI,CAACM,aAAL,CAAmBC,GAAnB,CAAuB,UAACC,QAAD;AAAA,WACtB,MAAC,IAAD;AAEE,MAAA,GAAG,EAAEA,QAAQ,CAACL,EAFhB;AAGE,MAAA,UAAU,EAAE,CAACK,QAAD,CAHd;AAIE,MAAA,KAAK,EAAE,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADsB;AAAA,GAAvB,CANH,CADK,GAgBH,IAhBJ;AAiBD;;GAvBeX,I;UACmBN,Q;;;KADnBM,I","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\n\nimport { Item } from \"./item\";\n\nimport { page } from \"../../config.json\";\nimport { Spinner } from \"reactstrap\";\nimport { Loading } from \"../src/Loading\";\n\nconst GET_CATEGORIES = gql`\n  query($seller: UserWhereInput) {\n    allCategories(where: { seller: $seller, root: true }) {\n      id\n      name\n      label\n      url\n      childs {\n        id\n        name\n        label\n        url\n        childs {\n          id\n          name\n          label\n          url\n          childs {\n            id\n            name\n            label\n            url\n            childs {\n              id\n              name\n              label\n              url\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport function List() {\n  const { data, loading, error } = useQuery(GET_CATEGORIES, {\n    variables: { seller: page.seller },\n  });\n  if (error) return <i>{error}</i>;\n  if (loading) return <Loading />;\n  return !loading && data ? (\n    <div>\n      <h5>Danh Mục</h5>\n      <Item\n        categories={[{ id: \"all-category\", name: \"Tất Cả \", url: \"all\" }]}\n        \n      />\n      {data.allCategories.map((category) => (\n        <Item\n          \n          key={category.id}\n          categories={[category]}\n          level={0}\n        />\n      ))}\n    </div>\n  ) : null;\n}\n"]},"metadata":{},"sourceType":"module"}