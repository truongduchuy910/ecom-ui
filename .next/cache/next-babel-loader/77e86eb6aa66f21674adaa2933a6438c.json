{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/ecom-ui/components/Brand/list.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from \"@apollo/client\";\nimport { useRouter, withRouter } from \"next/router\";\nimport { Item } from \"./item\";\nimport { Fragment } from \"react\";\nimport Link from \"next/link\";\nimport { queryVar } from \"../../apollo/action\";\nimport { route } from \"next/dist/next-server/server/router\";\nimport { page } from \"../../config.json\";\nimport { Spinner, Alert } from \"reactstrap\";\nimport { getErrorMessage } from \"../../lib/chip\";\nimport { Loading } from \"../src/Loading\";\nconst GET_CATEGORIES = gql`\n  query($seller: UserWhereInput) {\n    allBrands(where: { seller: $seller }) {\n      id\n      name\n      url\n    }\n  }\n`;\nexport function List() {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_CATEGORIES, {\n    variables: {\n      seller: page.seller\n    }\n  });\n  if (loading) return __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 23\n    }\n  });\n  if (error) return __jsx(\"i\", {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, getErrorMessage(error));\n  return !loading && data ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Th\\u01B0\\u01A1ng Hi\\u1EC7u\"), __jsx(Item, {\n    brand: {\n      id: \"all-brand\",\n      name: \"Tất Cả \",\n      url: \"all\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), data.allBrands.map(brand => __jsx(Item, {\n    key: brand.id,\n    brand: brand,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }))) : null;\n}","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/components/Brand/list.js"],"names":["gql","useQuery","useRouter","withRouter","Item","Fragment","Link","queryVar","route","page","Spinner","Alert","getErrorMessage","Loading","GET_CATEGORIES","List","data","loading","error","variables","seller","id","name","url","allBrands","map","brand"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,aAAtC;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,KAAT,QAAsB,qCAAtB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,YAA/B;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,MAAMC,cAAc,GAAGd,GAAI;;;;;;;;CAA3B;AASA,OAAO,SAASe,IAAT,GAAgB;AACrB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BjB,QAAQ,CAACa,cAAD,EAAiB;AACxDK,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAM,EAAEX,IAAI,CAACW;AAAf;AAD6C,GAAjB,CAAzC;AAGA,MAAIH,OAAJ,EAAa,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAG,IAAA,KAAK,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBN,eAAe,CAACM,KAAD,CAAlC,CAAP;AACX,SAAO,CAACD,OAAD,IAAYD,IAAZ,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEK,MAAAA,EAAE,EAAE,WAAN;AAAmBC,MAAAA,IAAI,EAAE,SAAzB;AAAoCC,MAAAA,GAAG,EAAE;AAAzC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGP,IAAI,CAACQ,SAAL,CAAeC,GAAf,CAAoBC,KAAD,IAClB,MAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,KAAK,CAACL,EAAjB;AAAqB,IAAA,KAAK,EAAEK,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAHH,CADK,GAQH,IARJ;AASD","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\nimport { useRouter, withRouter } from \"next/router\";\nimport { Item } from \"./item\";\nimport { Fragment } from \"react\";\nimport Link from \"next/link\";\nimport { queryVar } from \"../../apollo/action\";\nimport { route } from \"next/dist/next-server/server/router\";\nimport { page } from \"../../config.json\";\nimport { Spinner, Alert } from \"reactstrap\";\nimport { getErrorMessage } from \"../../lib/chip\";\nimport { Loading } from \"../src/Loading\";\nconst GET_CATEGORIES = gql`\n  query($seller: UserWhereInput) {\n    allBrands(where: { seller: $seller }) {\n      id\n      name\n      url\n    }\n  }\n`;\nexport function List() {\n  const { data, loading, error } = useQuery(GET_CATEGORIES, {\n    variables: { seller: page.seller },\n  });\n  if (loading) return <Loading />;\n  if (error) return <i color=\"danger\">{getErrorMessage(error)}</i>;\n  return !loading && data ? (\n    <div>\n      <h5>Thương Hiệu</h5>\n      <Item brand={{ id: \"all-brand\", name: \"Tất Cả \", url: \"all\" }} />\n      {data.allBrands.map((brand) => (\n        <Item key={brand.id} brand={brand} />\n      ))}\n    </div>\n  ) : null;\n}\n"]},"metadata":{},"sourceType":"module"}