{"ast":null,"code":"var _jsxFileName = \"/media/huy/New Volume/linux/apps/ecom-ui/components/Post/detail.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n//\n// Cac component khac su dung query va them vao thuoc tinh cua no de dieu huong\n// Vo tinh lam cho [slug] khi su dung dynamic router xuat hien o trang dieu huong\n// Nen viet cac itemOne khac de tranh di\n//\nimport { Item as BrandItem } from \"../../components/Brand/itemOne\";\nimport { Item as CategoryItem } from \"../../components/Category/itemOne\";\nimport { List as AttributeGroups } from \"../../components/AttributeGroups/listOne\";\nimport { formatMoney } from \"../../lib/chip\";\nimport { Fragment, useContext, useState } from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport { ImgPost } from \"./imagePost\";\nimport { useSpring, animated } from \"react-spring\";\nimport { QuickCart } from \"../Cart/quickCart\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { SellerContext } from \"../src/SellerProvider\";\nconst GET_CART = gql`\n  query {\n    cartItems @client\n  }\n`;\nexport function Post({\n  product,\n  seller\n}) {\n  var _data$cartItems;\n\n  const theme = useContext(SellerContext);\n  const {\n    data\n  } = useQuery(GET_CART);\n  const isIncart = data === null || data === void 0 ? void 0 : (_data$cartItems = data.cartItems) === null || _data$cartItems === void 0 ? void 0 : _data$cartItems.some(item => item.product.id === product.id);\n  const {\n    0: open,\n    1: toggle\n  } = useState(false);\n  const {\n    0: quickCart,\n    1: setQuickCart\n  } = useState(false);\n  const props = useSpring({\n    top: 100,\n    right: 0,\n    zIndex: 11,\n    width: open ? 940 : 340,\n    right: 0,\n    from: {\n      width: 0\n    }\n  });\n  return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }\n  }, \"OK\");\n}","map":{"version":3,"sources":["/media/huy/New Volume/linux/apps/ecom-ui/components/Post/detail.js"],"names":["Item","BrandItem","CategoryItem","List","AttributeGroups","formatMoney","Fragment","useContext","useState","Row","Col","ImgPost","useSpring","animated","QuickCart","gql","useQuery","SellerContext","GET_CART","Post","product","seller","theme","data","isIncart","cartItems","some","item","id","open","toggle","quickCart","setQuickCart","props","top","right","zIndex","width","from"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,IAAI,IAAIC,SAAjB,QAAkC,gCAAlC;AACA,SAASD,IAAI,IAAIE,YAAjB,QAAqC,mCAArC;AACA,SAASC,IAAI,IAAIC,eAAjB,QAAwC,0CAAxC;AAEA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,QAA/B,QAA+C,OAA/C;AAEA,SAASC,GAAT,EAAcC,GAAd,QAAyB,YAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AAEA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,MAAMC,QAAQ,GAAGH,GAAI;;;;CAArB;AAKA,OAAO,SAASI,IAAT,CAAc;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAd,EAAmC;AAAA;;AACxC,QAAMC,KAAK,GAAGf,UAAU,CAACU,aAAD,CAAxB;AAEA,QAAM;AAAEM,IAAAA;AAAF,MAAWP,QAAQ,CAACE,QAAD,CAAzB;AACA,QAAMM,QAAQ,GAAGD,IAAH,aAAGA,IAAH,0CAAGA,IAAI,CAAEE,SAAT,oDAAG,gBAAiBC,IAAjB,CACdC,IAAD,IAAUA,IAAI,CAACP,OAAL,CAAaQ,EAAb,KAAoBR,OAAO,CAACQ,EADvB,CAAjB;AAGA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAiBtB,QAAQ,CAAC,KAAD,CAA/B;AACA,QAAM;AAAA,OAACuB,SAAD;AAAA,OAAYC;AAAZ,MAA4BxB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMyB,KAAK,GAAGrB,SAAS,CAAC;AACtBsB,IAAAA,GAAG,EAAE,GADiB;AAEtBC,IAAAA,KAAK,EAAE,CAFe;AAGtBC,IAAAA,MAAM,EAAE,EAHc;AAItBC,IAAAA,KAAK,EAAER,IAAI,GAAG,GAAH,GAAS,GAJE;AAKtBM,IAAAA,KAAK,EAAE,CALe;AAMtBG,IAAAA,IAAI,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT;AANgB,GAAD,CAAvB;AASA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD","sourcesContent":["//\n// Cac component khac su dung query va them vao thuoc tinh cua no de dieu huong\n// Vo tinh lam cho [slug] khi su dung dynamic router xuat hien o trang dieu huong\n// Nen viet cac itemOne khac de tranh di\n//\nimport { Item as BrandItem } from \"../../components/Brand/itemOne\";\nimport { Item as CategoryItem } from \"../../components/Category/itemOne\";\nimport { List as AttributeGroups } from \"../../components/AttributeGroups/listOne\";\n\nimport { formatMoney } from \"../../lib/chip\";\nimport { Fragment, useContext, useState } from \"react\";\n\nimport { Row, Col } from \"reactstrap\";\nimport { ImgPost } from \"./imagePost\";\n\nimport { useSpring, animated } from \"react-spring\";\n\nimport { QuickCart } from \"../Cart/quickCart\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { SellerContext } from \"../src/SellerProvider\";\nconst GET_CART = gql`\n  query {\n    cartItems @client\n  }\n`;\nexport function Post({ product, seller }) {\n  const theme = useContext(SellerContext);\n\n  const { data } = useQuery(GET_CART);\n  const isIncart = data?.cartItems?.some(\n    (item) => item.product.id === product.id\n  );\n  const [open, toggle] = useState(false);\n  const [quickCart, setQuickCart] = useState(false);\n  const props = useSpring({\n    top: 100,\n    right: 0,\n    zIndex: 11,\n    width: open ? 940 : 340,\n    right: 0,\n    from: { width: 0 },\n  });\n\n  return <h1>OK</h1>;\n}\n"]},"metadata":{},"sourceType":"module"}