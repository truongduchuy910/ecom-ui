{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/huy/apps/ecom-ui/components/src/PlayButton.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { IoIosPlayCircle } from \"react-icons/io\";\nimport { useState } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { theme } from \"../../config\";\nexport var PlayButton = function PlayButton(props) {\n  _s();\n\n  var _useState = useState(false),\n      horver = _useState[0],\n      setHorver = _useState[1];\n\n  var animation = useSpring({\n    color: horver ? theme.primary : theme.backgroundColor,\n    from: {\n      color: theme.backgroundColor\n    }\n  });\n  return __jsx(animated.div, {\n    style: _objectSpread(_objectSpread({}, animation), {}, {\n      display: \"inline-block\",\n      position: \"absolute\"\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(IoIosPlayCircle, _extends({}, props, {\n    style: {\n      color: \"default\",\n      fontSize: 80\n    },\n    onMouseMove: function onMouseMove() {\n      return setHorver(true);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setHorver(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  })));\n};\n\n_s(PlayButton, \"Ot4q6r+wqMAlJcz34l4QUmRRhcM=\", false, function () {\n  return [useSpring];\n});\n\n_c = PlayButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayButton\");","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/components/src/PlayButton.js"],"names":["IoIosPlayCircle","useState","useSpring","animated","theme","PlayButton","props","horver","setHorver","animation","color","primary","backgroundColor","from","display","position","fontSize"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,eAAT,QAAgC,gBAAhC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACPL,QAAQ,CAAC,KAAD,CADD;AAAA,MAC5BM,MAD4B;AAAA,MACpBC,SADoB;;AAEnC,MAAMC,SAAS,GAAGP,SAAS,CAAC;AAC1BQ,IAAAA,KAAK,EAAEH,MAAM,GAAGH,KAAK,CAACO,OAAT,GAAmBP,KAAK,CAACQ,eADZ;AAE1BC,IAAAA,IAAI,EAAE;AAAEH,MAAAA,KAAK,EAAEN,KAAK,CAACQ;AAAf;AAFoB,GAAD,CAA3B;AAIA,SACE,MAAC,QAAD,CAAU,GAAV;AACE,IAAA,KAAK,kCAAOH,SAAP;AAAkBK,MAAAA,OAAO,EAAE,cAA3B;AAA2CC,MAAAA,QAAQ,EAAE;AAArD,MADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,MAAC,eAAD,eACMT,KADN;AAEE,IAAA,KAAK,EAAE;AACLI,MAAAA,KAAK,EAAE,SADF;AAELM,MAAAA,QAAQ,EAAE;AAFL,KAFT;AAME,IAAA,WAAW,EAAE;AAAA,aAAMR,SAAS,CAAC,IAAD,CAAf;AAAA,KANf;AAOE,IAAA,YAAY,EAAE;AAAA,aAAMA,SAAS,CAAC,KAAD,CAAf;AAAA,KAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHF,CADF;AAeD,CArBM;;GAAMH,U;UAEOH,S;;;KAFPG,U","sourcesContent":["import { IoIosPlayCircle } from \"react-icons/io\";\nimport { useState } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { theme } from \"../../config\";\nexport const PlayButton = (props) => {\n  const [horver, setHorver] = useState(false);\n  const animation = useSpring({\n    color: horver ? theme.primary : theme.backgroundColor,\n    from: { color: theme.backgroundColor },\n  });\n  return (\n    <animated.div\n      style={{ ...animation, display: \"inline-block\", position: \"absolute\" }}\n    >\n      <IoIosPlayCircle\n        {...props}\n        style={{\n          color: \"default\",\n          fontSize: 80,\n        }}\n        onMouseMove={() => setHorver(true)}\n        onMouseLeave={() => setHorver(false)}\n      />\n    </animated.div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}