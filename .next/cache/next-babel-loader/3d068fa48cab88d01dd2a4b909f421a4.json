{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/huy/apps/ecom-ui/components/Cart/quickCart.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, Fragment } from \"react\";\nimport { Create as CreateCustomer } from \"../Customer/create\";\nimport { CREATE_ORDER_ITEMS, CREATE_ORDER } from \".\";\nexport var QuickCart = function QuickCart(_ref) {\n  var onClick = _ref.onClick;\n\n  var order = /*#__PURE__*/function () {\n    var _s = $RefreshSig$();\n\n    var _ref2 = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _useMutation, _useMutation2, createOrderItems, _useMutation3, _useMutation4, createOrder, _yield$createOrderIte, dataCOI, error, variables, _yield$createOrder, dataCreateOrder, ER;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _s();\n\n              _useMutation = useMutation(CREATE_ORDER_ITEMS), _useMutation2 = _slicedToArray(_useMutation, 1), createOrderItems = _useMutation2[0];\n              _useMutation3 = useMutation(CREATE_ORDER), _useMutation4 = _slicedToArray(_useMutation3, 1), createOrder = _useMutation4[0]; // create cart items\n\n              _context.next = 5;\n              return createOrderItems({\n                variables: {\n                  data: dataOICI\n                }\n              });\n\n            case 5:\n              _yield$createOrderIte = _context.sent;\n              dataCOI = _yield$createOrderIte.data;\n              error = _yield$createOrderIte.error;\n\n              if (!dataCOI.createOrderItems) {\n                _context.next = 24;\n                break;\n              }\n\n              variables = {\n                items: dataCOI.createOrderItems.map(function (e) {\n                  return {\n                    id: e.id\n                  };\n                }),\n                customer: {\n                  id: customer.id\n                },\n                ofSeller: {\n                  id: page.seller.id\n                },\n                total: sum\n              };\n              _context.prev = 10;\n              _context.next = 13;\n              return createOrder({\n                variables: variables\n              });\n\n            case 13:\n              _yield$createOrder = _context.sent;\n              dataCreateOrder = _yield$createOrder.data;\n              ER = _yield$createOrder.errors;\n              newOrderVar(true);\n              newOrderCountVar(true);\n              emptyCart();\n              router.push({\n                pathname: \"/order\"\n              });\n              _context.next = 24;\n              break;\n\n            case 22:\n              _context.prev = 22;\n              _context.t0 = _context[\"catch\"](10);\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[10, 22]]);\n    }), \"QPVOnN+FLk4LJhcXlgJPitgWpBQ=\", true));\n\n    return function order() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(CreateCustomer, {\n    onCreate: function onCreate() {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n};\n_c = QuickCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuickCart\");","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/components/Cart/quickCart.js"],"names":["useState","Fragment","Create","CreateCustomer","CREATE_ORDER_ITEMS","CREATE_ORDER","QuickCart","onClick","order","useMutation","createOrderItems","createOrder","variables","data","dataOICI","dataCOI","error","items","map","e","id","customer","ofSeller","page","seller","total","sum","dataCreateOrder","ER","errors","newOrderVar","newOrderCountVar","emptyCart","router","push","pathname"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AAEA,SAASC,MAAM,IAAIC,cAAnB,QAAyC,oBAAzC;AACA,SAASC,kBAAT,EAA6BC,YAA7B,QAAiD,GAAjD;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AACxC,MAAMC,KAAK;AAAA;;AAAA,4EAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,6BACeC,WAAW,CAACL,kBAAD,CAD1B,mDACLM,gBADK;AAAA,8BAEUD,WAAW,CAACJ,YAAD,CAFrB,oDAELM,WAFK,qBAGZ;;AAHY;AAAA,qBAI2BD,gBAAgB,CAAC;AACtDE,gBAAAA,SAAS,EAAE;AACTC,kBAAAA,IAAI,EAAEC;AADG;AAD2C,eAAD,CAJ3C;;AAAA;AAAA;AAIEC,cAAAA,OAJF,yBAIJF,IAJI;AAIWG,cAAAA,KAJX,yBAIWA,KAJX;;AAAA,mBAURD,OAAO,CAACL,gBAVA;AAAA;AAAA;AAAA;;AAWNE,cAAAA,SAXM,GAWM;AACdK,gBAAAA,KAAK,EAAEF,OAAO,CAACL,gBAAR,CAAyBQ,GAAzB,CAA6B,UAACC,CAAD;AAAA,yBAAQ;AAC1CC,oBAAAA,EAAE,EAAED,CAAC,CAACC;AADoC,mBAAR;AAAA,iBAA7B,CADO;AAIdC,gBAAAA,QAAQ,EAAE;AAAED,kBAAAA,EAAE,EAAEC,QAAQ,CAACD;AAAf,iBAJI;AAKdE,gBAAAA,QAAQ,EAAE;AAAEF,kBAAAA,EAAE,EAAEG,IAAI,CAACC,MAAL,CAAYJ;AAAlB,iBALI;AAMdK,gBAAAA,KAAK,EAAEC;AANO,eAXN;AAAA;AAAA;AAAA,qBAoB4Cf,WAAW,CAAC;AAC9DC,gBAAAA,SAAS,EAATA;AAD8D,eAAD,CApBvD;;AAAA;AAAA;AAoBMe,cAAAA,eApBN,sBAoBAd,IApBA;AAoB+Be,cAAAA,EApB/B,sBAoBuBC,MApBvB;AAuBRC,cAAAA,WAAW,CAAC,IAAD,CAAX;AACAC,cAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAC,cAAAA,SAAS;AACTC,cAAAA,MAAM,CAACC,IAAP,CAAY;AAAEC,gBAAAA,QAAQ,EAAE;AAAZ,eAAZ;AA1BQ;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAL3B,KAAK;AAAA;AAAA;AAAA,KAAX;;AA8BA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAgB,IAAA,QAAQ,EAAE,oBAAM,CAAE,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CApCM;KAAMF,S","sourcesContent":["import { useState, Fragment } from \"react\";\n\nimport { Create as CreateCustomer } from \"../Customer/create\";\nimport { CREATE_ORDER_ITEMS, CREATE_ORDER } from \".\";\nexport const QuickCart = ({ onClick }) => {\n  const order = async () => {\n    const [createOrderItems] = useMutation(CREATE_ORDER_ITEMS);\n    const [createOrder] = useMutation(CREATE_ORDER);\n    // create cart items\n    const { data: dataCOI, error } = await createOrderItems({\n      variables: {\n        data: dataOICI,\n      },\n    });\n    // creat cart and connect cart items\n    if (dataCOI.createOrderItems) {\n      let variables = {\n        items: dataCOI.createOrderItems.map((e) => ({\n          id: e.id,\n        })),\n        customer: { id: customer.id },\n        ofSeller: { id: page.seller.id },\n        total: sum,\n      };\n      try {\n        const { data: dataCreateOrder, errors: ER } = await createOrder({\n          variables,\n        });\n        newOrderVar(true);\n        newOrderCountVar(true);\n        emptyCart();\n        router.push({ pathname: \"/order\" });\n      } catch {}\n    }\n  };\n  return (\n    <Fragment>\n      <CreateCustomer onCreate={() => {}} />\n    </Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}