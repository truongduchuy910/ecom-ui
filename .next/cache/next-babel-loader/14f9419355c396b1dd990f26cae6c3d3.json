{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { gql, useQuery, useMutation } from \"@apollo/client\";\nimport { WISHLIST } from \"../../apollo/action\";\nimport { IoIosHeartEmpty } from \"react-icons/io\";\nimport { CountIcon } from \"../src/count\";\nimport { Link } from \"../src/Link\";\nimport { useContext } from \"react\";\nimport { SellerContext } from \"../src/SellerProvider\";\nexport function Icon(_ref) {\n  var _data$wishlist;\n\n  var onClick = _ref.onClick,\n      style = _ref.style;\n  var theme = useContext(SellerContext);\n\n  var _useQuery = useQuery(WISHLIST),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading || error || !data) return null;\n  var count = data === null || data === void 0 ? void 0 : (_data$wishlist = data.wishlist) === null || _data$wishlist === void 0 ? void 0 : _data$wishlist.length;\n  return __jsx(Link, {\n    href: \"/wishlist\",\n    onClick: onClick,\n    style: {\n      position: \"relative\"\n    }\n  }, __jsx(IoIosHeartEmpty, {\n    style: _objectSpread({}, style)\n  }), \" \", count ? __jsx(CountIcon, {\n    count: count\n  }) : null);\n}","map":null,"metadata":{},"sourceType":"module"}