{"ast":null,"code":"import { useQuery } from \"@apollo/client\";\nexport const Query = ({\n  query,\n  variables,\n  children\n}) => {\n  const {\n    data,\n    error,\n    loading,\n    fetchMore\n  } = useQuery(query, {\n    variables\n  });\n\n  function more(collection = '') {\n    var _data$collection;\n\n    const count = (_data$collection = data[collection]) === null || _data$collection === void 0 ? void 0 : _data$collection.length;\n    variables.first = count;\n\n    try {\n      fetchMore({\n        variables,\n        updateQuery: (prev, {\n          fetchMoreResult\n        }) => {\n          var _fetchMoreResult$allP;\n\n          if (!((_fetchMoreResult$allP = fetchMoreResult.allProducts) === null || _fetchMoreResult$allP === void 0 ? void 0 : _fetchMoreResult$allP.length)) {\n            return prev;\n          }\n\n          return Object.assign({}, prev, {\n            allProducts: [...prev.allProducts, ...fetchMoreResult.allProducts]\n          });\n        }\n      });\n    } catch (e) {}\n  }\n\n  return children({\n    data,\n    error,\n    loading,\n    more\n  });\n};","map":{"version":3,"sources":["/media/huy/New Volume/linux/apps/ecom-ui/apollo/Query.js"],"names":["useQuery","Query","query","variables","children","data","error","loading","fetchMore","more","collection","count","length","first","updateQuery","prev","fetchMoreResult","allProducts","Object","assign","e"],"mappings":"AAAA,SAASA,QAAT,QAAyB,gBAAzB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,SAAT;AAAoBC,EAAAA;AAApB,CAAD,KAAoC;AACvD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,MAAsCR,QAAQ,CAACE,KAAD,EAAQ;AAAEC,IAAAA;AAAF,GAAR,CAApD;;AACA,WAASM,IAAT,CAAcC,UAAU,GAAG,EAA3B,EAA+B;AAAA;;AAC7B,UAAMC,KAAK,uBAAGN,IAAI,CAACK,UAAD,CAAP,qDAAG,iBAAkBE,MAAhC;AACAT,IAAAA,SAAS,CAACU,KAAV,GAAkBF,KAAlB;;AACA,QAAI;AACFH,MAAAA,SAAS,CAAC;AACRL,QAAAA,SADQ;AAERW,QAAAA,WAAW,EAAE,CAACC,IAAD,EAAO;AAAEC,UAAAA;AAAF,SAAP,KAA+B;AAAA;;AAC1C,cAAI,2BAACA,eAAe,CAACC,WAAjB,0DAAC,sBAA6BL,MAA9B,CAAJ,EAA0C;AACxC,mBAAOG,IAAP;AACD;;AACD,iBAAOG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,IAAlB,EAAwB;AAC7BE,YAAAA,WAAW,EAAE,CAAC,GAAGF,IAAI,CAACE,WAAT,EAAsB,GAAGD,eAAe,CAACC,WAAzC;AADgB,WAAxB,CAAP;AAGD;AATO,OAAD,CAAT;AAWD,KAZD,CAYE,OAAOG,CAAP,EAAU,CAAG;AAChB;;AACD,SAAOhB,QAAQ,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,OAAf;AAAwBE,IAAAA;AAAxB,GAAD,CAAf;AACD,CApBM","sourcesContent":["import { useQuery } from \"@apollo/client\";\r\n\r\nexport const Query = ({ query, variables, children }) => {\r\n  const { data, error, loading, fetchMore } = useQuery(query, { variables });\r\n  function more(collection = '') {\r\n    const count = data[collection]?.length;\r\n    variables.first = count;\r\n    try {\r\n      fetchMore({\r\n        variables,\r\n        updateQuery: (prev, { fetchMoreResult }) => {\r\n          if (!fetchMoreResult.allProducts?.length) {\r\n            return prev;\r\n          }\r\n          return Object.assign({}, prev, {\r\n            allProducts: [...prev.allProducts, ...fetchMoreResult.allProducts],\r\n          });\r\n        },\r\n      });\r\n    } catch (e) { }\r\n  }\r\n  return children({ data, error, loading, more });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}