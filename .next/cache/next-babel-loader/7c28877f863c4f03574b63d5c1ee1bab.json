{"ast":null,"code":"var _jsxFileName = \"/media/huy/New Volume/linux/apps/ecom-ui/components/Post/list.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect, Fragment, useContext } from \"react\";\nimport { gql, useQuery, rewriteURIForGET } from \"@apollo/client\";\nimport { Item as Post } from \"./item\";\nimport { Container, Row, Col, Spinner } from \"reactstrap\";\nimport { toSlug } from \"../../lib/chip\";\nimport { Loading } from \"../src/Loading\";\nimport { SellerContext } from \"../src/SellerProvider\";\nconst GET_POSTS = gql`\n  query(\n    $first: Int\n    $skip: Int\n    $hashtag: HashtagWhereInput\n    $seller: UserWhereInput\n    $except: String\n    $keyword: String\n  ) {\n    allPosts(\n      first: $first\n      skip: $skip\n      where: {\n        AND: [\n          { url_contains: $keyword }\n          { hashtags_every: $hashtag }\n          { seller: $seller }\n          { url_not: $except }\n        ]\n      }\n    ) {\n      id\n      url\n    }\n  }\n`;\nexport const List = ({\n  title = \"\",\n  first = 4,\n  skip = 0,\n  xs,\n  sm,\n  md,\n  lg,\n  xl,\n  more = true,\n  except,\n  center,\n  hashtag,\n  keyword\n}) => {\n  var _data$allPosts2;\n\n  const theme = useContext(SellerContext);\n  let variables = {\n    first,\n    skip,\n    hashtag: hashtag ? {\n      url_contains: hashtag\n    } : null,\n    keyword,\n    seller: theme.seller,\n    except\n  };\n  let {\n    data,\n    error,\n    loading,\n    fetchMore\n  } = useQuery(GET_POSTS, {\n    variables\n  });\n  let {\n    0: on,\n    1: setOn\n  } = useState(true);\n  let width = 0;\n  useEffect(() => {\n    // fetch more data\n    if (more) {\n      const postsEle = document.getElementById(\"posts\"); // hight of element - scrollTop < window height ?\n\n      const alpha = () => (postsEle === null || postsEle === void 0 ? void 0 : postsEle.clientHeight) - document.scrollingElement.scrollTop - window.innerHeight + 150; // loading done\n\n\n      if (alpha() > 0) setOn(false);\n\n      if (on && !loading && alpha() < 0) {\n        loadingMore();\n      }\n\n      window.onscroll = () => {\n        if (alpha() < 0 && !on) setOn(true);\n      };\n    }\n\n    if (!width) width = window.innerWidth;\n  });\n\n  function loadingMore() {\n    var _data$allPosts;\n\n    const count = data === null || data === void 0 ? void 0 : (_data$allPosts = data.allPosts) === null || _data$allPosts === void 0 ? void 0 : _data$allPosts.length;\n    variables.skip = count;\n\n    try {\n      fetchMore({\n        variables,\n        updateQuery: (prev, {\n          fetchMoreResult\n        }) => {\n          var _fetchMoreResult$allP;\n\n          if (!((_fetchMoreResult$allP = fetchMoreResult.allPosts) === null || _fetchMoreResult$allP === void 0 ? void 0 : _fetchMoreResult$allP.length)) {\n            console.log(first, skip, count);\n            return prev;\n          }\n\n          return Object.assign({}, prev, {\n            allPosts: [...prev.allPosts, ...fetchMoreResult.allPosts]\n          });\n        }\n      });\n    } catch (e) {}\n  }\n\n  if (error || loading) return __jsx(\"div\", {\n    style: {\n      margin: theme.spacing(3)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }));\n  return (data === null || data === void 0 ? void 0 : (_data$allPosts2 = data.allPosts) === null || _data$allPosts2 === void 0 ? void 0 : _data$allPosts2.length) ? __jsx(\"section\", {\n    id: \"posts\",\n    style: {\n      paddingLeft: theme.spacing(2)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, title ? __jsx(\"h2\", {\n    style: _objectSpread(_objectSpread({}, theme.css.h2), {}, {\n      textAlign: \"center\",\n      marginBottom: theme.spacing(5)\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, title) : null, __jsx(Row, {\n    noGutters: true,\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, data.allPosts.map(post => {\n    var _data$allPosts3, _data$allPosts4, _data$allPosts5, _data$allPosts6, _data$allPosts7;\n\n    return __jsx(Col, {\n      key: post.id,\n      xs: (data === null || data === void 0 ? void 0 : (_data$allPosts3 = data.allPosts) === null || _data$allPosts3 === void 0 ? void 0 : _data$allPosts3.length) > 2 ? xs ? xs : 6 : 12,\n      sm: (data === null || data === void 0 ? void 0 : (_data$allPosts4 = data.allPosts) === null || _data$allPosts4 === void 0 ? void 0 : _data$allPosts4.length) > 2 ? sm ? sm : 6 : 6,\n      md: (data === null || data === void 0 ? void 0 : (_data$allPosts5 = data.allPosts) === null || _data$allPosts5 === void 0 ? void 0 : _data$allPosts5.length) > 2 ? md ? md : 4 : 4,\n      lg: (data === null || data === void 0 ? void 0 : (_data$allPosts6 = data.allPosts) === null || _data$allPosts6 === void 0 ? void 0 : _data$allPosts6.length) > 2 ? lg ? lg : 3 : 3,\n      xl: (data === null || data === void 0 ? void 0 : (_data$allPosts7 = data.allPosts) === null || _data$allPosts7 === void 0 ? void 0 : _data$allPosts7.length) > 2 ? xl ? xl : 2 : 3,\n      style: {\n        padding: width <= 768 && width != 0 ? 3 : theme.spacing(2),\n        paddingTop: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, __jsx(Post, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }));\n  }))) : __jsx(\"p\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, \"Kh\\xF4ng c\\xF3 k\\u1EBFt qu\\u1EA3!\");\n};","map":{"version":3,"sources":["/media/huy/New Volume/linux/apps/ecom-ui/components/Post/list.js"],"names":["useState","useEffect","Fragment","useContext","gql","useQuery","rewriteURIForGET","Item","Post","Container","Row","Col","Spinner","toSlug","Loading","SellerContext","GET_POSTS","List","title","first","skip","xs","sm","md","lg","xl","more","except","center","hashtag","keyword","theme","variables","url_contains","seller","data","error","loading","fetchMore","on","setOn","width","postsEle","document","getElementById","alpha","clientHeight","scrollingElement","scrollTop","window","innerHeight","loadingMore","onscroll","innerWidth","count","allPosts","length","updateQuery","prev","fetchMoreResult","console","log","Object","assign","e","margin","spacing","paddingLeft","css","h2","textAlign","marginBottom","display","justifyContent","map","post","id","padding","paddingTop"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,EAAwCC,UAAxC,QAA0D,OAA1D;AACA,SAASC,GAAT,EAAcC,QAAd,EAAwBC,gBAAxB,QAAgD,gBAAhD;AACA,SAASC,IAAI,IAAIC,IAAjB,QAA6B,QAA7B;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,OAA9B,QAA6C,YAA7C;AAEA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AAEA,SAASC,aAAT,QAA8B,uBAA9B;AACA,MAAMC,SAAS,GAAGZ,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;CAAtB;AA0BA,OAAO,MAAMa,IAAI,GAAG,CAAC;AACnBC,EAAAA,KAAK,GAAG,EADW;AAEnBC,EAAAA,KAAK,GAAG,CAFW;AAGnBC,EAAAA,IAAI,GAAG,CAHY;AAInBC,EAAAA,EAJmB;AAKnBC,EAAAA,EALmB;AAMnBC,EAAAA,EANmB;AAOnBC,EAAAA,EAPmB;AAQnBC,EAAAA,EARmB;AASnBC,EAAAA,IAAI,GAAG,IATY;AAUnBC,EAAAA,MAVmB;AAWnBC,EAAAA,MAXmB;AAYnBC,EAAAA,OAZmB;AAanBC,EAAAA;AAbmB,CAAD,KAcd;AAAA;;AACJ,QAAMC,KAAK,GAAG5B,UAAU,CAACY,aAAD,CAAxB;AACA,MAAIiB,SAAS,GAAG;AACdb,IAAAA,KADc;AAEdC,IAAAA,IAFc;AAIdS,IAAAA,OAAO,EAAEA,OAAO,GAAG;AAAEI,MAAAA,YAAY,EAAEJ;AAAhB,KAAH,GAA+B,IAJjC;AAKdC,IAAAA,OALc;AAMdI,IAAAA,MAAM,EAAEH,KAAK,CAACG,MANA;AAQdP,IAAAA;AARc,GAAhB;AAWA,MAAI;AAAEQ,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,MAAsCjC,QAAQ,CAACW,SAAD,EAAY;AAC5DgB,IAAAA;AAD4D,GAAZ,CAAlD;AAGA,MAAI;AAAA,OAACO,EAAD;AAAA,OAAKC;AAAL,MAAcxC,QAAQ,CAAC,IAAD,CAA1B;AACA,MAAIyC,KAAK,GAAG,CAAZ;AACAxC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIyB,IAAJ,EAAU;AACR,YAAMgB,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAjB,CADQ,CAER;;AACA,YAAMC,KAAK,GAAG,MACZ,CAAAH,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEI,YAAV,IACAH,QAAQ,CAACI,gBAAT,CAA0BC,SAD1B,GAEAC,MAAM,CAACC,WAFP,GAGA,GAJF,CAHQ,CAQR;;;AACA,UAAIL,KAAK,KAAK,CAAd,EAAiBL,KAAK,CAAC,KAAD,CAAL;;AACjB,UAAID,EAAE,IAAI,CAACF,OAAP,IAAkBQ,KAAK,KAAK,CAAhC,EAAmC;AACjCM,QAAAA,WAAW;AACZ;;AAEDF,MAAAA,MAAM,CAACG,QAAP,GAAkB,MAAM;AACtB,YAAIP,KAAK,KAAK,CAAV,IAAe,CAACN,EAApB,EAAwBC,KAAK,CAAC,IAAD,CAAL;AACzB,OAFD;AAGD;;AACD,QAAI,CAACC,KAAL,EAAYA,KAAK,GAAGQ,MAAM,CAACI,UAAf;AACb,GArBQ,CAAT;;AAsBA,WAASF,WAAT,GAAuB;AAAA;;AACrB,UAAMG,KAAK,GAAGnB,IAAH,aAAGA,IAAH,yCAAGA,IAAI,CAAEoB,QAAT,mDAAG,eAAgBC,MAA9B;AACAxB,IAAAA,SAAS,CAACZ,IAAV,GAAiBkC,KAAjB;;AACA,QAAI;AACFhB,MAAAA,SAAS,CAAC;AACRN,QAAAA,SADQ;AAERyB,QAAAA,WAAW,EAAE,CAACC,IAAD,EAAO;AAAEC,UAAAA;AAAF,SAAP,KAA+B;AAAA;;AAC1C,cAAI,2BAACA,eAAe,CAACJ,QAAjB,0DAAC,sBAA0BC,MAA3B,CAAJ,EAAuC;AACrCI,YAAAA,OAAO,CAACC,GAAR,CAAY1C,KAAZ,EAAmBC,IAAnB,EAAyBkC,KAAzB;AAEA,mBAAOI,IAAP;AACD;;AACD,iBAAOI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,IAAlB,EAAwB;AAC7BH,YAAAA,QAAQ,EAAE,CAAC,GAAGG,IAAI,CAACH,QAAT,EAAmB,GAAGI,eAAe,CAACJ,QAAtC;AADmB,WAAxB,CAAP;AAGD;AAXO,OAAD,CAAT;AAaD,KAdD,CAcE,OAAOS,CAAP,EAAU,CAAE;AACf;;AACD,MAAI5B,KAAK,IAAIC,OAAb,EACE,OACE;AAAK,IAAA,KAAK,EAAE;AAAE4B,MAAAA,MAAM,EAAElC,KAAK,CAACmC,OAAN,CAAc,CAAd;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKF,SAAO,CAAA/B,IAAI,SAAJ,IAAAA,IAAI,WAAJ,+BAAAA,IAAI,CAAEoB,QAAN,oEAAgBC,MAAhB,IACL;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,KAAK,EAAE;AACLW,MAAAA,WAAW,EAAEpC,KAAK,CAACmC,OAAN,CAAc,CAAd;AADR,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGhD,KAAK,GACJ;AACE,IAAA,KAAK,kCACAa,KAAK,CAACqC,GAAN,CAAUC,EADV;AAEHC,MAAAA,SAAS,EAAE,QAFR;AAGHC,MAAAA,YAAY,EAAExC,KAAK,CAACmC,OAAN,CAAc,CAAd;AAHX,MADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGhD,KAPH,CADI,GAUF,IAhBN,EAiBE,MAAC,GAAD;AAAK,IAAA,SAAS,MAAd;AAAe,IAAA,KAAK,EAAE;AAAEsD,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,cAAc,EAAE;AAAnC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtC,IAAI,CAACoB,QAAL,CAAcmB,GAAd,CAAmBC,IAAD;AAAA;;AAAA,WACjB,MAAC,GAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,MAAA,EAAE,EAAE,CAAAzC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,+BAAAA,IAAI,CAAEoB,QAAN,oEAAgBC,MAAhB,IAAyB,CAAzB,GAA8BnC,EAAE,GAAGA,EAAH,GAAQ,CAAxC,GAA6C,EAFnD;AAGE,MAAA,EAAE,EAAE,CAAAc,IAAI,SAAJ,IAAAA,IAAI,WAAJ,+BAAAA,IAAI,CAAEoB,QAAN,oEAAgBC,MAAhB,IAAyB,CAAzB,GAA8BlC,EAAE,GAAGA,EAAH,GAAQ,CAAxC,GAA6C,CAHnD;AAIE,MAAA,EAAE,EAAE,CAAAa,IAAI,SAAJ,IAAAA,IAAI,WAAJ,+BAAAA,IAAI,CAAEoB,QAAN,oEAAgBC,MAAhB,IAAyB,CAAzB,GAA8BjC,EAAE,GAAGA,EAAH,GAAQ,CAAxC,GAA6C,CAJnD;AAKE,MAAA,EAAE,EAAE,CAAAY,IAAI,SAAJ,IAAAA,IAAI,WAAJ,+BAAAA,IAAI,CAAEoB,QAAN,oEAAgBC,MAAhB,IAAyB,CAAzB,GAA8BhC,EAAE,GAAGA,EAAH,GAAQ,CAAxC,GAA6C,CALnD;AAME,MAAA,EAAE,EAAE,CAAAW,IAAI,SAAJ,IAAAA,IAAI,WAAJ,+BAAAA,IAAI,CAAEoB,QAAN,oEAAgBC,MAAhB,IAAyB,CAAzB,GAA8B/B,EAAE,GAAGA,EAAH,GAAQ,CAAxC,GAA6C,CANnD;AAOE,MAAA,KAAK,EAAE;AACLoD,QAAAA,OAAO,EAAEpC,KAAK,IAAI,GAAT,IAAgBA,KAAK,IAAI,CAAzB,GAA6B,CAA7B,GAAiCV,KAAK,CAACmC,OAAN,CAAc,CAAd,CADrC;AAELY,QAAAA,UAAU,EAAE;AAFP,OAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAEH,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADiB;AAAA,GAAlB,CADH,CAjBF,CADK,GAsCL;AAAG,IAAA,KAAK,EAAE;AAAEL,MAAAA,SAAS,EAAE;AAAb,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAtCF;AAwCD,CAvHM","sourcesContent":["import { useState, useEffect, Fragment, useContext } from \"react\";\nimport { gql, useQuery, rewriteURIForGET } from \"@apollo/client\";\nimport { Item as Post } from \"./item\";\nimport { Container, Row, Col, Spinner } from \"reactstrap\";\n\nimport { toSlug } from \"../../lib/chip\";\nimport { Loading } from \"../src/Loading\";\n\nimport { SellerContext } from \"../src/SellerProvider\";\nconst GET_POSTS = gql`\n  query(\n    $first: Int\n    $skip: Int\n    $hashtag: HashtagWhereInput\n    $seller: UserWhereInput\n    $except: String\n    $keyword: String\n  ) {\n    allPosts(\n      first: $first\n      skip: $skip\n      where: {\n        AND: [\n          { url_contains: $keyword }\n          { hashtags_every: $hashtag }\n          { seller: $seller }\n          { url_not: $except }\n        ]\n      }\n    ) {\n      id\n      url\n    }\n  }\n`;\nexport const List = ({\n  title = \"\",\n  first = 4,\n  skip = 0,\n  xs,\n  sm,\n  md,\n  lg,\n  xl,\n  more = true,\n  except,\n  center,\n  hashtag,\n  keyword,\n}) => {\n  const theme = useContext(SellerContext);\n  let variables = {\n    first,\n    skip,\n\n    hashtag: hashtag ? { url_contains: hashtag } : null,\n    keyword,\n    seller: theme.seller,\n\n    except,\n  };\n\n  let { data, error, loading, fetchMore } = useQuery(GET_POSTS, {\n    variables,\n  });\n  let [on, setOn] = useState(true);\n  let width = 0;\n  useEffect(() => {\n    // fetch more data\n    if (more) {\n      const postsEle = document.getElementById(\"posts\");\n      // hight of element - scrollTop < window height ?\n      const alpha = () =>\n        postsEle?.clientHeight -\n        document.scrollingElement.scrollTop -\n        window.innerHeight +\n        150;\n      // loading done\n      if (alpha() > 0) setOn(false);\n      if (on && !loading && alpha() < 0) {\n        loadingMore();\n      }\n\n      window.onscroll = () => {\n        if (alpha() < 0 && !on) setOn(true);\n      };\n    }\n    if (!width) width = window.innerWidth;\n  });\n  function loadingMore() {\n    const count = data?.allPosts?.length;\n    variables.skip = count;\n    try {\n      fetchMore({\n        variables,\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult.allPosts?.length) {\n            console.log(first, skip, count);\n\n            return prev;\n          }\n          return Object.assign({}, prev, {\n            allPosts: [...prev.allPosts, ...fetchMoreResult.allPosts],\n          });\n        },\n      });\n    } catch (e) {}\n  }\n  if (error || loading)\n    return (\n      <div style={{ margin: theme.spacing(3) }}>\n        <Loading />\n      </div>\n    );\n  return data?.allPosts?.length ? (\n    <section\n      id=\"posts\"\n      style={{\n        paddingLeft: theme.spacing(2),\n      }}\n    >\n      {title ? (\n        <h2\n          style={{\n            ...theme.css.h2,\n            textAlign: \"center\",\n            marginBottom: theme.spacing(5),\n          }}\n        >\n          {title}\n        </h2>\n      ) : null}\n      <Row noGutters style={{ display: \"flex\", justifyContent: \"center\" }}>\n        {data.allPosts.map((post) => (\n          <Col\n            key={post.id}\n            xs={data?.allPosts?.length > 2 ? (xs ? xs : 6) : 12}\n            sm={data?.allPosts?.length > 2 ? (sm ? sm : 6) : 6}\n            md={data?.allPosts?.length > 2 ? (md ? md : 4) : 4}\n            lg={data?.allPosts?.length > 2 ? (lg ? lg : 3) : 3}\n            xl={data?.allPosts?.length > 2 ? (xl ? xl : 2) : 3}\n            style={{\n              padding: width <= 768 && width != 0 ? 3 : theme.spacing(2),\n              paddingTop: 0,\n            }}\n          >\n            <Post post={post} />\n          </Col>\n        ))}\n      </Row>\n    </section>\n  ) : (\n    <p style={{ textAlign: \"center\" }}>Không có kết quả!</p>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}