{"ast":null,"code":"var _jsxFileName = \"/media/huy/New Volume/linux/apps/ecom-ui/components/Product/Item/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Loading } from \"../../Loading\";\nimport One from \"./One\";\n\nconst Item = ({\n  option = 1,\n  ProductWhereInput\n}) => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(gql`\n    query($condition: ProductWhereInput) {\n      allProducts(first: 1, where: $condition) {\n        id\n        url\n        image {\n          publicUrl\n        }\n        name\n        price\n        sale\n        images {\n          file {\n            publicUrl\n          }\n        }\n        brand {\n          name\n          url\n        }\n        category {\n          id\n          name\n          url\n        }\n        description\n        file {\n          publicUrl\n        }\n        guide\n        altImages\n      }\n    }\n  `, {\n    variables: {\n      condition: ProductWhereInput\n    }\n  });\n\n  if (!(error || loading)) {\n    if (data === null || data === void 0 ? void 0 : data.allProducts.length) switch (option) {\n      case 1:\n        return __jsx(One, {\n          product: data === null || data === void 0 ? void 0 : data.allProducts[0],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 24\n          }\n        });\n    } else return __jsx(\"pre\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, \"No result.\");\n  } else return __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  });\n};\n\nexport default Item;","map":{"version":3,"sources":["/media/huy/New Volume/linux/apps/ecom-ui/components/Product/Item/index.js"],"names":["gql","useQuery","Loading","One","Item","option","ProductWhereInput","data","loading","error","variables","condition","allProducts","length"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AACA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,MAAM,GAAG,CAAX;AAAcC,EAAAA;AAAd,CAAD,KAAuC;AAClD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BR,QAAQ,CAACD,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAL,EAiCtC;AAAEU,IAAAA,SAAS,EAAE;AAAEC,MAAAA,SAAS,EAAEL;AAAb;AAAb,GAjCsC,CAAzC;;AAkCA,MAAI,EAAEG,KAAK,IAAID,OAAX,CAAJ,EAAyB;AACvB,QAAID,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEK,WAAN,CAAkBC,MAAtB,EACE,QAAQR,MAAR;AACE,WAAK,CAAL;AAAQ,eAAO,MAAC,GAAD;AAAK,UAAA,OAAO,EAAEE,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEK,WAAN,CAAkB,CAAlB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AADV,KADF,MAGS,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACV,GALD,MAKO,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACR,CAzCD;;AA0CA,eAAeR,IAAf","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\r\nimport { Loading } from \"../../Loading\";\r\nimport One from \"./One\";\r\nconst Item = ({ option = 1, ProductWhereInput }) => {\r\n  const { data, loading, error } = useQuery(gql`\r\n    query($condition: ProductWhereInput) {\r\n      allProducts(first: 1, where: $condition) {\r\n        id\r\n        url\r\n        image {\r\n          publicUrl\r\n        }\r\n        name\r\n        price\r\n        sale\r\n        images {\r\n          file {\r\n            publicUrl\r\n          }\r\n        }\r\n        brand {\r\n          name\r\n          url\r\n        }\r\n        category {\r\n          id\r\n          name\r\n          url\r\n        }\r\n        description\r\n        file {\r\n          publicUrl\r\n        }\r\n        guide\r\n        altImages\r\n      }\r\n    }\r\n  `, { variables: { condition: ProductWhereInput } })\r\n  if (!(error || loading)) {\r\n    if (data?.allProducts.length)\r\n      switch (option) {\r\n        case 1: return <One product={data?.allProducts[0]} />\r\n      } else return <pre>No result.</pre>\r\n  } else return <Loading />\r\n}\r\nexport default Item"]},"metadata":{},"sourceType":"module"}