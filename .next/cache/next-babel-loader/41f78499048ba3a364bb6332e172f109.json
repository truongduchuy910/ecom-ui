{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/home/huy/apps/ecom-ui/components/Cart/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation(\\n    $items: [OrderItemWhereUniqueInput]\\n    $customer: CustomerWhereUniqueInput\\n    $ofSeller: UserWhereUniqueInput\\n    $total: Int\\n  ) {\\n    createOrder(\\n      data: {\\n        customer: { connect: $customer }\\n        items: { connect: $items }\\n        ofSeller: { connect: $ofSeller }\\n        total: $total\\n      }\\n    ) {\\n      id\\n      seller {\\n        id\\n        name\\n      }\\n      items {\\n        id\\n        product {\\n          image {\\n            publicUrl\\n          }\\n          images {\\n            file {\\n              publicUrl\\n            }\\n          }\\n          name\\n        }\\n        price\\n        quantity\\n        attributes {\\n          id\\n          name\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($data: [OrderItemsCreateInput]) {\\n    createOrderItems(data: $data) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    cartItems @client\\n    user @client\\n    customer @client\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery, useMutation } from \"@apollo/client\";\nimport { emptyCart } from \"../../apollo/action\";\nimport { customerVar, newOrderVar, newOrderCountVar } from \"../../apollo/client\";\nimport { Item as CartItem } from \"./item\";\nimport { List } from \"./list\";\nimport { useRouter } from \"next/router\";\nimport { page } from \"../../config/index\";\nimport { formatMoney, getErrorMessage } from \"../../lib/chip\";\nimport { Fragment } from \"react\";\nimport { css } from \"../src/css\";\nimport theme from \"../src/theme\";\nimport { Loading } from \"../src/Loading\";\nimport { Link } from \"../src/Link\";\nimport { List as Customer } from \"../Customer/CurrentCustomer\";\nexport var CART = gql(_templateObject()); // create orderItem\n\nexport var CREATE_ORDER_ITEMS = gql(_templateObject2()); // create Order\n\nexport var CREATE_ORDER = gql(_templateObject3());\nexport var OrderItemsCreateInput = function OrderItemsCreateInput(item) {\n  return {\n    data: {\n      product: {\n        connect: {\n          id: item.product.id\n        }\n      },\n      price: item.price,\n      quantity: item.quantity\n    }\n  };\n};\n_c = OrderItemsCreateInput;\nexport var OrderItemsCreateInputs = function OrderItemsCreateInputs() {\n  var cartItems = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return cartItems === null || cartItems === void 0 ? void 0 : cartItems.map(function (item) {\n    return OrderItemsCreateInput(item);\n  });\n};\n_c2 = OrderItemsCreateInputs;\nexport var order = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var createOrderItems, createOrder, dataOICI, page, customer, _yield$createOrderIte, dataCOI, error, variables, _yield$createOrder, dataCreateOrder, ER;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            createOrderItems = _ref.createOrderItems, createOrder = _ref.createOrder, dataOICI = _ref.dataOICI, page = _ref.page, customer = _ref.customer;\n            _context.next = 3;\n            return createOrderItems({\n              variables: {\n                data: dataOICI\n              }\n            });\n\n          case 3:\n            _yield$createOrderIte = _context.sent;\n            dataCOI = _yield$createOrderIte.data;\n            error = _yield$createOrderIte.error;\n\n            if (!dataCOI.createOrderItems) {\n              _context.next = 22;\n              break;\n            }\n\n            variables = {\n              items: dataCOI.createOrderItems.map(function (e) {\n                return {\n                  id: e.id\n                };\n              }),\n              customer: {\n                id: customer.id\n              },\n              ofSeller: {\n                id: page.seller.id\n              },\n              total: sum\n            };\n            _context.prev = 8;\n            _context.next = 11;\n            return createOrder({\n              variables: variables\n            });\n\n          case 11:\n            _yield$createOrder = _context.sent;\n            dataCreateOrder = _yield$createOrder.data;\n            ER = _yield$createOrder.errors;\n            newOrderVar(true);\n            newOrderCountVar(true);\n            emptyCart();\n            router.push({\n              pathname: \"/order\"\n            });\n            _context.next = 22;\n            break;\n\n          case 20:\n            _context.prev = 20;\n            _context.t0 = _context[\"catch\"](8);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[8, 20]]);\n  }));\n\n  return function order(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport function Cart() {\n  _s();\n\n  // query\n  var _useQuery = useQuery(CART),\n      cartData = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error; // mutation\n\n\n  var _useMutation = useMutation(CREATE_ORDER_ITEMS),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createOrderItems = _useMutation2[0];\n\n  var _useMutation3 = useMutation(CREATE_ORDER),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      createOrder = _useMutation4[0];\n\n  if (loading || error || !cartData) return __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 45\n    }\n  });\n  var customer = cartData.customer,\n      cartItems = cartData.cartItems,\n      user = cartData.user;\n  var sum = 0;\n  cartItems === null || cartItems === void 0 ? void 0 : cartItems.map(function (cartItem) {\n    sum += cartItem.price;\n  }); // create OrderItemsCreateInputs (GraphQL type)\n\n  var dataOICI = OrderItemsCreateInputs(cartItems);\n  dataOICI === null || dataOICI === void 0 ? void 0 : dataOICI.map(function (data) {\n    return data.data.ofSeller = {\n      connect: {\n        id: page.seller.id\n      }\n    };\n  }); // function\n\n  return (user === null || user === void 0 ? void 0 : user.id) ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, __jsx(Customer, {\n    customer: customer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }), __jsx(List, {\n    cartItems: cartItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }), (dataOICI === null || dataOICI === void 0 ? void 0 : dataOICI.length) && user ? __jsx(\"button\", {\n    style: css.button,\n    onClick: function onClick() {\n      order({\n        createOrderItems: createOrderItems,\n        createOrder: createOrder,\n        dataOICI: dataOICI,\n        page: page,\n        customer: customer,\n        sum: sum\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, \"X\\xE1c nh\\u1EADn \\u0111\\u01A1n h\\xE0ng\") : null) : __jsx(\"div\", {\n    style: {\n      paddingBottom: theme.spacing(3)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    href: {\n      pathname: \"/signin\",\n      query: {\n        redirect: \"/cart\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, \"B\\u1EA5m v\\xE0o \\u0111\\xE2y \\u0111\\u1EC3 \\u0111\\u0103ng nh\\u1EADp v\\xE0 ti\\u1EBFp t\\u1EE5c\"));\n}\n\n_s(Cart, \"kxf5Q9aMUDAX3f7uUnpdhOAj82s=\", false, function () {\n  return [useQuery, useMutation, useMutation];\n});\n\n_c3 = Cart;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"OrderItemsCreateInput\");\n$RefreshReg$(_c2, \"OrderItemsCreateInputs\");\n$RefreshReg$(_c3, \"Cart\");","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/components/Cart/index.js"],"names":["gql","useQuery","useMutation","emptyCart","customerVar","newOrderVar","newOrderCountVar","Item","CartItem","List","useRouter","page","formatMoney","getErrorMessage","Fragment","css","theme","Loading","Link","Customer","CART","CREATE_ORDER_ITEMS","CREATE_ORDER","OrderItemsCreateInput","item","data","product","connect","id","price","quantity","OrderItemsCreateInputs","cartItems","map","order","createOrderItems","createOrder","dataOICI","customer","variables","dataCOI","error","items","e","ofSeller","seller","total","sum","dataCreateOrder","ER","errors","router","push","pathname","Cart","cartData","loading","user","cartItem","length","button","paddingBottom","spacing","query","redirect"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,QAAd,EAAwBC,WAAxB,QAA2C,gBAA3C;AAEA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SACEC,WADF,EAEEC,WAFF,EAGEC,gBAHF,QAIO,qBAJP;AAKA,SAASC,IAAI,IAAIC,QAAjB,QAAiC,QAAjC;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,IAAT,QAAqB,oBAArB;AAEA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,gBAA7C;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAAST,IAAI,IAAIU,QAAjB,QAAiC,6BAAjC;AACA,OAAO,IAAMC,IAAI,GAAGpB,GAAH,mBAAV,C,CAOP;;AACA,OAAO,IAAMqB,kBAAkB,GAAGrB,GAAH,oBAAxB,C,CAQP;;AACA,OAAO,IAAMsB,YAAY,GAAGtB,GAAH,oBAAlB;AA2CP,OAAO,IAAMuB,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,IAAD;AAAA,SAAW;AAC9CC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,EAAE,EAAEJ,IAAI,CAACE,OAAL,CAAaE;AAAnB;AAAX,OADL;AAEJC,MAAAA,KAAK,EAAEL,IAAI,CAACK,KAFR;AAGJC,MAAAA,QAAQ,EAAEN,IAAI,CAACM;AAHX;AADwC,GAAX;AAAA,CAA9B;KAAMP,qB;AAOb,OAAO,IAAMQ,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA,MAACC,SAAD,uEAAa,EAAb;AAAA,SACpCA,SADoC,aACpCA,SADoC,uBACpCA,SAAS,CAAEC,GAAX,CAAe,UAACT,IAAD;AAAA,WAAUD,qBAAqB,CAACC,IAAD,CAA/B;AAAA,GAAf,CADoC;AAAA,CAA/B;MAAMO,sB;AAGb,OAAO,IAAMG,KAAK;AAAA,uEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnBC,YAAAA,gBADmB,QACnBA,gBADmB,EAEnBC,WAFmB,QAEnBA,WAFmB,EAGnBC,QAHmB,QAGnBA,QAHmB,EAInB1B,IAJmB,QAInBA,IAJmB,EAKnB2B,QALmB,QAKnBA,QALmB;AAAA;AAAA,mBAQoBH,gBAAgB,CAAC;AACtDI,cAAAA,SAAS,EAAE;AACTd,gBAAAA,IAAI,EAAEY;AADG;AAD2C,aAAD,CARpC;;AAAA;AAAA;AAQLG,YAAAA,OARK,yBAQXf,IARW;AAQIgB,YAAAA,KARJ,yBAQIA,KARJ;;AAAA,iBAcfD,OAAO,CAACL,gBAdO;AAAA;AAAA;AAAA;;AAebI,YAAAA,SAfa,GAeD;AACdG,cAAAA,KAAK,EAAEF,OAAO,CAACL,gBAAR,CAAyBF,GAAzB,CAA6B,UAACU,CAAD;AAAA,uBAAQ;AAC1Cf,kBAAAA,EAAE,EAAEe,CAAC,CAACf;AADoC,iBAAR;AAAA,eAA7B,CADO;AAIdU,cAAAA,QAAQ,EAAE;AAAEV,gBAAAA,EAAE,EAAEU,QAAQ,CAACV;AAAf,eAJI;AAKdgB,cAAAA,QAAQ,EAAE;AAAEhB,gBAAAA,EAAE,EAAEjB,IAAI,CAACkC,MAAL,CAAYjB;AAAlB,eALI;AAMdkB,cAAAA,KAAK,EAAEC;AANO,aAfC;AAAA;AAAA;AAAA,mBAwBqCX,WAAW,CAAC;AAC9DG,cAAAA,SAAS,EAATA;AAD8D,aAAD,CAxBhD;;AAAA;AAAA;AAwBDS,YAAAA,eAxBC,sBAwBPvB,IAxBO;AAwBwBwB,YAAAA,EAxBxB,sBAwBgBC,MAxBhB;AA2Bf7C,YAAAA,WAAW,CAAC,IAAD,CAAX;AACAC,YAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAH,YAAAA,SAAS;AACTgD,YAAAA,MAAM,CAACC,IAAP,CAAY;AAAEC,cAAAA,QAAQ,EAAE;AAAZ,aAAZ;AA9Be;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAALnB,KAAK;AAAA;AAAA;AAAA,GAAX;AAkCP,OAAO,SAASoB,IAAT,GAAgB;AAAA;;AACrB;AADqB,kBAEsBrD,QAAQ,CAACmB,IAAD,CAF9B;AAAA,MAEPmC,QAFO,aAEb9B,IAFa;AAAA,MAEG+B,OAFH,aAEGA,OAFH;AAAA,MAEYf,KAFZ,aAEYA,KAFZ,EAGrB;;;AAHqB,qBAIMvC,WAAW,CAACmB,kBAAD,CAJjB;AAAA;AAAA,MAIdc,gBAJc;;AAAA,sBAKCjC,WAAW,CAACoB,YAAD,CALZ;AAAA;AAAA,MAKdc,WALc;;AAOrB,MAAIoB,OAAO,IAAIf,KAAX,IAAoB,CAACc,QAAzB,EAAmC,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAPd,MASbjB,QATa,GASiBiB,QATjB,CASbjB,QATa;AAAA,MASHN,SATG,GASiBuB,QATjB,CASHvB,SATG;AAAA,MASQyB,IATR,GASiBF,QATjB,CASQE,IATR;AAUrB,MAAIV,GAAG,GAAG,CAAV;AACAf,EAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEC,GAAX,CAAe,UAACyB,QAAD,EAAc;AAC3BX,IAAAA,GAAG,IAAIW,QAAQ,CAAC7B,KAAhB;AACD,GAFD,EAXqB,CAerB;;AACA,MAAIQ,QAAQ,GAAGN,sBAAsB,CAACC,SAAD,CAArC;AACAK,EAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEJ,GAAV,CACE,UAACR,IAAD;AAAA,WAAWA,IAAI,CAACA,IAAL,CAAUmB,QAAV,GAAqB;AAAEjB,MAAAA,OAAO,EAAE;AAAEC,QAAAA,EAAE,EAAEjB,IAAI,CAACkC,MAAL,CAAYjB;AAAlB;AAAX,KAAhC;AAAA,GADF,EAjBqB,CAqBrB;;AAEA,SAAO,CAAA6B,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAE7B,EAAN,IACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAEU,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAEN,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGG,CAAAK,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEsB,MAAV,KAAoBF,IAApB,GACC;AACE,IAAA,KAAK,EAAE1C,GAAG,CAAC6C,MADb;AAEE,IAAA,OAAO,EAAE,mBAAM;AACb1B,MAAAA,KAAK,CAAC;AACJC,QAAAA,gBAAgB,EAAhBA,gBADI;AAEJC,QAAAA,WAAW,EAAXA,WAFI;AAGJC,QAAAA,QAAQ,EAARA,QAHI;AAIJ1B,QAAAA,IAAI,EAAJA,IAJI;AAKJ2B,QAAAA,QAAQ,EAARA,QALI;AAMJS,QAAAA,GAAG,EAAHA;AANI,OAAD,CAAL;AAQD,KAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADD,GAgBG,IAnBN,CADK,GAuBL;AAAK,IAAA,KAAK,EAAE;AAAEc,MAAAA,aAAa,EAAE7C,KAAK,CAAC8C,OAAN,CAAc,CAAd;AAAjB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAET,MAAAA,QAAQ,EAAE,SAAZ;AAAuBU,MAAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ;AAA9B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGADF,CAvBF;AA6BD;;GApDeV,I;UAE6BrD,Q,EAEhBC,W,EACLA,W;;;MALRoD,I","sourcesContent":["import { gql, useQuery, useMutation } from \"@apollo/client\";\n\nimport { emptyCart } from \"../../apollo/action\";\nimport {\n  customerVar,\n  newOrderVar,\n  newOrderCountVar,\n} from \"../../apollo/client\";\nimport { Item as CartItem } from \"./item\";\nimport { List } from \"./list\";\nimport { useRouter } from \"next/router\";\nimport { page } from \"../../config/index\";\n\nimport { formatMoney, getErrorMessage } from \"../../lib/chip\";\nimport { Fragment } from \"react\";\nimport { css } from \"../src/css\";\nimport theme from \"../src/theme\";\nimport { Loading } from \"../src/Loading\";\nimport { Link } from \"../src/Link\";\nimport { List as Customer } from \"../Customer/CurrentCustomer\";\nexport const CART = gql`\n  query {\n    cartItems @client\n    user @client\n    customer @client\n  }\n`;\n// create orderItem\nexport const CREATE_ORDER_ITEMS = gql`\n  mutation($data: [OrderItemsCreateInput]) {\n    createOrderItems(data: $data) {\n      id\n    }\n  }\n`;\n\n// create Order\nexport const CREATE_ORDER = gql`\n  mutation(\n    $items: [OrderItemWhereUniqueInput]\n    $customer: CustomerWhereUniqueInput\n    $ofSeller: UserWhereUniqueInput\n    $total: Int\n  ) {\n    createOrder(\n      data: {\n        customer: { connect: $customer }\n        items: { connect: $items }\n        ofSeller: { connect: $ofSeller }\n        total: $total\n      }\n    ) {\n      id\n      seller {\n        id\n        name\n      }\n      items {\n        id\n        product {\n          image {\n            publicUrl\n          }\n          images {\n            file {\n              publicUrl\n            }\n          }\n          name\n        }\n        price\n        quantity\n        attributes {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\nexport const OrderItemsCreateInput = (item) => ({\n  data: {\n    product: { connect: { id: item.product.id } },\n    price: item.price,\n    quantity: item.quantity,\n  },\n});\nexport const OrderItemsCreateInputs = (cartItems = []) =>\n  cartItems?.map((item) => OrderItemsCreateInput(item));\n\nexport const order = async ({\n  createOrderItems,\n  createOrder,\n  dataOICI,\n  page,\n  customer,\n}) => {\n  // create cart items\n  const { data: dataCOI, error } = await createOrderItems({\n    variables: {\n      data: dataOICI,\n    },\n  });\n  // creat cart and connect cart items\n  if (dataCOI.createOrderItems) {\n    let variables = {\n      items: dataCOI.createOrderItems.map((e) => ({\n        id: e.id,\n      })),\n      customer: { id: customer.id },\n      ofSeller: { id: page.seller.id },\n      total: sum,\n    };\n    try {\n      const { data: dataCreateOrder, errors: ER } = await createOrder({\n        variables,\n      });\n      newOrderVar(true);\n      newOrderCountVar(true);\n      emptyCart();\n      router.push({ pathname: \"/order\" });\n    } catch {}\n  }\n};\nexport function Cart() {\n  // query\n  const { data: cartData, loading, error } = useQuery(CART);\n  // mutation\n  const [createOrderItems] = useMutation(CREATE_ORDER_ITEMS);\n  const [createOrder] = useMutation(CREATE_ORDER);\n\n  if (loading || error || !cartData) return <Loading />;\n\n  const { customer, cartItems, user } = cartData;\n  let sum = 0;\n  cartItems?.map((cartItem) => {\n    sum += cartItem.price;\n  });\n\n  // create OrderItemsCreateInputs (GraphQL type)\n  let dataOICI = OrderItemsCreateInputs(cartItems);\n  dataOICI?.map(\n    (data) => (data.data.ofSeller = { connect: { id: page.seller.id } })\n  );\n\n  // function\n\n  return user?.id ? (\n    <div>\n      <Customer customer={customer} />\n      <List cartItems={cartItems} />\n      {dataOICI?.length && user ? (\n        <button\n          style={css.button}\n          onClick={() => {\n            order({\n              createOrderItems,\n              createOrder,\n              dataOICI,\n              page,\n              customer,\n              sum,\n            });\n          }}\n        >\n          Xác nhận đơn hàng\n        </button>\n      ) : null}\n    </div>\n  ) : (\n    <div style={{ paddingBottom: theme.spacing(3) }}>\n      <Link href={{ pathname: \"/signin\", query: { redirect: \"/cart\" } }}>\n        Bấm vào đây để đăng nhập và tiếp tục\n      </Link>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}