{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/ecom-ui/components/Sidebar/filter.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Fragment } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Item as Category } from \"../Category/item\";\nconst GET_CATE = gql`\n  query($category: String) {\n    allCategories(where: { url: $category }) {\n      id\n      name\n    }\n  }\n`;\nexport const Filter = ({\n  category,\n  brand,\n  search,\n  price_from,\n  price_to,\n  attributes\n}) => {\n  const {\n    data\n  } = useQuery(GET_CATE, {\n    variables: {\n      category\n    }\n  });\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(Category, {\n    categories: data === null || data === void 0 ? void 0 : data.allCategories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/components/Sidebar/filter.js"],"names":["Fragment","gql","useQuery","Item","Category","GET_CATE","Filter","category","brand","search","price_from","price_to","attributes","data","variables","allCategories"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,IAAI,IAAIC,QAAjB,QAAiC,kBAAjC;AACA,MAAMC,QAAQ,GAAGJ,GAAI;;;;;;;CAArB;AAQA,OAAO,MAAMK,MAAM,GAAG,CAAC;AACrBC,EAAAA,QADqB;AAErBC,EAAAA,KAFqB;AAGrBC,EAAAA,MAHqB;AAIrBC,EAAAA,UAJqB;AAKrBC,EAAAA,QALqB;AAMrBC,EAAAA;AANqB,CAAD,KAOhB;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAWX,QAAQ,CAACG,QAAD,EAAW;AAAES,IAAAA,SAAS,EAAE;AAAEP,MAAAA;AAAF;AAAb,GAAX,CAAzB;AAEA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,UAAU,EAAEM,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEE,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAfM","sourcesContent":["import { Fragment } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Item as Category } from \"../Category/item\";\nconst GET_CATE = gql`\n  query($category: String) {\n    allCategories(where: { url: $category }) {\n      id\n      name\n    }\n  }\n`;\nexport const Filter = ({\n  category,\n  brand,\n  search,\n  price_from,\n  price_to,\n  attributes,\n}) => {\n  const { data } = useQuery(GET_CATE, { variables: { category } });\n\n  return (\n    <Fragment>\n      <Category categories={data?.allCategories} />\n    </Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}