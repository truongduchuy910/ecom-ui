{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($seller: UserWhereInput) {\\n    allBanners(where: { seller: $seller }) {\\n      id\\n      file {\\n        publicUrl\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Item } from \"./item\";\nimport { Spinner, Container } from \"reactstrap\";\nimport { Loading } from \"../src/Loading\";\nimport { useContext } from \"react\";\nimport { SellerContext } from \"../src/SellerProvider\";\nvar GET_ATTRIBUTES = gql(_templateObject());\nexport function ListBanner(_ref) {\n  var style = _ref.style;\n  var theme = useContext(SellerContext);\n\n  var _useQuery = useQuery(GET_ATTRIBUTES, {\n    variables: {\n      seller: theme.seller\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return __jsx(Loading, null);\n  return !loading && data ? data.allBanners.slice(0, 1).map(function (banner) {\n    return __jsx(Item, {\n      key: banner.id,\n      banner: banner,\n      style: style\n    });\n  }) : null;\n}","map":null,"metadata":{},"sourceType":"module"}