{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n// show in product detail\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Item } from \"./itemOne\";\nimport { getErrorMessage } from \"../../lib/chip\";\nimport { Loading } from \"../src/Loading\";\nimport { useContext } from \"react\";\nimport { SellerContext } from \"../src/SellerProvider\";\nconst GET_ATTRIBUTES = gql`\n  query($seller: UserWhereInput) {\n    allAttributes(where: { seller: $seller }) {\n      id\n      name\n      url\n    }\n  }\n`;\nexport function List({\n  attributes\n}) {\n  const theme = useContext(SellerContext);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_ATTRIBUTES, {\n    variables: {\n      seller: theme.seller\n    }\n  });\n  if (loading) return __jsx(Loading, null);\n  if (error) return __jsx(\"i\", {\n    color: \"danger\"\n  }, getErrorMessage(error));\n  let source = attributes ? attributes : data.allAttributes;\n  return !loading && data ? __jsx(\"div\", {\n    style: {\n      display: \"inline-block\"\n    }\n  }, source.map(attribute => __jsx(Item, {\n    key: attribute.id,\n    attribute: attribute\n  }))) : null;\n}","map":null,"metadata":{},"sourceType":"module"}