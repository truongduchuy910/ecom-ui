{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// search in nav\nimport { useContext, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Form } from \"reactstrap\";\nimport { SellerContext } from \"../src/SellerProvider\";\nexport function Search({\n  style\n}) {\n  const theme = useContext(SellerContext);\n  const {\n    0: searchInput,\n    1: setSearchInput\n  } = useState();\n  const router = useRouter();\n  return __jsx(Form, {\n    inline: true,\n    onSubmit: e => {\n      /**\n       * Prevent submit from reloading the page\n       */\n      e.preventDefault();\n      e.stopPropagation();\n      router.push({\n        pathname: \"/products\",\n        query: {\n          search: searchInput\n        }\n      });\n    },\n    action: \"\",\n    style: _objectSpread({}, style)\n  }, __jsx(\"input\", {\n    placeholder: \"T\\xECm s\\u1EA3n ph\\u1EA9m...\",\n    name: \"search\",\n    onChange: event => {\n      setSearchInput(event.target.value);\n    },\n    style: _objectSpread(_objectSpread({}, theme.css.input), {}, {\n      width: \"100%\"\n    })\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}