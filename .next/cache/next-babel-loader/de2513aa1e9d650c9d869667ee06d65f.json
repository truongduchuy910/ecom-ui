{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/media/huy/New Volume/linux/apps/ecom-ui/components/Hashtag/List/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"query($hashtag: HashtagWhereInput) {\\n        allHashtags(where: $hashtag) {\\n            id\\n            name\\n            url\\n        }\\n    }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport { useContext } from \"react\";\nimport { Loading } from \"../../Loading\";\nimport { One } from \"./One\";\nimport { Header } from \"./Header\";\nimport { Query, SellerContext } from \"../../../apollo\";\n\nvar Hashtags = function Hashtags(_ref) {\n  _s();\n\n  var _ref$option = _ref.option,\n      option = _ref$option === void 0 ? 1 : _ref$option,\n      onChoose = _ref.onChoose;\n  // data\n  var theme = useContext(SellerContext);\n  var variables = {\n    hashtag: {\n      seller: theme.seller\n    }\n  };\n\n  var _useQuery = useQuery(gql(_templateObject()), {\n    variables: variables\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading; // modify\n\n\n  var hashtags = data === null || data === void 0 ? void 0 : data.allHashtags.map(function (hashtag) {\n    var _hashtag$file;\n\n    return _objectSpread(_objectSpread({}, hashtag), {}, {\n      img: theme.server + (hashtag === null || hashtag === void 0 ? void 0 : (_hashtag$file = hashtag.file) === null || _hashtag$file === void 0 ? void 0 : _hashtag$file.publicUrl)\n    });\n  }); // render\n\n  if (!(error || loading)) {\n    switch (option) {\n      case 1:\n        return __jsx(One, {\n          hashtags: hashtags,\n          onChoose: onChoose,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 24\n          }\n        });\n\n      case 'Header':\n        return __jsx(Header, {\n          hashtags: hashtags,\n          onChoose: onChoose,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 24\n          }\n        });\n\n      default:\n        return __jsx(\"pre\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 24\n          }\n        }, \"Invalid components.\");\n    }\n  } else return __jsx(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }\n  });\n};\n\n_s(Hashtags, \"fFxYXu16zEspmKOmKwcCffQkfjM=\", false, function () {\n  return [useQuery];\n});\n\n_c = Hashtags;\nexport default Hashtags;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hashtags\");","map":{"version":3,"sources":["/media/huy/New Volume/linux/apps/ecom-ui/components/Hashtag/List/index.js"],"names":["gql","useQuery","useContext","Loading","One","Header","Query","SellerContext","Hashtags","option","onChoose","theme","variables","hashtag","seller","data","error","loading","hashtags","allHashtags","map","img","server","file","publicUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,iBAArC;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA8B;AAAA;;AAAA,yBAA3BC,MAA2B;AAAA,MAA3BA,MAA2B,4BAAlB,CAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC3C;AACA,MAAIC,KAAK,GAAGT,UAAU,CAACK,aAAD,CAAtB;AACA,MAAIK,SAAS,GAAG;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,MAAM,EAAEH,KAAK,CAACG;AAAhB;AAAX,GAAhB;;AAH2C,kBAIVb,QAAQ,CAACD,GAAD,qBAMrC;AAAEY,IAAAA,SAAS,EAATA;AAAF,GANqC,CAJE;AAAA,MAInCG,IAJmC,aAInCA,IAJmC;AAAA,MAI7BC,KAJ6B,aAI7BA,KAJ6B;AAAA,MAItBC,OAJsB,aAItBA,OAJsB,EAW3C;;;AACA,MAAMC,QAAQ,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEI,WAAN,CAAkBC,GAAlB,CAAsB,UAAAP,OAAO,EAAI;AAAA;;AAC9C,2CAAYA,OAAZ;AAAqBQ,MAAAA,GAAG,EAAEV,KAAK,CAACW,MAAN,IAAeT,OAAf,aAAeA,OAAf,wCAAeA,OAAO,CAAEU,IAAxB,kDAAe,cAAeC,SAA9B;AAA1B;AACH,GAFgB,CAAjB,CAZ2C,CAe3C;;AACA,MAAI,EAAER,KAAK,IAAIC,OAAX,CAAJ,EAAyB;AACrB,YAAQR,MAAR;AACI,WAAK,CAAL;AACI,eAAO,MAAC,GAAD;AAAK,UAAA,QAAQ,EAAES,QAAf;AAAyB,UAAA,QAAQ,EAAER,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ,WAAK,QAAL;AACI,eAAO,MAAC,MAAD;AAAQ,UAAA,QAAQ,EAAEQ,QAAlB;AAA4B,UAAA,QAAQ,EAAER,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ;AACI,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AANR;AAQH,GATD,MASO,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACV,CA1BD;;GAAMF,Q;UAI+BP,Q;;;KAJ/BO,Q;AA2BN,eAAeA,QAAf","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\r\nimport { useContext } from \"react\";\r\nimport { Loading } from \"../../Loading\";\r\nimport { One } from \"./One\";\r\nimport { Header } from \"./Header\";\r\nimport { Query, SellerContext } from \"../../../apollo\";\r\n\r\n\r\nconst Hashtags = ({ option = 1, onChoose }) => {\r\n    // data\r\n    let theme = useContext(SellerContext);\r\n    let variables = { hashtag: { seller: theme.seller } };\r\n    const { data, error, loading } = useQuery(gql`query($hashtag: HashtagWhereInput) {\r\n        allHashtags(where: $hashtag) {\r\n            id\r\n            name\r\n            url\r\n        }\r\n    }`, { variables });\r\n    // modify\r\n    const hashtags = data?.allHashtags.map(hashtag => {\r\n        return { ...hashtag, img: theme.server + hashtag?.file?.publicUrl };\r\n    })\r\n    // render\r\n    if (!(error || loading)) {\r\n        switch (option) {\r\n            case 1:\r\n                return <One hashtags={hashtags} onChoose={onChoose} />\r\n            case 'Header':\r\n                return <Header hashtags={hashtags} onChoose={onChoose} />\r\n            default:\r\n                return <pre>Invalid components.</pre>\r\n        }\r\n    } else return <Loading />\r\n}\r\nexport default Hashtags"]},"metadata":{},"sourceType":"module"}