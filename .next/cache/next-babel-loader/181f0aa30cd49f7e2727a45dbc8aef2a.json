{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useMemo } from 'react';\nimport { ApolloClient } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { HttpLink } from '@apollo/client/link/http';\nimport { InMemoryCache, makeVar, gql } from '@apollo/client';\nimport { init } from './action';\nexport var orderCountVar = makeVar(0);\nexport var newOrderVar = makeVar(false);\nexport var newOrderCountVar = makeVar();\nexport var customerVar = makeVar({\n  id: null\n});\nexport var refetchCustomer = makeVar( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n})));\nexport var cache = new InMemoryCache();\nvar uri = (true ? 'https://ecommerce.loaloa.tech' : 'http://demo.loaloa.tech') + '/admin/api';\nconsole.log(uri);\nvar httpLink = new HttpLink({\n  uri: uri,\n  credentials: 'same-origin'\n});\nvar authLink = setContext(function (_, _ref2) {\n  var headers = _ref2.headers;\n\n  if (true) {\n    var token = localStorage.getItem('token');\n    return {\n      headers: _objectSpread(_objectSpread({}, headers), {}, {\n        authorization: token ? \"Bearer \".concat(token) : ''\n      })\n    };\n  }\n});\n\nfunction createApolloClient() {\n  return new ApolloClient({\n    ssrMode: false,\n    link: authLink.concat(httpLink),\n    cache: cache\n  });\n}\n\nvar apolloClient;\nexport function initializeApollo() {\n  var _apolloClient2;\n\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var _apolloClient = (_apolloClient2 = apolloClient) !== null && _apolloClient2 !== void 0 ? _apolloClient2 : createApolloClient();\n\n  if (initialState) {\n    _apolloClient.cache.restore(initialState);\n  }\n\n  if (false) return _apolloClient;\n  if (!apolloClient) apolloClient = _apolloClient;\n  return _apolloClient;\n}\nexport function useApollo(initialState) {\n  _s();\n\n  var store = useMemo(function () {\n    init();\n    return initializeApollo(initialState);\n  }, [initialState]);\n  return store;\n}\n\n_s(useApollo, \"K8ucUnUnAgJZGJWAL9Ze8IHCmoQ=\");","map":{"version":3,"sources":["/media/huy/New Volume/linux/apps/ecom-ui/apollo/client.js"],"names":["useMemo","ApolloClient","setContext","HttpLink","InMemoryCache","makeVar","gql","init","orderCountVar","newOrderVar","newOrderCountVar","customerVar","id","refetchCustomer","cache","uri","console","log","httpLink","credentials","authLink","_","headers","token","localStorage","getItem","authorization","createApolloClient","ssrMode","link","concat","apolloClient","initializeApollo","initialState","_apolloClient","restore","useApollo","store"],"mappings":";;;;;;;;;;AAAA,SAAQA,OAAR,QAAsB,OAAtB;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,SAAQC,UAAR,QAAyB,6BAAzB;AACA,SAAQC,QAAR,QAAuB,0BAAvB;AAEA,SAAQC,aAAR,EAAuBC,OAAvB,EAAgCC,GAAhC,QAA0C,gBAA1C;AACA,SAAQC,IAAR,QAAmB,UAAnB;AACA,OAAO,IAAMC,aAAa,GAAGH,OAAO,CAAC,CAAD,CAA7B;AACP,OAAO,IAAMI,WAAW,GAAGJ,OAAO,CAAC,KAAD,CAA3B;AACP,OAAO,IAAMK,gBAAgB,GAAGL,OAAO,EAAhC;AACP,OAAO,IAAMM,WAAW,GAAGN,OAAO,CAAC;AAACO,EAAAA,EAAE,EAAE;AAAL,CAAD,CAA3B;AACP,OAAO,IAAMC,eAAe,GAAGR,OAAO,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAD,GAA/B;AAEP,OAAO,IAAIS,KAAK,GAAG,IAAIV,aAAJ,EAAZ;AACP,IAAMW,GAAG,GACP,CAAC,OACG,+BADH,GAEG,yBAFJ,IAEiC,YAHnC;AAIAC,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,IAAMG,QAAQ,GAAG,IAAIf,QAAJ,CAAa;AAC5BY,EAAAA,GAAG,EAAHA,GAD4B;AAE5BI,EAAAA,WAAW,EAAE;AAFe,CAAb,CAAjB;AAIA,IAAMC,QAAQ,GAAGlB,UAAU,CAAC,UAACmB,CAAD,SAAkB;AAAA,MAAbC,OAAa,SAAbA,OAAa;;AAC5C,YAAmC;AACjC,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,WAAO;AACLH,MAAAA,OAAO,kCACFA,OADE;AAELI,QAAAA,aAAa,EAAEH,KAAK,oBAAaA,KAAb,IAAuB;AAFtC;AADF,KAAP;AAMD;AACF,CAV0B,CAA3B;;AAWA,SAASI,kBAAT,GAA8B;AAC5B,SAAO,IAAI1B,YAAJ,CAAiB;AACtB2B,IAAAA,OAAO,OADe;AAEtBC,IAAAA,IAAI,EAAET,QAAQ,CAACU,MAAT,CAAgBZ,QAAhB,CAFgB;AAGtBJ,IAAAA,KAAK,EAALA;AAHsB,GAAjB,CAAP;AAKD;;AAED,IAAIiB,YAAJ;AACA,OAAO,SAASC,gBAAT,GAA+C;AAAA;;AAAA,MAArBC,YAAqB,uEAAN,IAAM;;AACpD,MAAMC,aAAa,qBAAGH,YAAH,2DAAmBJ,kBAAkB,EAAxD;;AACA,MAAIM,YAAJ,EAAkB;AAChBC,IAAAA,aAAa,CAACpB,KAAd,CAAoBqB,OAApB,CAA4BF,YAA5B;AACD;;AACD,aAAmC,OAAOC,aAAP;AACnC,MAAI,CAACH,YAAL,EAAmBA,YAAY,GAAGG,aAAf;AACnB,SAAOA,aAAP;AACD;AACD,OAAO,SAASE,SAAT,CAAmBH,YAAnB,EAAiC;AAAA;;AACtC,MAAMI,KAAK,GAAGrC,OAAO,CAAC,YAAM;AAC1BO,IAAAA,IAAI;AAEJ,WAAOyB,gBAAgB,CAACC,YAAD,CAAvB;AACD,GAJoB,EAIlB,CAACA,YAAD,CAJkB,CAArB;AAKA,SAAOI,KAAP;AACD;;GAPeD,S","sourcesContent":["import {useMemo} from 'react';\nimport {ApolloClient} from '@apollo/client';\nimport {setContext} from '@apollo/client/link/context';\nimport {HttpLink} from '@apollo/client/link/http';\n\nimport {InMemoryCache, makeVar, gql} from '@apollo/client';\nimport {init} from './action';\nexport const orderCountVar = makeVar(0);\nexport const newOrderVar = makeVar(false);\nexport const newOrderCountVar = makeVar();\nexport const customerVar = makeVar({id: null});\nexport const refetchCustomer = makeVar(async () => {});\n\nexport let cache = new InMemoryCache();\nconst uri =\n  (process.env.NODE_ENV !== 'production'\n    ? 'https://ecommerce.loaloa.tech'\n    : 'http://demo.loaloa.tech') + '/admin/api';\nconsole.log(uri);\nconst httpLink = new HttpLink({\n  uri,\n  credentials: 'same-origin',\n});\nconst authLink = setContext((_, {headers}) => {\n  if (typeof window !== 'undefined') {\n    const token = localStorage.getItem('token');\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : '',\n      },\n    };\n  }\n});\nfunction createApolloClient() {\n  return new ApolloClient({\n    ssrMode: typeof window === 'undefined',\n    link: authLink.concat(httpLink),\n    cache,\n  });\n}\n\nlet apolloClient;\nexport function initializeApollo(initialState = null) {\n  const _apolloClient = apolloClient ?? createApolloClient();\n  if (initialState) {\n    _apolloClient.cache.restore(initialState);\n  }\n  if (typeof window === 'undefined') return _apolloClient;\n  if (!apolloClient) apolloClient = _apolloClient;\n  return _apolloClient;\n}\nexport function useApollo(initialState) {\n  const store = useMemo(() => {\n    init();\n\n    return initializeApollo(initialState);\n  }, [initialState]);\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}