{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, Fragment } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql } from \"@apollo/client\";\nimport { useMutation } from \"@apollo/client\";\nimport { onSignIn, init as reloadApollo } from \"../../apollo/action\";\nimport { getErrorMessage } from \"../../lib/chip\";\nimport { useApollo } from \"../../apollo/client\";\nimport { SignInMutation } from \"./signin\";\nimport { compose } from \"redux\";\nconst SignUpMutation = gql`\n  mutation($email: String!, $password: String!) {\n    createUser(data: { email: $email, password: $password }) {\n      id\n      email\n    }\n  }\n`;\nexport function SignUp() {\n  const [signUp] = useMutation(SignUpMutation);\n  const [signIn] = useMutation(SignInMutation);\n  const {\n    0: errorMsg,\n    1: setErrorMsg\n  } = useState();\n  const router = useRouter();\n  const client = useApollo();\n  const {\n    0: email,\n    1: setEmail\n  } = useState();\n  const {\n    0: password,\n    1: setPassword\n  } = useState();\n\n  async function letSignIn({\n    email,\n    password\n  }) {\n    try {\n      const {\n        data: dataSignIn\n      } = await signIn({\n        variables: {\n          email: email,\n          password: password\n        }\n      }); // if success\n\n      if (dataSignIn.authenticateUserWithPassword) {\n        const {\n          authenticateUserWithPassword: {\n            token,\n            item\n          }\n        } = dataSignIn;\n        localStorage.setItem(\"token\", token);\n        onSignIn({\n          user: item\n        });\n        await router.push({\n          pathname: \"/\"\n        });\n        await client.resetStore();\n        reloadApollo();\n      }\n    } catch (error) {\n      setErrorMsg(getErrorMessage(error));\n    }\n  } //if (email && password) letSignIn();\n\n\n  async function handleSubmit(event) {\n    var _event$currentTarget$, _event$currentTarget$2, _event$currentTarget$3;\n\n    event.preventDefault();\n    const email = (_event$currentTarget$ = event.currentTarget.elements.email) === null || _event$currentTarget$ === void 0 ? void 0 : _event$currentTarget$.value;\n    const password = (_event$currentTarget$2 = event.currentTarget.elements.password) === null || _event$currentTarget$2 === void 0 ? void 0 : _event$currentTarget$2.value;\n    const confirm = (_event$currentTarget$3 = event.currentTarget.elements.confirm) === null || _event$currentTarget$3 === void 0 ? void 0 : _event$currentTarget$3.value;\n    console.log(email, password, confirm); // pre check\n\n    if (!email) {\n      setErrorMsg(\"Vui lòng nhập tên tài khoản\");\n      return;\n    }\n\n    if (password !== confirm) {\n      setErrorMsg(\"Nhập khẩu nhập lại không khớp\");\n      return;\n    } // Sign up\n\n\n    try {\n      await client.clearStore();\n      const {\n        data\n      } = await signUp({\n        variables: {\n          email,\n          password\n        }\n      }); // if Success\n\n      if (data.createUser) {\n        // try login\n        letSignIn({\n          email,\n          password\n        });\n      }\n    } catch (error) {\n      setErrorMsg(getErrorMessage(error));\n    }\n  }\n\n  return __jsx(Fragment, null, __jsx(\"h2\", null, \"\\u0110\\u0103ng K\\xFD T\\xE0i Kho\\u1EA3n\"), __jsx(\"form\", {\n    noValidate: true,\n    onSubmit: handleSubmit\n  }, __jsx(\"h5\", null, \"T\\xE0i kho\\u1EA3n\"), __jsx(\"input\", {\n    required: true,\n    label: \"T\\xE0i kho\\u1EA3n\",\n    name: \"email\",\n    placeholder: \"Nh\\u1EADp T\\xE0i kho\\u1EA3n\",\n    style: {\n      border: \"1px solid black\",\n      padding: 3,\n      paddingLeft: 13\n    }\n  }), __jsx(\"h5\", null, \"M\\u1EADt kh\\u1EA9u\"), __jsx(\"input\", {\n    required: true,\n    name: \"password\",\n    label: \"M\\u1EADt kh\\u1EA9u\",\n    placeholder: \"Nh\\u1EADp M\\u1EADt kh\\u1EA9u\",\n    type: \"password\",\n    style: {\n      border: \"1px solid black\",\n      padding: 3,\n      paddingLeft: 13\n    }\n  }), __jsx(\"h5\", null, \"Nh\\u1EADp L\\u1EA1i M\\u1EADt Kh\\u1EA9u\"), __jsx(\"input\", {\n    required: true,\n    name: \"confirm\",\n    label: \"M\\u1EADt kh\\u1EA9u\",\n    placeholder: \"Nh\\u1EADp L\\u1EA1i M\\u1EADt Kh\\u1EA9u\",\n    type: \"password\",\n    style: {\n      border: \"1px solid black\",\n      padding: 3,\n      paddingLeft: 13\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    style: {\n      marginTop: 21\n    }\n  }, \"\\u0110\\u0103ng K\\xFD\"), __jsx(\"p\", null, errorMsg)));\n}","map":null,"metadata":{},"sourceType":"module"}