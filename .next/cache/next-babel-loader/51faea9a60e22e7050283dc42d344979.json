{"ast":null,"code":"var _jsxFileName = \"/media/huy/New Volume/linux/apps/ecom-ui/components/AttributeGroups/listOne.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// show in product detail\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Item } from \"./itemOne\";\nimport { Fragment, useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Link } from \"../src/Link\";\nimport { queryVar } from \"../../apollo/action\";\nimport { Spinner, Row, Col } from \"reactstrap\";\nimport { SellerContext } from \"../src/SellerProvider\";\nconst GET_ATTRIBUTES = gql`\n  query($seller: UserWhereInput) {\n    allAttributes(where: { seller: $seller }) {\n      id\n      name\n      url\n    }\n  }\n`;\nexport function List({\n  attributeGroups\n}) {\n  const theme = useContext(SellerContext);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, attributeGroups === null || attributeGroups === void 0 ? void 0 : attributeGroups.map(attributeGroup => __jsx(Row, {\n    key: attributeGroup.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, __jsx(\"h5\", {\n    style: _objectSpread({}, theme.css.h5),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, attributeGroup.name, \":\")), __jsx(Col, {\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, __jsx(Item, {\n    attributeGroup: attributeGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/media/huy/New Volume/linux/apps/ecom-ui/components/AttributeGroups/listOne.js"],"names":["gql","useQuery","Item","Fragment","useContext","useRouter","Link","queryVar","Spinner","Row","Col","SellerContext","GET_ATTRIBUTES","List","attributeGroups","theme","map","attributeGroup","id","css","h5","name"],"mappings":";;;;;;;;;;AAAA;AACA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAGA,SAASC,OAAT,EAAkBC,GAAlB,EAAuBC,GAAvB,QAAkC,YAAlC;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,MAAMC,cAAc,GAAGZ,GAAI;;;;;;;;CAA3B;AASA,OAAO,SAASa,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAmC;AACxC,QAAMC,KAAK,GAAGX,UAAU,CAACO,aAAD,CAAxB;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,eADH,aACGA,eADH,uBACGA,eAAe,CAAEE,GAAjB,CAAsBC,cAAD,IACpB,MAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,cAAc,CAACC,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,oBAAOH,KAAK,CAACI,GAAN,CAAUC,EAAjB,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCH,cAAc,CAACI,IAAhD,MADF,CADF,EAIE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,cAAc,EAAEJ,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADD,CADH,CADF;AAcD","sourcesContent":["// show in product detail\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Item } from \"./itemOne\";\nimport { Fragment, useContext } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Link } from \"../src/Link\";\nimport { queryVar } from \"../../apollo/action\";\n\n\nimport { Spinner, Row, Col } from \"reactstrap\";\nimport { SellerContext } from \"../src/SellerProvider\";\n\nconst GET_ATTRIBUTES = gql`\n  query($seller: UserWhereInput) {\n    allAttributes(where: { seller: $seller }) {\n      id\n      name\n      url\n    }\n  }\n`;\nexport function List({ attributeGroups }) {\n  const theme = useContext(SellerContext);\n  return (\n    <div>\n      {attributeGroups?.map((attributeGroup) => (\n        <Row key={attributeGroup.id}>\n          <Col xs={4}>\n            <h5 style={{ ...theme.css.h5 }}>{attributeGroup.name}:</h5>\n          </Col>\n          <Col xs={8}>\n            <Item attributeGroup={attributeGroup} />\n          </Col>\n        </Row>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}