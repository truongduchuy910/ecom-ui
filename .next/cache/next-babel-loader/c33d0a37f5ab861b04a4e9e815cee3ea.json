{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/ecom-ui/components/Banner/list.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Item } from \"./item\";\nimport { Fragment } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Link } from \"../src/Link\";\nimport { queryVar } from \"../../apollo/action\";\nimport { page } from \"../../config/index\";\nimport { Spinner, Container } from \"reactstrap\";\nimport { Loading } from \"../src/Loading\";\nimport { theme } from \"../../config/index\";\nconst GET_ATTRIBUTES = gql`\n  query($seller: UserWhereInput) {\n    allBanners(where: { seller: $seller }) {\n      id\n      file {\n        publicUrl\n      }\n    }\n  }\n`;\nexport function List() {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_ATTRIBUTES, {\n    variables: {\n      seller: page.seller\n    }\n  });\n  if (loading) return __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 23\n    }\n  });\n  return !loading && data ? data.allBanners.slice(0, 1).map(banner => __jsx(Item, {\n    key: banner.id,\n    banner: banner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 26\n    }\n  })) : null;\n}","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/components/Banner/list.js"],"names":["gql","useQuery","Item","Fragment","useRouter","Link","queryVar","page","Spinner","Container","Loading","theme","GET_ATTRIBUTES","List","data","loading","error","variables","seller","allBanners","slice","map","banner","id"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,IAAT,QAAqB,oBAArB;AAEA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,YAAnC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AAEA,MAAMC,cAAc,GAAGZ,GAAI;;;;;;;;;CAA3B;AAUA,OAAO,SAASa,IAAT,GAAgB;AACrB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2Bf,QAAQ,CAACW,cAAD,EAAiB;AACxDK,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAM,EAAEX,IAAI,CAACW;AAAf;AAD6C,GAAjB,CAAzC;AAGA,MAAIH,OAAJ,EAAa,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,SAAO,CAACA,OAAD,IAAYD,IAAZ,GACHA,IAAI,CAACK,UAAL,CACGC,KADH,CACS,CADT,EACY,CADZ,EAEGC,GAFH,CAEQC,MAAD,IAAY,MAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,MAAM,CAACC,EAAlB;AAAsB,IAAA,MAAM,EAAED,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFnB,CADG,GAIH,IAJJ;AAKD","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\nimport { Item } from \"./item\";\nimport { Fragment } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { Link } from \"../src/Link\";\nimport { queryVar } from \"../../apollo/action\";\nimport { page } from \"../../config/index\";\n\nimport { Spinner, Container } from \"reactstrap\";\nimport { Loading } from \"../src/Loading\";\nimport { theme } from \"../../config/index\";\n\nconst GET_ATTRIBUTES = gql`\n  query($seller: UserWhereInput) {\n    allBanners(where: { seller: $seller }) {\n      id\n      file {\n        publicUrl\n      }\n    }\n  }\n`;\nexport function List() {\n  const { data, loading, error } = useQuery(GET_ATTRIBUTES, {\n    variables: { seller: page.seller },\n  });\n  if (loading) return <Loading />;\n  return !loading && data\n    ? data.allBanners\n        .slice(0, 1)\n        .map((banner) => <Item key={banner.id} banner={banner} />)\n    : null;\n}\n"]},"metadata":{},"sourceType":"module"}