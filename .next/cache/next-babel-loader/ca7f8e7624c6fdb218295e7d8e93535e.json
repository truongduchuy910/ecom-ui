{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    compare @client\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport { emptyCompare } from \"../../components/apollo/action\";\nimport { Loading } from \"../src/Loading\";\nimport { Item } from \"../Product/compareItem\";\nimport { useContext } from \"react\";\nimport { SellerContext } from \"../src/SellerProvider\";\nexport var GET_COMPARE = gql(_templateObject());\nexport function List() {\n  var _data$compare;\n\n  var theme = useContext(SellerContext);\n\n  var _useQuery = useQuery(GET_COMPARE),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return __jsx(Loading, null);\n  return __jsx(\"div\", {\n    style: {\n      backgroundColor: theme.backgroundColor,\n      padding: theme.spacing(3)\n    }\n  }, data ? (data === null || data === void 0 ? void 0 : (_data$compare = data.compare) === null || _data$compare === void 0 ? void 0 : _data$compare.length) ? data.compare.map(function (product) {\n    return __jsx(Item, {\n      key: product.id,\n      product: product\n    });\n  }) : __jsx(\"p\", null, \"Kh\\xF4ng c\\xF3 s\\u1EA3n ph\\u1EA9m\") : null);\n}","map":null,"metadata":{},"sourceType":"module"}