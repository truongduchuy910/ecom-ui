{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/home/huy/apps/ecom-ui/components/Attribute/list.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($seller: UserWhereInput) {\\n    allAttributes(where: { seller: $seller }) {\\n      id\\n      name\\n      url\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Item } from \"./item\";\nimport { Fragment } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport { queryVar } from \"../../apollo/action\";\nimport { page } from \"../../config.json\";\nimport { Spinner, Alert } from \"reactstrap\";\nimport { getErrorMessage } from \"../../lib/chip\";\nimport { Loading } from \"../src/Loading\";\nvar GET_ATTRIBUTES = gql(_templateObject());\nexport function List(_ref) {\n  _s();\n\n  var _this = this;\n\n  var attributes = _ref.attributes;\n\n  var _useQuery = useQuery(GET_ATTRIBUTES, {\n    variables: {\n      seller: page.seller\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 23\n    }\n  });\n  if (error) return __jsx(\"i\", {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, getErrorMessage(error));\n  var source = attributes ? attributes : data.allAttributes;\n  return !loading && data ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Thu\\u1ED9c T\\xEDnh\"), __jsx(Item, {\n    attribute: {\n      id: \"all-attribute\",\n      name: \"Tất Cả\",\n      url: \"all\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), source.map(function (attribute) {\n    return __jsx(Item, {\n      key: attribute.id,\n      attribute: attribute,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    });\n  })) : null;\n}\n\n_s(List, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/components/Attribute/list.js"],"names":["gql","useQuery","Item","Fragment","useRouter","Link","queryVar","page","Spinner","Alert","getErrorMessage","Loading","GET_ATTRIBUTES","List","attributes","variables","seller","data","loading","error","source","allAttributes","id","name","url","map","attribute"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,YAA/B;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,IAAMC,cAAc,GAAGZ,GAAH,mBAApB;AASA,OAAO,SAASa,IAAT,OAA8B;AAAA;;AAAA;;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAAA,kBACFb,QAAQ,CAACW,cAAD,EAAiB;AACxDG,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAM,EAAET,IAAI,CAACS;AAAf;AAD6C,GAAjB,CADN;AAAA,MAC3BC,IAD2B,aAC3BA,IAD2B;AAAA,MACrBC,OADqB,aACrBA,OADqB;AAAA,MACZC,KADY,aACZA,KADY;;AAKnC,MAAID,OAAJ,EAAa,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAG,IAAA,KAAK,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBT,eAAe,CAACS,KAAD,CAAlC,CAAP;AAEX,MAAIC,MAAM,GAAGN,UAAU,GAAGA,UAAH,GAAgBG,IAAI,CAACI,aAA5C;AACA,SAAO,CAACH,OAAD,IAAYD,IAAZ,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,MAAC,IAAD;AACE,IAAA,SAAS,EAAE;AAAEK,MAAAA,EAAE,EAAE,eAAN;AAAuBC,MAAAA,IAAI,EAAE,QAA7B;AAAuCC,MAAAA,GAAG,EAAE;AAA5C,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAMGJ,MAAM,CAACK,GAAP,CAAW,UAACC,SAAD;AAAA,WACV,MAAC,IAAD;AAAO,MAAA,GAAG,EAAEA,SAAS,CAACJ,EAAtB;AAA0B,MAAA,SAAS,EAAEI,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA,GAAX,CANH,CADK,GAWH,IAXJ;AAYD;;GArBeb,I;UACmBZ,Q;;;KADnBY,I","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\nimport { Item } from \"./item\";\nimport { Fragment } from \"react\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport { queryVar } from \"../../apollo/action\";\nimport { page } from \"../../config.json\";\nimport { Spinner, Alert } from \"reactstrap\";\nimport { getErrorMessage } from \"../../lib/chip\";\nimport { Loading } from \"../src/Loading\";\nconst GET_ATTRIBUTES = gql`\n  query($seller: UserWhereInput) {\n    allAttributes(where: { seller: $seller }) {\n      id\n      name\n      url\n    }\n  }\n`;\nexport function List({ attributes }) {\n  const { data, loading, error } = useQuery(GET_ATTRIBUTES, {\n    variables: { seller: page.seller },\n  });\n\n  if (loading) return <Loading />;\n  if (error) return <i color=\"danger\">{getErrorMessage(error)}</i>;\n\n  let source = attributes ? attributes : data.allAttributes;\n  return !loading && data ? (\n    <div>\n      <h5>Thuộc Tính</h5>\n      <Item\n        attribute={{ id: \"all-attribute\", name: \"Tất Cả\", url: \"all\" }}\n        \n      />\n      {source.map((attribute) => (\n        <Item  key={attribute.id} attribute={attribute} />\n      ))}\n    </div>\n  ) : null;\n}\n"]},"metadata":{},"sourceType":"module"}