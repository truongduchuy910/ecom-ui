{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/ecom-ui/components/Cart/quickCart.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, Fragment } from \"react\";\nimport { Create as CreateCustomer } from \"../Customer/create\";\nimport { CREATE_ORDER_ITEMS, CREATE_ORDER, CART, OrderItemsCreateInputs } from \".\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { Loading } from \"../src/Loading\";\nexport const QuickCart = ({\n  onClick\n}) => {\n  // query\n  const {\n    data: cartData,\n    loading,\n    error\n  } = useQuery(CART); // mutation\n\n  const [createOrderItems] = useMutation(CREATE_ORDER_ITEMS);\n  const [createOrder] = useMutation(CREATE_ORDER);\n  if (loading || error || !cartData) return __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 45\n    }\n  });\n  const {\n    customer,\n    cartItems,\n    user\n  } = cartData;\n  let sum = 0;\n  cartItems === null || cartItems === void 0 ? void 0 : cartItems.map(cartItem => {\n    sum += cartItem.price;\n  }); // create OrderItemsCreateInputs (GraphQL type)\n\n  let dataOICI = OrderItemsCreateInputs(cartItems);\n  dataOICI === null || dataOICI === void 0 ? void 0 : dataOICI.map(data => data.data.ofSeller = {\n    connect: {\n      id: page.seller.id\n    }\n  }); // function\n\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(CreateCustomer, {\n    onCreate: ({\n      customer\n    }) => {\n      order({\n        createOrderItems,\n        createOrder,\n        dataOICI,\n        page,\n        customer\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/components/Cart/quickCart.js"],"names":["useState","Fragment","Create","CreateCustomer","CREATE_ORDER_ITEMS","CREATE_ORDER","CART","OrderItemsCreateInputs","useMutation","useQuery","Loading","QuickCart","onClick","data","cartData","loading","error","createOrderItems","createOrder","customer","cartItems","user","sum","map","cartItem","price","dataOICI","ofSeller","connect","id","page","seller","order"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AAEA,SAASC,MAAM,IAAIC,cAAnB,QAAyC,oBAAzC;AACA,SACEC,kBADF,EAEEC,YAFF,EAGEC,IAHF,EAIEC,sBAJF,QAKO,GALP;AAMA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACxC;AACA,QAAM;AAAEC,IAAAA,IAAI,EAAEC,QAAR;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA;AAA3B,MAAqCP,QAAQ,CAACH,IAAD,CAAnD,CAFwC,CAGxC;;AACA,QAAM,CAACW,gBAAD,IAAqBT,WAAW,CAACJ,kBAAD,CAAtC;AACA,QAAM,CAACc,WAAD,IAAgBV,WAAW,CAACH,YAAD,CAAjC;AAEA,MAAIU,OAAO,IAAIC,KAAX,IAAoB,CAACF,QAAzB,EAAmC,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEnC,QAAM;AAAEK,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,MAAgCP,QAAtC;AACA,MAAIQ,GAAG,GAAG,CAAV;AACAF,EAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEG,GAAX,CAAgBC,QAAD,IAAc;AAC3BF,IAAAA,GAAG,IAAIE,QAAQ,CAACC,KAAhB;AACD,GAFD,EAXwC,CAexC;;AACA,MAAIC,QAAQ,GAAGnB,sBAAsB,CAACa,SAAD,CAArC;AACAM,EAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEH,GAAV,CACGV,IAAD,IAAWA,IAAI,CAACA,IAAL,CAAUc,QAAV,GAAqB;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,CAAYF;AAAlB;AAAX,GADlC,EAjBwC,CAqBxC;;AACA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AACE,IAAA,QAAQ,EAAE,CAAC;AAAEV,MAAAA;AAAF,KAAD,KAAkB;AAC1Ba,MAAAA,KAAK,CAAC;AAAEf,QAAAA,gBAAF;AAAoBC,QAAAA,WAApB;AAAiCQ,QAAAA,QAAjC;AAA2CI,QAAAA,IAA3C;AAAiDX,QAAAA;AAAjD,OAAD,CAAL;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AASD,CA/BM","sourcesContent":["import { useState, Fragment } from \"react\";\n\nimport { Create as CreateCustomer } from \"../Customer/create\";\nimport {\n  CREATE_ORDER_ITEMS,\n  CREATE_ORDER,\n  CART,\n  OrderItemsCreateInputs,\n} from \".\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { Loading } from \"../src/Loading\";\nexport const QuickCart = ({ onClick }) => {\n  // query\n  const { data: cartData, loading, error } = useQuery(CART);\n  // mutation\n  const [createOrderItems] = useMutation(CREATE_ORDER_ITEMS);\n  const [createOrder] = useMutation(CREATE_ORDER);\n\n  if (loading || error || !cartData) return <Loading />;\n\n  const { customer, cartItems, user } = cartData;\n  let sum = 0;\n  cartItems?.map((cartItem) => {\n    sum += cartItem.price;\n  });\n\n  // create OrderItemsCreateInputs (GraphQL type)\n  let dataOICI = OrderItemsCreateInputs(cartItems);\n  dataOICI?.map(\n    (data) => (data.data.ofSeller = { connect: { id: page.seller.id } })\n  );\n\n  // function\n  return (\n    <Fragment>\n      <CreateCustomer\n        onCreate={({ customer }) => {\n          order({ createOrderItems, createOrder, dataOICI, page, customer });\n        }}\n      />\n    </Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}