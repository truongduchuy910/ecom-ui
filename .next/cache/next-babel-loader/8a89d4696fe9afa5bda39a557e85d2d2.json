{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Item as Category } from \"../Category/item\";\nimport { Item as Attribute } from \"../Attribute/item\";\nimport { formatMoney } from \"../../lib/chip\";\nimport { Link } from \"../src/Link\";\nimport { css } from \"../src/css\";\nimport { theme } from \"../../config/index\";\nimport { Item as Brand } from \"../Brand/item\";\nimport { IoIosEasel, IoIosExit, IoIosRemove, IoIosRemoveCircle, IoIosRemoveCircleOutline } from \"react-icons/io\";\nimport { route } from \"next/dist/next-server/server/router\";\nimport { useRouter } from \"next/router\";\nconst GET_CATE = gql`\n  query($category: String, $attributes: [String], $brand: String) {\n    allCategories(where: { url: $category }) {\n      id\n      name\n      url\n    }\n    allAttributes(where: { url_in: $attributes }) {\n      id\n      name\n      url\n    }\n    allBrands(where: { url: $brand }) {\n      id\n      name\n      url\n    }\n  }\n`;\nexport const Filter = ({\n  category = \"-\",\n  brand = \"-\",\n  search,\n  price_from,\n  price_to,\n  attributes\n}) => {\n  var _data$allAttributes;\n\n  const router = useRouter();\n  const variables = {\n    category,\n    attributes,\n    brand\n  };\n  const {\n    data,\n    error\n  } = useQuery(GET_CATE, {\n    variables\n  });\n\n  const removeSearch = () => {\n    let query = router.query;\n    delete query.search;\n    router.push({\n      query\n    });\n  };\n\n  return __jsx(\"section\", {\n    style: {\n      paddingRight: 0\n    }\n  }, search ? __jsx(\"div\", {\n    style: css.filter\n  }, __jsx(\"h6\", {\n    style: _objectSpread(_objectSpread({}, css.h6), {}, {\n      display: \"inline-block\",\n      marginRight: theme.spacing(2)\n    })\n  }, \"T\\xECm ki\\u1EBFm:\"), __jsx(\"a\", {\n    style: {\n      color: theme.color\n    }\n  }, search), __jsx(IoIosRemoveCircleOutline, {\n    onClick: removeSearch,\n    style: {\n      marginLeft: theme.spacing(2),\n      color: theme.primary\n    }\n  })) : null, price_to != 999999999 ? __jsx(\"div\", {\n    style: css.filter\n  }, __jsx(\"h6\", {\n    style: _objectSpread(_objectSpread({}, css.h6), {}, {\n      display: \"inline-block\",\n      marginRight: theme.spacing(2)\n    })\n  }, \"Gi\\xE1:\", \" \"), formatMoney(price_from), \" - \", formatMoney(price_to)) : null, (data === null || data === void 0 ? void 0 : data.allCategories.length) ? __jsx(\"div\", {\n    style: css.filter\n  }, __jsx(\"h6\", {\n    style: _objectSpread(_objectSpread({}, css.h6), {}, {\n      display: \"inline-block\",\n      marginRight: theme.spacing(2)\n    })\n  }, \"Danh m\\u1EE5c:\", \" \"), __jsx(Category, {\n    category: data === null || data === void 0 ? void 0 : data.allCategories[0],\n    style: {\n      display: \"inline-block\",\n      marginBottom: 0,\n      padding: 0\n    }\n  })) : null, (data === null || data === void 0 ? void 0 : (_data$allAttributes = data.allAttributes) === null || _data$allAttributes === void 0 ? void 0 : _data$allAttributes.length) ? __jsx(\"div\", {\n    style: css.filter\n  }, __jsx(\"h6\", {\n    style: _objectSpread(_objectSpread({}, css.h6), {}, {\n      display: \"inline-block\",\n      marginRight: theme.spacing(2)\n    })\n  }, \"Thu\\u1ED9c T\\xEDnh:\"), \" \", data === null || data === void 0 ? void 0 : data.allAttributes.map(attribute => __jsx(Attribute, {\n    key: attribute.id,\n    attribute: attribute,\n    style: {\n      display: \"inline\",\n      marginRight: 8\n    }\n  }))) : null, (data === null || data === void 0 ? void 0 : data.allBrands.length) ? __jsx(\"div\", {\n    style: css.filter\n  }, __jsx(\"h6\", {\n    style: _objectSpread(_objectSpread({}, css.h6), {}, {\n      display: \"inline-block\",\n      marginRight: theme.spacing(2)\n    })\n  }, \"Th\\u01B0\\u01A1ng Hi\\u1EC7u:\"), \" \", __jsx(Brand, {\n    brand: data === null || data === void 0 ? void 0 : data.allBrands[0],\n    style: {\n      display: \"inline-block\"\n    }\n  })) : null);\n};","map":null,"metadata":{},"sourceType":"module"}