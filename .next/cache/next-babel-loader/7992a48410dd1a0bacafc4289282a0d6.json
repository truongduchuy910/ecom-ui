{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport { categoryVar, queryVar } from \"../../apollo/action\";\nimport { useRouter } from \"next/router\";\nimport { route } from \"next/dist/next-server/server/router\";\nimport { theme } from \"../../config/yensaodatquang.json\";\nimport { filterCategoryVar } from \"../../apollo/client\";\nexport function Item({\n  categories = [],\n  pre\n}) {\n  const router = useRouter();\n  let query = router.query;\n  const category = categories[(categories === null || categories === void 0 ? void 0 : categories.length) - 1];\n  const childUrl = (category === null || category === void 0 ? void 0 : category.childs) ? category.childs.map(category => category.url).toString() : [];\n  console.log(pre);\n\n  const handleClick = () => {\n    if (category.url === \"back\") {\n      var _category$parent;\n\n      if (category === null || category === void 0 ? void 0 : category.parent) query.category = category === null || category === void 0 ? void 0 : (_category$parent = category.parent) === null || _category$parent === void 0 ? void 0 : _category$parent.url;else delete query.category;\n      delete query.categories;\n      router.push({\n        query\n      });\n    } else {\n      query.category = category.url;\n      query.categories = childUrl;\n      router.push({\n        query\n      });\n    }\n  };\n\n  return category ? __jsx(\"div\", null, __jsx(\"a\", {\n    style: {\n      color: theme.color,\n      fontWeight: query.category === category.url ? \"bold\" : null,\n      paddingLeft: (categories.length - 1) * 13,\n      marginBottom: 13\n    },\n    onClick: handleClick\n  }, category.label ? category.label : category.name)) : null;\n}","map":null,"metadata":{},"sourceType":"module"}