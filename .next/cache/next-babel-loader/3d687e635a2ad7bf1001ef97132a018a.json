{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useRouter } from \"next/router\";\nimport { removeItemOnce } from \"../../lib/chip\";\nimport { FiThermometer } from \"react-icons/fi\";\nimport { theme } from \"../../config/index\";\nimport { filterAttributeVar } from \"../../apollo/client\";\nexport function Item({\n  attribute,\n  style\n}) {\n  const router = useRouter();\n  let query = router.query;\n  let currentAttributes = query.attributes ? query.attributes.split(\",\") : [];\n  const exist = currentAttributes.includes(attribute.url);\n\n  const handleClick = () => {\n    if (exist) {\n      currentAttributes = removeItemOnce(currentAttributes, attribute.url);\n    } else {\n      currentAttributes = currentAttributes.concat([attribute.url]);\n    }\n\n    query.attributes = currentAttributes.toString();\n    if (attribute.url === \"all\") delete query.attributes;\n    router.push({\n      query\n    });\n  };\n\n  return __jsx(\"a\", {\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      color: theme.color,\n      fontWeight: exist ? \"bold\" : null,\n      display: \"block\"\n    }),\n    onClick: handleClick\n  }, attribute.name);\n}","map":null,"metadata":{},"sourceType":"module"}