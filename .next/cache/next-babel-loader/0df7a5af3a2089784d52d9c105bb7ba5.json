{"ast":null,"code":"var _jsxFileName = \"/media/huy/New Volume/linux/apps/ecom-ui/components/Post/list.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect, Fragment, useContext } from \"react\";\nimport { gql, useQuery, rewriteURIForGET } from \"@apollo/client\";\nimport { Item as Post } from \"./item\";\nimport { Container, Row, Col, Spinner } from \"reactstrap\";\nimport { toSlug } from \"../../lib/chip\";\nimport { Loading } from \"../src/Loading\";\nimport { SellerContext } from \"../src/SellerProvider\";\nconst GET_POSTS = gql`\n  query(\n    $first: Int\n    $skip: Int\n    $hashtag: HashtagWhereInput\n    $seller: UserWhereInput\n    $except: String\n  ) {\n    allPosts(\n      first: $first\n      skip: $skip\n      where: {\n        AND: [\n          { hashtags_every: $hashtag }\n          { seller: $seller }\n          { url_not: $except }\n        ]\n      }\n    ) {\n      id\n      url\n      title\n      \n    }\n  }\n`;\nexport const List = ({\n  title = \"\",\n  first = 0,\n  skip = 0,\n  xs,\n  sm,\n  md,\n  lg,\n  xl,\n  except,\n  hashtag\n}) => {\n  var _data$allPosts;\n\n  const theme = useContext(SellerContext);\n  let variables = {\n    hashtag: hashtag ? {\n      url_contains: hashtag\n    } : null,\n    seller: theme.seller,\n    except\n  };\n  let {\n    data,\n    error,\n    loading\n  } = useQuery(GET_POSTS, {\n    variables\n  });\n  let width = 0;\n  if (error || loading) return __jsx(\"div\", {\n    style: {\n      margin: theme.spacing(3)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }));\n  return (data === null || data === void 0 ? void 0 : (_data$allPosts = data.allPosts) === null || _data$allPosts === void 0 ? void 0 : _data$allPosts.length) ? __jsx(\"section\", {\n    id: \"posts\",\n    style: {\n      paddingLeft: theme.spacing(2)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, title ? __jsx(\"h2\", {\n    style: _objectSpread(_objectSpread({}, theme.css.h2), {}, {\n      textAlign: \"center\",\n      marginBottom: theme.spacing(5)\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, title) : null, __jsx(Row, {\n    noGutters: true,\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, data.allPosts.map(post => {\n    var _data$allPosts2, _data$allPosts3, _data$allPosts4, _data$allPosts5, _data$allPosts6;\n\n    return __jsx(Col, {\n      key: post.id,\n      xs: (data === null || data === void 0 ? void 0 : (_data$allPosts2 = data.allPosts) === null || _data$allPosts2 === void 0 ? void 0 : _data$allPosts2.length) > 2 ? xs ? xs : 6 : 12,\n      sm: (data === null || data === void 0 ? void 0 : (_data$allPosts3 = data.allPosts) === null || _data$allPosts3 === void 0 ? void 0 : _data$allPosts3.length) > 2 ? sm ? sm : 6 : 6,\n      md: (data === null || data === void 0 ? void 0 : (_data$allPosts4 = data.allPosts) === null || _data$allPosts4 === void 0 ? void 0 : _data$allPosts4.length) > 2 ? md ? md : 4 : 4,\n      lg: (data === null || data === void 0 ? void 0 : (_data$allPosts5 = data.allPosts) === null || _data$allPosts5 === void 0 ? void 0 : _data$allPosts5.length) > 2 ? lg ? lg : 3 : 3,\n      xl: (data === null || data === void 0 ? void 0 : (_data$allPosts6 = data.allPosts) === null || _data$allPosts6 === void 0 ? void 0 : _data$allPosts6.length) > 2 ? xl ? xl : 2 : 3,\n      style: {\n        padding: width <= 768 && width != 0 ? 3 : theme.spacing(2),\n        paddingTop: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, __jsx(Post, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }));\n  }))) : __jsx(\"p\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, \"Kh\\xF4ng c\\xF3 k\\u1EBFt qu\\u1EA3!\");\n};","map":{"version":3,"sources":["/media/huy/New Volume/linux/apps/ecom-ui/components/Post/list.js"],"names":["useState","useEffect","Fragment","useContext","gql","useQuery","rewriteURIForGET","Item","Post","Container","Row","Col","Spinner","toSlug","Loading","SellerContext","GET_POSTS","List","title","first","skip","xs","sm","md","lg","xl","except","hashtag","theme","variables","url_contains","seller","data","error","loading","width","margin","spacing","allPosts","length","paddingLeft","css","h2","textAlign","marginBottom","display","justifyContent","map","post","id","padding","paddingTop"],"mappings":"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","sourcesContent":["import { useState, useEffect, Fragment, useContext } from \"react\";\nimport { gql, useQuery, rewriteURIForGET } from \"@apollo/client\";\nimport { Item as Post } from \"./item\";\nimport { Container, Row, Col, Spinner } from \"reactstrap\";\n\nimport { toSlug } from \"../../lib/chip\";\nimport { Loading } from \"../src/Loading\";\n\nimport { SellerContext } from \"../src/SellerProvider\";\nconst GET_POSTS = gql`\n  query(\n    $first: Int\n    $skip: Int\n    $hashtag: HashtagWhereInput\n    $seller: UserWhereInput\n    $except: String\n  ) {\n    allPosts(\n      first: $first\n      skip: $skip\n      where: {\n        AND: [\n          { hashtags_every: $hashtag }\n          { seller: $seller }\n          { url_not: $except }\n        ]\n      }\n    ) {\n      id\n      url\n      title\n      \n    }\n  }\n`;\nexport const List = ({\n  title = \"\",\n  first = 0,\n  skip = 0,\n  xs,\n  sm,\n  md,\n  lg,\n  xl,\n  except,\n  hashtag,\n}) => {\n  const theme = useContext(SellerContext);\n  let variables = {\n    hashtag: hashtag ? { url_contains: hashtag } : null,\n    seller: theme.seller,\n    except,\n  };\n\n  let { data, error, loading } = useQuery(GET_POSTS, {\n    variables,\n  });\n  let width = 0;\n\n  if (error || loading)\n    return (\n      <div style={{ margin: theme.spacing(3) }}>\n        <Loading />\n      </div>\n    );\n  return data?.allPosts?.length ? (\n    <section\n      id=\"posts\"\n      style={{\n        paddingLeft: theme.spacing(2),\n      }}\n    >\n      {title ? (\n        <h2\n          style={{\n            ...theme.css.h2,\n            textAlign: \"center\",\n            marginBottom: theme.spacing(5),\n          }}\n        >\n          {title}\n        </h2>\n      ) : null}\n      <Row noGutters style={{ display: \"flex\", justifyContent: \"center\" }}>\n        {data.allPosts.map((post) => (\n          <Col\n            key={post.id}\n            xs={data?.allPosts?.length > 2 ? (xs ? xs : 6) : 12}\n            sm={data?.allPosts?.length > 2 ? (sm ? sm : 6) : 6}\n            md={data?.allPosts?.length > 2 ? (md ? md : 4) : 4}\n            lg={data?.allPosts?.length > 2 ? (lg ? lg : 3) : 3}\n            xl={data?.allPosts?.length > 2 ? (xl ? xl : 2) : 3}\n            style={{\n              padding: width <= 768 && width != 0 ? 3 : theme.spacing(2),\n              paddingTop: 0,\n            }}\n          >\n            <Post post={post} />\n          </Col>\n        ))}\n      </Row>\n    </section>\n  ) : (\n    <p style={{ textAlign: \"center\" }}>Không có kết quả!</p>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}