{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, Fragment } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql } from \"@apollo/client\";\nimport { useMutation } from \"@apollo/client\";\nimport { onSignIn, init } from \"../../apollo/action\";\nimport { getErrorMessage } from \"../../lib/chip\";\nimport { useApollo } from \"../../apollo/client\";\nimport { css } from \"../src/css\";\nimport theme from \"../src/theme\";\nexport const SignInMutation = gql`\n  mutation($email: String!, $password: String!) {\n    authenticateUserWithPassword(email: $email, password: $password) {\n      token\n      item {\n        id\n        email\n        isAdmin\n        isSeller\n      }\n    }\n  }\n`;\nexport function SignIn() {\n  var _router$query;\n\n  const router = useRouter();\n  const client = useApollo();\n  const [signIn] = useMutation(SignInMutation);\n  const {\n    0: errorMsg,\n    1: setErrorMsg\n  } = useState();\n  const redirect = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.redirect;\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const email = event.currentTarget.elements.email.value;\n    const password = event.currentTarget.elements.password.value;\n\n    try {\n      await client.clearStore();\n      const {\n        data\n      } = await signIn({\n        variables: {\n          email: email,\n          password: password\n        }\n      });\n\n      if (data.authenticateUserWithPassword) {\n        const {\n          authenticateUserWithPassword: {\n            token,\n            item\n          }\n        } = data;\n        localStorage.setItem(\"token\", token);\n        await client.resetStore();\n        await router.push({\n          pathname: redirect ? redirect : \"/\"\n        });\n        init();\n        onSignIn({\n          user: item\n        });\n      }\n    } catch (error) {\n      setErrorMsg(getErrorMessage(error));\n    }\n  }\n\n  return __jsx(Fragment, null, __jsx(\"h2\", {\n    style: css.h2\n  }, \"\\u0110\\u0103ng Nh\\u1EADp\"), __jsx(\"form\", {\n    noValidate: true,\n    onSubmit: handleSubmit\n  }, __jsx(\"h5\", {\n    style: css.h5\n  }, \"T\\xE0i kho\\u1EA3n\"), __jsx(\"input\", {\n    required: true,\n    id: \"email\",\n    label: \"T\\xE0i kho\\u1EA3n\",\n    name: \"email\",\n    placeholder: \"Nh\\u1EADp T\\xE0i kho\\u1EA3n\",\n    style: _objectSpread(_objectSpread({}, css.input), {}, {\n      width: \"100%\",\n      marginBottom: theme.spacing(3),\n      borderRadius: theme.spacing(2)\n    })\n  }), __jsx(\"h5\", {\n    style: css.h5\n  }, \"M\\u1EADt kh\\u1EA9u\"), __jsx(\"input\", {\n    required: true,\n    name: \"password\",\n    label: \"M\\u1EADt kh\\u1EA9u\",\n    placeholder: \"Nh\\u1EADp M\\u1EADt kh\\u1EA9u\",\n    type: \"password\",\n    id: \"password\",\n    style: _objectSpread(_objectSpread({}, css.input), {}, {\n      width: \"100%\",\n      borderRadius: theme.spacing(2)\n    })\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    style: _objectSpread(_objectSpread({}, css.button), {}, {\n      marginTop: 21\n    })\n  }, \"Ti\\u1EBFp T\\u1EE5c\"), __jsx(\"p\", null, \" \", errorMsg)));\n}","map":null,"metadata":{},"sourceType":"module"}