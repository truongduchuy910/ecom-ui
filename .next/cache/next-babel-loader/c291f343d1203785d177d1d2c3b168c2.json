{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, Fragment } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { getErrorMessage } from \"../../lib/chip\";\nimport { Item } from \"./item\";\nimport { Loading } from \"../src/Loading\";\nimport { MdCreate } from \"react-icons/md\";\nimport { IoMdAddCircleOutline, IoIosColorWand } from \"react-icons/io\";\nimport { Create } from \"./create\";\nimport { customerVar } from \"../../apollo/client\"; // get\n\nconst GET_CUSTOMERS = gql`\n  query {\n    allCustomers {\n      id\n      name\n      phone\n      address\n    }\n  }\n`;\nexport function List({\n  createClick\n}) {\n  const {\n    0: create,\n    1: setCreate\n  } = useState(false);\n  const {\n    data,\n    loading,\n    error,\n    refetch\n  } = useQuery(GET_CUSTOMERS);\n  if (loading) return __jsx(\"i\", null, \"...\");\n  if (error) return __jsx(\"i\", null, getErrorMessage(error));\n  return __jsx(\"div\", null, create || (data === null || data === void 0 ? void 0 : data.allCustomers.length) === 0 ? __jsx(Create, {\n    onSubmit: () => {\n      setCreate(false);\n\n      try {\n        refetch();\n      } catch {}\n    }\n  }) : null, (data === null || data === void 0 ? void 0 : data.allCustomers.length) ? __jsx(Fragment, null, __jsx(\"h5\", {\n    style: {\n      display: \"inline\",\n      marginRight: 13\n    }\n  }, \"Ch\\u1ECDn \\u0110\\u1ECBa Ch\\u1EC9 Nh\\u1EADn.\"), __jsx(\"label\", {\n    onClick: () => {\n      setCreate(true);\n    },\n    style: {\n      cursor: \"pointer\"\n    }\n  }, \"Ho\\u1EB7c t\\u1EA1o m\\u1EDBi \", __jsx(IoMdAddCircleOutline, null))) : null, data ? data.allCustomers.map(customer => __jsx(Item, {\n    key: customer.id,\n    customer: customer,\n    onDelete: () => {\n      refetch();\n    }\n  })) : __jsx(Loading, null));\n}","map":null,"metadata":{},"sourceType":"module"}