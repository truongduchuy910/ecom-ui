{"ast":null,"code":"import { cache } from \"./client\";\nimport { makeVar, gql } from \"@apollo/client\";\nexport const newOrderCountVar = makeVar(false);\nexport const newOrderVar = makeVar(false);\nexport const customerVar = makeVar();\nexport const USER = gql`\n  query {\n    user @client\n  }\n`;\nexport const CART = gql`\n  query {\n    cartItems @client\n  }\n`;\nexport const WISHLIST = gql`\n  query {\n    wishlist @client\n  }\n`;\nexport const COMPARE = gql`\n  query {\n    compare @client\n  }\n`; // initialize\n\ncache.writeQuery({\n  query: USER,\n  data: {\n    user: false ? JSON.parse(localStorage.getItem(\"user\")) : {\n      id: null,\n      email: null,\n      isAdmin: null,\n      isSeller: null\n    }\n  }\n});\ncache.writeQuery({\n  query: CART,\n  data: {\n    cartItems: false ? JSON.parse(localStorage.getItem(\"cartItems\") || '{ \"data\": [] }').data : null\n  }\n});\ncache.writeQuery({\n  query: COMPARE,\n  data: {\n    compare: false ? JSON.parse(localStorage.getItem(\"compare\") || '{ \"data\": [] }').data : null\n  }\n});\ncache.writeQuery({\n  query: WISHLIST,\n  data: {\n    wishlist: false ? JSON.parse(localStorage.getItem(\"wishlist\") || '{ \"data\": [] }').data : null\n  }\n});\n\nconst modifyUser = ({\n  user\n}) => {\n  if (false) {\n    if (user) {\n      localStorage.setItem(\"user\", JSON.stringify(user));\n    } else {\n      localStorage.removeItem(\"user\");\n    }\n\n    cache.modify({\n      fields: {\n        user() {\n          return user;\n        }\n\n      }\n    });\n  }\n};\n\nconst modifyCart = ({\n  items\n}) => {\n  if (false) {\n    localStorage.setItem(\"cartItems\", JSON.stringify({\n      data: items\n    }));\n    cache.modify({\n      fields: {\n        cartItems() {\n          return items;\n        }\n\n      }\n    });\n  }\n};\n\nconst modifyWishlist = ({\n  items\n}) => {\n  if (false) {\n    localStorage.setItem(\"wishlist\", JSON.stringify({\n      data: items\n    }));\n    cache.modify({\n      fields: {\n        wishlist() {\n          return items;\n        }\n\n      }\n    });\n  }\n};\n\nconst modifyCompare = ({\n  items\n}) => {\n  if (false) {\n    localStorage.setItem(\"compare\", JSON.stringify({\n      data: items\n    }));\n    cache.modify({\n      fields: {\n        compare() {\n          return items;\n        }\n\n      }\n    });\n  }\n};\n/* \n    you can use client variable below\n*/\n\n\nexport const emptyCompare = () => {\n  modifyCompare({\n    items: []\n  });\n};\nexport const removeCompareItem = function (removeItem) {\n  let products = [];\n\n  try {\n    // get\n    products = JSON.parse(localStorage.getItem(\"compare\") || '{ \"data\": [] }').data;\n  } catch {} // change\n\n\n  let items = [];\n  products.map(product => {\n    if (product.id !== removeItem.id) items.push(product);\n  });\n  modifyCompare({\n    items\n  });\n};\nexport function addProductToLocalCompare(newProduct) {\n  // get\n  let products = [];\n\n  try {\n    products = JSON.parse(localStorage.getItem(\"compare\") || '{ \"data\": [] }').data;\n  } catch {} // change\n\n\n  let others = [];\n  products.map(product => {\n    if (product.id !== newProduct.id) {\n      others.push(product);\n    }\n  });\n  const items = [...others, newProduct]; // save\n\n  modifyCompare({\n    items\n  });\n}\nexport const onSignIn = ({\n  user\n}) => {\n  modifyUser({\n    user\n  });\n};\nexport const onSignOut = () => {\n  modifyUser({\n    user: null\n  });\n};\nexport const emptyCart = function () {\n  modifyCart({\n    items: []\n  });\n};\nexport const removeCartItem = removeItem => {\n  // get\n  const cartItems = JSON.parse(localStorage.getItem(\"cartItems\") || '{ \"data\": [] }').data; // change\n\n  let items = [];\n  cartItems.map(item => {\n    if (item.product.id !== removeItem.product.id) items.push(item);\n  });\n  modifyCart({\n    items\n  });\n};\nexport const changeCartItem = function (cartItem, change) {\n  // get\n  let cartItems = [];\n\n  try {\n    cartItems = JSON.parse(localStorage.getItem(\"cartItems\") || '{ \"data\": [] }').data;\n  } catch {} // change\n\n\n  let items = [];\n  const price = cartItem.product.price - cartItem.product.sale;\n  cartItems.map((item, index) => {\n    const quantity = item.quantity + change > 0 ? item.quantity + change : item.quantity;\n\n    if (item.product.id !== cartItem.product.id) {\n      items.push(item);\n    } else {\n      items.push({\n        product: item.product,\n        quantity,\n        price: price * quantity\n      });\n    }\n  }); // save\n\n  modifyCart({\n    items\n  });\n};\nexport function addProductToLocalCart({\n  product,\n  variables\n}) {\n  // get\n  let cartItems = [];\n\n  try {\n    cartItems = JSON.parse(localStorage.getItem(\"cartItems\") || '{ \"data\": [] }').data;\n  } catch {} // change\n\n\n  let items = [];\n  let exist = false;\n  const price = product.price - product.sale;\n  cartItems.map(cartItem => {\n    if (cartItem.product.id !== product.id) {\n      items.push(cartItem);\n    } else {\n      exist = true;\n      items.push({\n        product: cartItem.product,\n        quantity: cartItem.quantity + 1,\n        price: price * (cartItem.quantity + 1)\n      });\n    }\n  });\n  if (exist === false) items.push({\n    product,\n    quantity: 1,\n    price\n  }); // save\n\n  modifyCart({\n    items\n  });\n}\nexport const emptyWishlist = function () {\n  modifyWishlist({\n    items: []\n  });\n};\nexport const removeWishListItem = function (removeItem) {\n  let products = [];\n\n  try {\n    // get\n    products = JSON.parse(localStorage.getItem(\"wishlist\") || '{ \"data\": [] }').data;\n  } catch {} // change\n\n\n  let items = [];\n  products.map(product => {\n    if (product.id !== removeItem.id) items.push(product);\n  });\n  modifyWishlist({\n    items\n  });\n};\nexport function addProductToLocalWishlist(newProduct) {\n  // get\n  let products = [];\n\n  try {\n    products = JSON.parse(localStorage.getItem(\"wishlist\") || '{ \"data\": [] }').data;\n  } catch {} // change\n\n\n  let others = [];\n  products.map(product => {\n    if (product.id !== newProduct.id) {\n      others.push(product);\n    }\n  });\n  const items = [...others, newProduct]; // save\n\n  modifyWishlist({\n    items\n  });\n}","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/apollo/action.js"],"names":["cache","makeVar","gql","newOrderCountVar","newOrderVar","customerVar","USER","CART","WISHLIST","COMPARE","writeQuery","query","data","user","JSON","parse","localStorage","getItem","id","email","isAdmin","isSeller","cartItems","compare","wishlist","modifyUser","setItem","stringify","removeItem","modify","fields","modifyCart","items","modifyWishlist","modifyCompare","emptyCompare","removeCompareItem","products","map","product","push","addProductToLocalCompare","newProduct","others","onSignIn","onSignOut","emptyCart","removeCartItem","item","changeCartItem","cartItem","change","price","sale","index","quantity","addProductToLocalCart","variables","exist","emptyWishlist","removeWishListItem","addProductToLocalWishlist"],"mappings":"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","sourcesContent":["import { cache } from \"./client\";\nimport { makeVar, gql } from \"@apollo/client\";\nexport const newOrderCountVar = makeVar(false);\nexport const newOrderVar = makeVar(false);\nexport const customerVar = makeVar();\n\nexport const USER = gql`\n  query {\n    user @client\n  }\n`;\nexport const CART = gql`\n  query {\n    cartItems @client\n  }\n`;\nexport const WISHLIST = gql`\n  query {\n    wishlist @client\n  }\n`;\nexport const COMPARE = gql`\n  query {\n    compare @client\n  }\n`;\n// initialize\ncache.writeQuery({\n  query: USER,\n\n  data: {\n    user:\n      typeof window !== \"undefined\"\n        ? JSON.parse(localStorage.getItem(\"user\"))\n        : { id: null, email: null, isAdmin: null, isSeller: null },\n  },\n});\n\ncache.writeQuery({\n  query: CART,\n  data: {\n    cartItems:\n      typeof window !== \"undefined\"\n        ? JSON.parse(localStorage.getItem(\"cartItems\") || '{ \"data\": [] }').data\n        : null,\n  },\n});\ncache.writeQuery({\n  query: COMPARE,\n  data: {\n    compare:\n      typeof window !== \"undefined\"\n        ? JSON.parse(localStorage.getItem(\"compare\") || '{ \"data\": [] }').data\n        : null,\n  },\n});\ncache.writeQuery({\n  query: WISHLIST,\n  data: {\n    wishlist:\n      typeof window !== \"undefined\"\n        ? JSON.parse(localStorage.getItem(\"wishlist\") || '{ \"data\": [] }').data\n        : null,\n  },\n});\n\nconst modifyUser = ({ user }) => {\n  if (typeof window !== \"undefined\") {\n    if (user) {\n      localStorage.setItem(\"user\", JSON.stringify(user));\n    } else {\n      localStorage.removeItem(\"user\");\n    }\n    cache.modify({\n      fields: {\n        user() {\n          return user;\n        },\n      },\n    });\n  }\n};\nconst modifyCart = ({ items }) => {\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"cartItems\", JSON.stringify({ data: items }));\n    cache.modify({\n      fields: {\n        cartItems() {\n          return items;\n        },\n      },\n    });\n  }\n};\nconst modifyWishlist = ({ items }) => {\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"wishlist\", JSON.stringify({ data: items }));\n    cache.modify({\n      fields: {\n        wishlist() {\n          return items;\n        },\n      },\n    });\n  }\n};\nconst modifyCompare = ({ items }) => {\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"compare\", JSON.stringify({ data: items }));\n    cache.modify({\n      fields: {\n        compare() {\n          return items;\n        },\n      },\n    });\n  }\n};\n\n/* \n    you can use client variable below\n*/\nexport const emptyCompare = () => {\n  modifyCompare({ items: [] });\n};\nexport const removeCompareItem = function (removeItem) {\n  let products = [];\n  try {\n    // get\n    products = JSON.parse(localStorage.getItem(\"compare\") || '{ \"data\": [] }')\n      .data;\n  } catch {}\n\n  // change\n  let items = [];\n  products.map((product) => {\n    if (product.id !== removeItem.id) items.push(product);\n  });\n  modifyCompare({ items });\n};\nexport function addProductToLocalCompare(newProduct) {\n  // get\n\n  let products = [];\n  try {\n    products = JSON.parse(localStorage.getItem(\"compare\") || '{ \"data\": [] }')\n      .data;\n  } catch {}\n\n  // change\n  let others = [];\n  products.map((product) => {\n    if (product.id !== newProduct.id) {\n      others.push(product);\n    }\n  });\n  const items = [...others, newProduct];\n\n  // save\n  modifyCompare({ items });\n}\n\nexport const onSignIn = ({ user }) => {\n  modifyUser({ user });\n};\nexport const onSignOut = () => {\n  modifyUser({ user: null });\n};\nexport const emptyCart = function () {\n  modifyCart({ items: [] });\n};\nexport const removeCartItem = (removeItem) => {\n  // get\n  const cartItems = JSON.parse(\n    localStorage.getItem(\"cartItems\") || '{ \"data\": [] }'\n  ).data;\n  // change\n  let items = [];\n  cartItems.map((item) => {\n    if (item.product.id !== removeItem.product.id) items.push(item);\n  });\n  modifyCart({ items });\n};\nexport const changeCartItem = function (cartItem, change) {\n  // get\n  let cartItems = [];\n  try {\n    cartItems = JSON.parse(\n      localStorage.getItem(\"cartItems\") || '{ \"data\": [] }'\n    ).data;\n  } catch {}\n\n  // change\n  let items = [];\n  const price = cartItem.product.price - cartItem.product.sale;\n\n  cartItems.map((item, index) => {\n    const quantity =\n      item.quantity + change > 0 ? item.quantity + change : item.quantity;\n    if (item.product.id !== cartItem.product.id) {\n      items.push(item);\n    } else {\n      items.push({\n        product: item.product,\n        quantity,\n        price: price * quantity,\n      });\n    }\n  });\n  // save\n  modifyCart({ items });\n};\n\nexport function addProductToLocalCart({ product, variables }) {\n  // get\n\n  let cartItems = [];\n  try {\n    cartItems = JSON.parse(\n      localStorage.getItem(\"cartItems\") || '{ \"data\": [] }'\n    ).data;\n  } catch {}\n\n  // change\n  let items = [];\n  let exist = false;\n  const price = product.price - product.sale;\n\n  cartItems.map((cartItem) => {\n    if (cartItem.product.id !== product.id) {\n      items.push(cartItem);\n    } else {\n      exist = true;\n      items.push({\n        product: cartItem.product,\n        quantity: cartItem.quantity + 1,\n        price: price * (cartItem.quantity + 1),\n      });\n    }\n  });\n  if (exist === false) items.push({ product, quantity: 1, price });\n  // save\n  modifyCart({ items });\n}\nexport const emptyWishlist = function () {\n  modifyWishlist({ items: [] });\n};\nexport const removeWishListItem = function (removeItem) {\n  let products = [];\n  try {\n    // get\n    products = JSON.parse(localStorage.getItem(\"wishlist\") || '{ \"data\": [] }')\n      .data;\n  } catch {}\n\n  // change\n  let items = [];\n  products.map((product) => {\n    if (product.id !== removeItem.id) items.push(product);\n  });\n  modifyWishlist({ items });\n};\n\nexport function addProductToLocalWishlist(newProduct) {\n  // get\n\n  let products = [];\n  try {\n    products = JSON.parse(localStorage.getItem(\"wishlist\") || '{ \"data\": [] }')\n      .data;\n  } catch {}\n\n  // change\n  let others = [];\n  products.map((product) => {\n    if (product.id !== newProduct.id) {\n      others.push(product);\n    }\n  });\n  const items = [...others, newProduct];\n\n  // save\n  modifyWishlist({ items });\n}\n"]},"metadata":{},"sourceType":"module"}