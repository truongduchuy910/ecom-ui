{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/ecom-ui/components/Product/list.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect, Fragment } from \"react\";\nimport { gql, useQuery, rewriteURIForGET } from \"@apollo/client\";\nimport { useRouter, withRouter, Router } from \"next/router\";\nimport { Item as Product } from \"./item\";\nimport { Container, Row, Col, Spinner } from \"reactstrap\";\nimport { page } from \"../../config/index\";\nimport { toSlug } from \"../../lib/chip\";\nimport { Loading } from \"../src/Loading\";\nimport { theme } from \"../../config/index\";\nimport { MoreProducts } from \"../UI/moreProducts\";\nimport { css } from \"../src/css\";\nconst GET_PRODUCTS = gql`\n  query(\n    $first: Int\n    $skip: Int\n    $attributes: AttributeGroupWhereInput\n    $category: String\n    $categories: [String]\n    $brand: BrandWhereInput\n    $orderBy: String\n    $suggestions: ProductSuggestionType\n    $seller: UserWhereInput\n    $sale_gt: Int\n    $price_from: Int\n    $price_to: Int\n    $keyword: String\n    $except: String\n  ) {\n    allProducts(\n      first: $first\n      skip: $skip\n      where: {\n        AND: [\n          { url_contains: $keyword }\n          { category: { OR: [{ url: $category }, { url_in: $categories }] } }\n          { brand: $brand }\n          { attributeGroups_some: $attributes }\n          { suggestions: $suggestions }\n          { seller: $seller }\n          { sale_gt: $sale_gt }\n          { price_gt: $price_from }\n          { price_lt: $price_to }\n          { url_not: $except }\n        ]\n      }\n      orderBy: $orderBy\n    ) {\n      id\n      name\n      description\n      image {\n        publicUrl\n      }\n      images {\n        file {\n          publicUrl\n        }\n      }\n      price\n      sale\n      attributeGroups {\n        id\n        name\n        attributes {\n          id\n          name\n          url\n        }\n      }\n      url\n    }\n  }\n`;\nexport const List = ({\n  title = \"\",\n  first = 2,\n  skip = 0,\n  category,\n  categories,\n  brand = \"\",\n  attributes,\n  orderBy,\n  suggestions,\n  sale,\n  price_from = 0,\n  price_to,\n  xs,\n  sm,\n  md,\n  lg,\n  xl,\n  more = true,\n  search,\n  except\n}) => {\n  var _data$allProducts2;\n\n  let variables = {\n    first,\n    skip,\n    category,\n    categories,\n    brand: brand ? {\n      url_contains: brand\n    } : null,\n    attributes,\n    orderBy,\n    suggestions,\n    seller: page.seller,\n    price_from,\n    price_to: price_to ? price_to : 999999999,\n    except\n  };\n  if (search) variables.keyword = toSlug(search);\n  if (sale) variables.sale_gt = 0;\n  let {\n    data,\n    error,\n    loading,\n    fetchMore\n  } = useQuery(GET_PRODUCTS, {\n    variables\n  });\n  let {\n    0: on,\n    1: setOn\n  } = useState(true);\n  let width = 0;\n  useEffect(() => {\n    // fetch more data\n    if (more) {\n      const productsEle = document.getElementById(\"products\"); // hight of element - scrollTop < window height ?\n\n      const alpha = () => (productsEle === null || productsEle === void 0 ? void 0 : productsEle.clientHeight) - document.scrollingElement.scrollTop - window.innerHeight + 150;\n\n      if (alpha() > 0) setOn(false); // loading done\n\n      if (on && !loading && alpha() < 0) {\n        loadingMore();\n      }\n\n      window.onscroll = () => {\n        if (alpha() < 0 && !on) setOn(true);\n      };\n    }\n\n    if (!width) width = window.innerWidth;\n  });\n\n  function loadingMore() {\n    var _data$allProducts;\n\n    const count = data === null || data === void 0 ? void 0 : (_data$allProducts = data.allProducts) === null || _data$allProducts === void 0 ? void 0 : _data$allProducts.length;\n    variables.skip = count;\n\n    try {\n      fetchMore({\n        variables,\n        updateQuery: (prev, {\n          fetchMoreResult\n        }) => {\n          var _fetchMoreResult$allP;\n\n          if (!((_fetchMoreResult$allP = fetchMoreResult.allProducts) === null || _fetchMoreResult$allP === void 0 ? void 0 : _fetchMoreResult$allP.length)) {\n            return prev;\n          }\n\n          return Object.assign({}, prev, {\n            allProducts: [...prev.allProducts, ...fetchMoreResult.allProducts]\n          });\n        }\n      });\n    } catch (e) {}\n  }\n\n  if (error || loading) return __jsx(\"div\", {\n    style: {\n      margin: theme.spacing(3)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }));\n  return (data === null || data === void 0 ? void 0 : (_data$allProducts2 = data.allProducts) === null || _data$allProducts2 === void 0 ? void 0 : _data$allProducts2.length) ? __jsx(\"section\", {\n    id: \"products\",\n    style: {\n      marginTop: theme.spacing(7),\n      marginBottom: theme.spacing(7),\n      paddingLeft: theme.spacing(2)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    style: _objectSpread(_objectSpread({}, css.h2), {}, {\n      textAlign: \"center\",\n      marginBottom: theme.spacing(5)\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, title), __jsx(Row, {\n    noGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, data.allProducts.map(product => __jsx(Col, {\n    key: product.id,\n    xs: xs ? xs : 6,\n    sm: sm ? sm : 6,\n    md: md ? md : 4,\n    lg: lg ? lg : 3,\n    xl: xl ? xl : 2,\n    style: {\n      padding: width <= 768 && width != 0 ? 3 : theme.spacing(2)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, __jsx(Product, {\n    product: product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }))))) : __jsx(\"p\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }\n  }, \"Kh\\xF4ng c\\xF3 k\\u1EBFt qu\\u1EA3!\");\n};","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/components/Product/list.js"],"names":["useState","useEffect","Fragment","gql","useQuery","rewriteURIForGET","useRouter","withRouter","Router","Item","Product","Container","Row","Col","Spinner","page","toSlug","Loading","theme","MoreProducts","css","GET_PRODUCTS","List","title","first","skip","category","categories","brand","attributes","orderBy","suggestions","sale","price_from","price_to","xs","sm","md","lg","xl","more","search","except","variables","url_contains","seller","keyword","sale_gt","data","error","loading","fetchMore","on","setOn","width","productsEle","document","getElementById","alpha","clientHeight","scrollingElement","scrollTop","window","innerHeight","loadingMore","onscroll","innerWidth","count","allProducts","length","updateQuery","prev","fetchMoreResult","Object","assign","e","margin","spacing","marginTop","marginBottom","paddingLeft","h2","textAlign","map","product","id","padding"],"mappings":"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","sourcesContent":["import { useState, useEffect, Fragment } from \"react\";\nimport { gql, useQuery, rewriteURIForGET } from \"@apollo/client\";\nimport { useRouter, withRouter, Router } from \"next/router\";\nimport { Item as Product } from \"./item\";\nimport { Container, Row, Col, Spinner } from \"reactstrap\";\nimport { page } from \"../../config/index\";\n\nimport { toSlug } from \"../../lib/chip\";\nimport { Loading } from \"../src/Loading\";\n\nimport { theme } from \"../../config/index\";\n\nimport { MoreProducts } from \"../UI/moreProducts\";\nimport { css } from \"../src/css\";\nconst GET_PRODUCTS = gql`\n  query(\n    $first: Int\n    $skip: Int\n    $attributes: AttributeGroupWhereInput\n    $category: String\n    $categories: [String]\n    $brand: BrandWhereInput\n    $orderBy: String\n    $suggestions: ProductSuggestionType\n    $seller: UserWhereInput\n    $sale_gt: Int\n    $price_from: Int\n    $price_to: Int\n    $keyword: String\n    $except: String\n  ) {\n    allProducts(\n      first: $first\n      skip: $skip\n      where: {\n        AND: [\n          { url_contains: $keyword }\n          { category: { OR: [{ url: $category }, { url_in: $categories }] } }\n          { brand: $brand }\n          { attributeGroups_some: $attributes }\n          { suggestions: $suggestions }\n          { seller: $seller }\n          { sale_gt: $sale_gt }\n          { price_gt: $price_from }\n          { price_lt: $price_to }\n          { url_not: $except }\n        ]\n      }\n      orderBy: $orderBy\n    ) {\n      id\n      name\n      description\n      image {\n        publicUrl\n      }\n      images {\n        file {\n          publicUrl\n        }\n      }\n      price\n      sale\n      attributeGroups {\n        id\n        name\n        attributes {\n          id\n          name\n          url\n        }\n      }\n      url\n    }\n  }\n`;\nexport const List = ({\n  title = \"\",\n  first = 2,\n  skip = 0,\n  category,\n  categories,\n  brand = \"\",\n  attributes,\n  orderBy,\n  suggestions,\n  sale,\n  price_from = 0,\n  price_to,\n  xs,\n  sm,\n  md,\n  lg,\n  xl,\n  more = true,\n  search,\n  except,\n}) => {\n  let variables = {\n    first,\n    skip,\n    category,\n    categories,\n    brand: brand ? { url_contains: brand } : null,\n    attributes,\n    orderBy,\n    suggestions,\n    seller: page.seller,\n    price_from,\n    price_to: price_to ? price_to : 999999999,\n    except,\n  };\n  if (search) variables.keyword = toSlug(search);\n  if (sale) variables.sale_gt = 0;\n  let { data, error, loading, fetchMore } = useQuery(GET_PRODUCTS, {\n    variables,\n  });\n  let [on, setOn] = useState(true);\n  let width = 0;\n  useEffect(() => {\n    // fetch more data\n    if (more) {\n      const productsEle = document.getElementById(\"products\");\n      // hight of element - scrollTop < window height ?\n      const alpha = () =>\n        productsEle?.clientHeight -\n        document.scrollingElement.scrollTop -\n        window.innerHeight +\n        150;\n\n      if (alpha() > 0) setOn(false); // loading done\n      if (on && !loading && alpha() < 0) {\n        loadingMore();\n      }\n\n      window.onscroll = () => {\n        if (alpha() < 0 && !on) setOn(true);\n      };\n    }\n    if (!width) width = window.innerWidth;\n  });\n  function loadingMore() {\n    const count = data?.allProducts?.length;\n    variables.skip = count;\n    try {\n      fetchMore({\n        variables,\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult.allProducts?.length) {\n            return prev;\n          }\n          return Object.assign({}, prev, {\n            allProducts: [...prev.allProducts, ...fetchMoreResult.allProducts],\n          });\n        },\n      });\n    } catch (e) {}\n  }\n  if (error || loading)\n    return (\n      <div style={{ margin: theme.spacing(3) }}>\n        <Loading />\n      </div>\n    );\n  return data?.allProducts?.length ? (\n    <section\n      id=\"products\"\n      style={{\n        marginTop: theme.spacing(7),\n        marginBottom: theme.spacing(7),\n        paddingLeft: theme.spacing(2),\n      }}\n    >\n      <h2\n        style={{\n          ...css.h2,\n          textAlign: \"center\",\n          marginBottom: theme.spacing(5),\n        }}\n      >\n        {title}\n      </h2>\n      <Row noGutters>\n        {data.allProducts.map((product) => (\n          <Col\n            key={product.id}\n            xs={xs ? xs : 6}\n            sm={sm ? sm : 6}\n            md={md ? md : 4}\n            lg={lg ? lg : 3}\n            xl={xl ? xl : 2}\n            style={{\n              padding: width <= 768 && width != 0 ? 3 : theme.spacing(2),\n            }}\n          >\n            <Product product={product} />\n          </Col>\n        ))}\n      </Row>\n    </section>\n  ) : (\n    <p style={{ textAlign: \"center\" }}>Không có kết quả!</p>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}