{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect, Fragment, useContext } from \"react\";\nimport { gql, useQuery, rewriteURIForGET } from \"@apollo/client\";\nimport { Item as Post } from \"./item\";\nimport { Container, Row, Col, Spinner } from \"reactstrap\";\nimport { toSlug } from \"../../lib/chip\";\nimport { Loading } from \"../src/Loading\";\nimport { SellerContext } from \"../src/SellerProvider\";\nconst GET_POSTS = gql`\n  query(\n    $first: Int\n    $skip: Int\n    $hashtag: HashtagWhereInput\n    $seller: UserWhereInput\n    $except: String\n  ) {\n    allPosts(\n      first: $first\n      skip: $skip\n      where: {\n        AND: [\n          { hashtags_every: $hashtag }\n          { seller: $seller }\n          { url_not: $except }\n        ]\n      }\n    ) {\n      id\n      url\n      title\n      body\n      file {\n        publicUrl\n      }\n    }\n  }\n`;\nexport const List = ({\n  title = \"\",\n  first = 0,\n  skip = 0,\n  xs,\n  sm,\n  md,\n  lg,\n  xl,\n  except,\n  hashtag\n}) => {\n  var _data$allPosts;\n\n  const theme = useContext(SellerContext);\n  let variables = {\n    hashtag: hashtag ? {\n      url_contains: hashtag\n    } : null,\n    seller: theme.seller,\n    except\n  };\n  let {\n    data,\n    error,\n    loading\n  } = useQuery(GET_POSTS, {\n    variables\n  });\n  let width = 0;\n  if (error || loading) return __jsx(\"div\", {\n    style: {\n      margin: theme.spacing(3)\n    }\n  }, __jsx(Loading, null));\n  return (data === null || data === void 0 ? void 0 : (_data$allPosts = data.allPosts) === null || _data$allPosts === void 0 ? void 0 : _data$allPosts.length) ? __jsx(\"section\", {\n    id: \"posts\",\n    style: {\n      paddingLeft: theme.spacing(2)\n    }\n  }, title ? __jsx(\"h2\", {\n    style: _objectSpread(_objectSpread({}, theme.css.h2), {}, {\n      textAlign: \"center\",\n      marginBottom: theme.spacing(5)\n    })\n  }, title) : null, __jsx(Row, {\n    noGutters: true,\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    }\n  }, data.allPosts.map(post => {\n    var _data$allPosts2, _data$allPosts3, _data$allPosts4, _data$allPosts5, _data$allPosts6;\n\n    return __jsx(Col, {\n      key: post.id,\n      xs: (data === null || data === void 0 ? void 0 : (_data$allPosts2 = data.allPosts) === null || _data$allPosts2 === void 0 ? void 0 : _data$allPosts2.length) > 2 ? xs ? xs : 6 : 12,\n      sm: (data === null || data === void 0 ? void 0 : (_data$allPosts3 = data.allPosts) === null || _data$allPosts3 === void 0 ? void 0 : _data$allPosts3.length) > 2 ? sm ? sm : 6 : 12,\n      md: (data === null || data === void 0 ? void 0 : (_data$allPosts4 = data.allPosts) === null || _data$allPosts4 === void 0 ? void 0 : _data$allPosts4.length) > 2 ? md ? md : 4 : 12,\n      lg: (data === null || data === void 0 ? void 0 : (_data$allPosts5 = data.allPosts) === null || _data$allPosts5 === void 0 ? void 0 : _data$allPosts5.length) > 2 ? lg ? lg : 3 : 12,\n      xl: (data === null || data === void 0 ? void 0 : (_data$allPosts6 = data.allPosts) === null || _data$allPosts6 === void 0 ? void 0 : _data$allPosts6.length) > 2 ? xl ? xl : 2 : 12,\n      style: {\n        padding: width <= 768 && width != 0 ? 3 : theme.spacing(2),\n        paddingTop: 0\n      }\n    }, __jsx(Post, {\n      post: post\n    }));\n  }))) : __jsx(\"p\", {\n    style: {\n      textAlign: \"center\"\n    }\n  }, \"Kh\\xF4ng c\\xF3 k\\u1EBFt qu\\u1EA3!\");\n};","map":null,"metadata":{},"sourceType":"module"}