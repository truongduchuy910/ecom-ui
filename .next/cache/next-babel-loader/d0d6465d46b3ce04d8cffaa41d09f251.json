{"ast":null,"code":"import { cache } from \"./client\";\nimport { makeVar, gql } from \"@apollo/client\";\nexport const USER = gql`\n  query {\n    user @client\n  }\n`;\nexport const CART = gql`\n  query {\n    cartItems @client\n  }\n`;\nexport const WISHLIST = gql`\n  query {\n    wishlist @client\n  }\n`;\nexport const COMPARE = gql`\n  query {\n    compare @client\n  }\n`;\nexport const CUSTOMER = gql`\n  query {\n    customer @client\n  }\n`; // initialize\n\nexport const init = () => {\n  cache.writeQuery({\n    query: USER,\n    data: {\n      user: false ? JSON.parse(localStorage.getItem(\"user\")) : {\n        id: null,\n        email: null,\n        isAdmin: null,\n        isSeller: null\n      }\n    }\n  });\n  cache.writeQuery({\n    query: CART,\n    data: {\n      cartItems: false ? JSON.parse(localStorage.getItem(\"cartItems\") || '{ \"data\": [] }').data : null\n    }\n  });\n  cache.writeQuery({\n    query: COMPARE,\n    data: {\n      compare: false ? JSON.parse(localStorage.getItem(\"compare\") || '{ \"data\": [] }').data : null\n    }\n  });\n  cache.writeQuery({\n    query: WISHLIST,\n    data: {\n      wishlist: false ? JSON.parse(localStorage.getItem(\"wishlist\") || '{ \"data\": [] }').data : null\n    }\n  });\n  cache.writeQuery({\n    query: CUSTOMER,\n    data: {\n      customer: {\n        phone: null,\n        name: null,\n        address: null\n      }\n    }\n  });\n};\n\nconst modifyUser = ({\n  user\n}) => {\n  if (false) {\n    if (user) {\n      localStorage.setItem(\"user\", JSON.stringify(user));\n    } else {\n      localStorage.removeItem(\"user\");\n    }\n\n    cache.modify({\n      fields: {\n        user() {\n          return user;\n        }\n\n      }\n    });\n  }\n};\n\nconst modifyCart = ({\n  items\n}) => {\n  if (false) {\n    localStorage.setItem(\"cartItems\", JSON.stringify({\n      data: items\n    }));\n    cache.modify({\n      fields: {\n        cartItems() {\n          return items;\n        }\n\n      }\n    });\n  }\n};\n\nconst modifyWishlist = ({\n  items\n}) => {\n  if (false) {\n    localStorage.setItem(\"wishlist\", JSON.stringify({\n      data: items\n    }));\n    cache.modify({\n      fields: {\n        wishlist() {\n          return items;\n        }\n\n      }\n    });\n  }\n};\n\nconst modifyCompare = ({\n  items\n}) => {\n  if (false) {\n    localStorage.setItem(\"compare\", JSON.stringify({\n      data: items\n    }));\n    cache.modify({\n      fields: {\n        compare() {\n          return items;\n        }\n\n      }\n    });\n  }\n};\n\nconst modifyCustomer = ({\n  customer\n}) => {\n  if (false) {\n    if (customer) {\n      localStorage.setItem(\"customer\", JSON.stringify(customer));\n    } else {\n      localStorage.removeItem(\"customer\");\n    }\n\n    cache.modify({\n      fields: {\n        customer() {\n          return customer;\n        }\n\n      }\n    });\n  }\n};\n/* \n    you can use client variable below\n*/\n\n\nexport const emptyCompare = () => {\n  modifyCompare({\n    items: []\n  });\n};\nexport const removeCompareItem = function (removeItem) {\n  let products = [];\n\n  try {\n    // get\n    products = JSON.parse(localStorage.getItem(\"compare\") || '{ \"data\": [] }').data;\n  } catch {} // change\n\n\n  let items = [];\n  products.map(product => {\n    if (product.id !== removeItem.id) items.push(product);\n  });\n  modifyCompare({\n    items\n  });\n};\nexport function addProductToLocalCompare(newProduct) {\n  // get\n  let products = [];\n\n  try {\n    products = JSON.parse(localStorage.getItem(\"compare\") || '{ \"data\": [] }').data;\n  } catch {} // change\n\n\n  let others = [];\n  products.map(product => {\n    if (product.id !== newProduct.id) {\n      others.push(product);\n    }\n  });\n  const items = [...others, newProduct]; // save\n\n  modifyCompare({\n    items\n  });\n}\nexport const onSignIn = ({\n  user\n}) => {\n  modifyUser({\n    user\n  });\n};\nexport const onSignOut = () => {\n  modifyUser({\n    user: null\n  });\n};\nexport const chooseCustomer = ({\n  customer\n}) => {\n  modifyCustomer({\n    customer\n  });\n};\nexport const emptyCart = function () {\n  modifyCart({\n    items: []\n  });\n};\nexport const removeCartItem = removeItem => {\n  // get\n  const cartItems = JSON.parse(localStorage.getItem(\"cartItems\") || '{ \"data\": [] }').data; // change\n\n  let items = [];\n  cartItems.map(item => {\n    if (item.product.id !== removeItem.product.id) items.push(item);\n  });\n  modifyCart({\n    items\n  });\n};\nexport const changeCartItem = function (cartItem, change) {\n  // get\n  let cartItems = [];\n\n  try {\n    cartItems = JSON.parse(localStorage.getItem(\"cartItems\") || '{ \"data\": [] }').data;\n  } catch {} // change\n\n\n  let items = [];\n  const price = cartItem.product.price - cartItem.product.sale;\n  cartItems.map((item, index) => {\n    const quantity = item.quantity + change > 0 ? item.quantity + change : item.quantity;\n\n    if (item.product.id !== cartItem.product.id) {\n      items.push(item);\n    } else {\n      items.push({\n        product: item.product,\n        quantity,\n        price: price * quantity\n      });\n    }\n  }); // save\n\n  modifyCart({\n    items\n  });\n};\nexport function addProductToLocalCart({\n  product,\n  variables\n}) {\n  // get\n  let cartItems = [];\n\n  try {\n    cartItems = JSON.parse(localStorage.getItem(\"cartItems\") || '{ \"data\": [] }').data;\n  } catch {} // change\n\n\n  let items = [];\n  let exist = false;\n  const price = product.price - product.sale;\n  cartItems.map(cartItem => {\n    if (cartItem.product.id !== product.id) {\n      items.push(cartItem);\n    } else {\n      exist = true;\n      items.push({\n        product: cartItem.product,\n        quantity: cartItem.quantity + 1,\n        price: price * (cartItem.quantity + 1)\n      });\n    }\n  });\n  if (exist === false) items.push({\n    product,\n    quantity: 1,\n    price\n  }); // save\n\n  modifyCart({\n    items\n  });\n}\nexport const emptyWishlist = function () {\n  modifyWishlist({\n    items: []\n  });\n};\nexport const removeWishListItem = function (removeItem) {\n  let products = [];\n\n  try {\n    // get\n    products = JSON.parse(localStorage.getItem(\"wishlist\") || '{ \"data\": [] }').data;\n  } catch {} // change\n\n\n  let items = [];\n  products.map(product => {\n    if (product.id !== removeItem.id) items.push(product);\n  });\n  modifyWishlist({\n    items\n  });\n};\nexport function addProductToLocalWishlist(newProduct) {\n  // get\n  let products = [];\n\n  try {\n    products = JSON.parse(localStorage.getItem(\"wishlist\") || '{ \"data\": [] }').data;\n  } catch {} // change\n\n\n  let others = [];\n  products.map(product => {\n    if (product.id !== newProduct.id) {\n      others.push(product);\n    }\n  });\n  const items = [...others, newProduct]; // save\n\n  modifyWishlist({\n    items\n  });\n}","map":null,"metadata":{},"sourceType":"module"}