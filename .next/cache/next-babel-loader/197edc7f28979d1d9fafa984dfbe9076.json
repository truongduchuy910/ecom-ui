{"ast":null,"code":"var _jsxFileName = \"/media/huy/New Volume/linux/apps/ecom-ui/components/Hashtag/List/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport { useContext } from \"react\";\nimport { Loading } from \"../../Loading\";\nimport { One } from \"./One\";\nimport { Header } from \"./Header\";\nimport { Query, SellerContext } from \"../../../apollo\";\n\nconst Hashtags = ({\n  option = 1,\n  onChoose\n}) => {\n  // data\n  let theme = useContext(SellerContext);\n  let variables = {\n    hashtag: {\n      seller: theme.seller\n    }\n  };\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(gql`query($hashtag: HashtagWhereInput) {\n        allHashtags(where: $hashtag) {\n            id\n            name\n            url\n        }\n    }`, {\n    variables\n  }); // modify\n\n  const hashtags = data === null || data === void 0 ? void 0 : data.allHashtags.map(hashtag => {\n    var _hashtag$file;\n\n    return _objectSpread(_objectSpread({}, hashtag), {}, {\n      img: theme.server + (hashtag === null || hashtag === void 0 ? void 0 : (_hashtag$file = hashtag.file) === null || _hashtag$file === void 0 ? void 0 : _hashtag$file.publicUrl)\n    });\n  }); // render\n\n  if (!(error || loading)) {\n    switch (option) {\n      case 1:\n        return __jsx(One, {\n          hashtags: hashtags,\n          onChoose: onChoose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 24\n          }\n        });\n\n      case 'Header':\n        return __jsx(Header, {\n          hashtags: hashtags,\n          onChoose: onChoose,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 24\n          }\n        });\n\n      default:\n        return __jsx(\"pre\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 24\n          }\n        }, \"Invalid components.\");\n    }\n  } else return __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }\n  });\n};\n\nexport default Hashtags;","map":{"version":3,"sources":["/media/huy/New Volume/linux/apps/ecom-ui/components/Hashtag/List/index.js"],"names":["gql","useQuery","useContext","Loading","One","Header","Query","SellerContext","Hashtags","option","onChoose","theme","variables","hashtag","seller","data","error","loading","hashtags","allHashtags","map","img","server","file","publicUrl"],"mappings":";;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,KAAT,EAAgBC,aAAhB,QAAqC,iBAArC;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,MAAM,GAAG,CAAX;AAAcC,EAAAA;AAAd,CAAD,KAA8B;AAC3C;AACA,MAAIC,KAAK,GAAGT,UAAU,CAACK,aAAD,CAAtB;AACA,MAAIK,SAAS,GAAG;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,MAAM,EAAEH,KAAK,CAACG;AAAhB;AAAX,GAAhB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BhB,QAAQ,CAACD,GAAI;;;;;;MAAL,EAMrC;AAAEY,IAAAA;AAAF,GANqC,CAAzC,CAJ2C,CAW3C;;AACA,QAAMM,QAAQ,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEI,WAAN,CAAkBC,GAAlB,CAAsBP,OAAO,IAAI;AAAA;;AAC9C,2CAAYA,OAAZ;AAAqBQ,MAAAA,GAAG,EAAEV,KAAK,CAACW,MAAN,IAAeT,OAAf,aAAeA,OAAf,wCAAeA,OAAO,CAAEU,IAAxB,kDAAe,cAAeC,SAA9B;AAA1B;AACH,GAFgB,CAAjB,CAZ2C,CAe3C;;AACA,MAAI,EAAER,KAAK,IAAIC,OAAX,CAAJ,EAAyB;AACrB,YAAQR,MAAR;AACI,WAAK,CAAL;AACI,eAAO,MAAC,GAAD;AAAK,UAAA,QAAQ,EAAES,QAAf;AAAyB,UAAA,QAAQ,EAAER,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ,WAAK,QAAL;AACI,eAAO,MAAC,MAAD;AAAQ,UAAA,QAAQ,EAAEQ,QAAlB;AAA4B,UAAA,QAAQ,EAAER,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ;AACI,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AANR;AAQH,GATD,MASO,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACV,CA1BD;;AA2BA,eAAeF,QAAf","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\r\nimport { useContext } from \"react\";\r\nimport { Loading } from \"../../Loading\";\r\nimport { One } from \"./One\";\r\nimport { Header } from \"./Header\";\r\nimport { Query, SellerContext } from \"../../../apollo\";\r\n\r\n\r\nconst Hashtags = ({ option = 1, onChoose }) => {\r\n    // data\r\n    let theme = useContext(SellerContext);\r\n    let variables = { hashtag: { seller: theme.seller } };\r\n    const { data, error, loading } = useQuery(gql`query($hashtag: HashtagWhereInput) {\r\n        allHashtags(where: $hashtag) {\r\n            id\r\n            name\r\n            url\r\n        }\r\n    }`, { variables });\r\n    // modify\r\n    const hashtags = data?.allHashtags.map(hashtag => {\r\n        return { ...hashtag, img: theme.server + hashtag?.file?.publicUrl };\r\n    })\r\n    // render\r\n    if (!(error || loading)) {\r\n        switch (option) {\r\n            case 1:\r\n                return <One hashtags={hashtags} onChoose={onChoose} />\r\n            case 'Header':\r\n                return <Header hashtags={hashtags} onChoose={onChoose} />\r\n            default:\r\n                return <pre>Invalid components.</pre>\r\n        }\r\n    } else return <Loading />\r\n}\r\nexport default Hashtags"]},"metadata":{},"sourceType":"module"}