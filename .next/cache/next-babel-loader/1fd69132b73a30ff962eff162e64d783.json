{"ast":null,"code":"var _jsxFileName = \"/media/huy/New Volume/linux/apps/ecom-ui/components/Banner/list.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Item } from \"./item\";\nimport { Spinner, Container } from \"reactstrap\";\nimport { Loading } from \"../src/Loading\";\nimport { useContext } from \"react\";\nimport { SellerContext } from \"../src/SellerProvider\";\nconst GET_ATTRIBUTES = gql`\n  query($seller: UserWhereInput) {\n    allBanners(where: { seller: $seller }) {\n      id\n      file {\n        publicUrl\n      }\n    }\n  }\n`;\nexport function ListBanner({\n  style\n}) {\n  const theme = useContext(SellerContext);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_ATTRIBUTES, {\n    variables: {\n      seller: theme.seller\n    }\n  });\n  if (loading) return __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }\n  });\n  return !loading && data ? data.allBanners.slice(0, 1).map(banner => __jsx(Item, {\n    key: banner.id,\n    banner: banner,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 26\n    }\n  })) : null;\n}","map":{"version":3,"sources":["/media/huy/New Volume/linux/apps/ecom-ui/components/Banner/list.js"],"names":["gql","useQuery","Item","Spinner","Container","Loading","useContext","SellerContext","GET_ATTRIBUTES","ListBanner","style","theme","data","loading","error","variables","seller","allBanners","slice","map","banner","id"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,IAAT,QAAqB,QAArB;AAIA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,YAAnC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAGA,MAAMC,cAAc,GAAGR,GAAI;;;;;;;;;CAA3B;AAUA,OAAO,SAASS,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA+B;AACpC,QAAMC,KAAK,GAAGL,UAAU,CAACC,aAAD,CAAxB;AAEA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2Bb,QAAQ,CAACO,cAAD,EAAiB;AACxDO,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAM,EAAEL,KAAK,CAACK;AAAhB;AAD6C,GAAjB,CAAzC;AAIA,MAAIH,OAAJ,EAAa,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEb,SAAO,CAACA,OAAD,IAAYD,IAAZ,GACHA,IAAI,CAACK,UAAL,CACGC,KADH,CACS,CADT,EACY,CADZ,EAEGC,GAFH,CAEQC,MAAD,IAAY,MAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,MAAM,CAACC,EAAlB;AAAsB,IAAA,MAAM,EAAED,MAA9B;AAAsC,IAAA,KAAK,EAAEV,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFnB,CADG,GAIH,IAJJ;AAKD","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\nimport { Item } from \"./item\";\n\n\n\nimport { Spinner, Container } from \"reactstrap\";\nimport { Loading } from \"../src/Loading\";\nimport { useContext } from \"react\";\nimport { SellerContext } from \"../src/SellerProvider\";\n\n\nconst GET_ATTRIBUTES = gql`\n  query($seller: UserWhereInput) {\n    allBanners(where: { seller: $seller }) {\n      id\n      file {\n        publicUrl\n      }\n    }\n  }\n`;\nexport function ListBanner({ style }) {\n  const theme = useContext(SellerContext);\n\n  const { data, loading, error } = useQuery(GET_ATTRIBUTES, {\n    variables: { seller: theme.seller },\n  });\n\n  if (loading) return <Loading />;\n  \n  return !loading && data\n    ? data.allBanners\n        .slice(0, 1)\n        .map((banner) => <Item key={banner.id} banner={banner} style={style} />)\n    : null;\n}\n"]},"metadata":{},"sourceType":"module"}