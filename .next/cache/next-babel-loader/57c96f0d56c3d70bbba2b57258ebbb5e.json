{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($data: CustomerCreateInput) {\\n    createCustomer(data: $data) {\\n      id\\n      phone\\n      name\\n      address\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState, useMemo } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { page } from \"../../config.json\";\nimport { refetchCustomer, customerVar } from \"../../apollo/client\";\nimport { useRouter } from \"next/router\";\nimport { chooseCustomer } from \"../../apollo/action\";\nvar CREATE_CUSTOMER = gql(_templateObject());\nexport function Create(_ref) {\n  var onSubmit = _ref.onSubmit;\n\n  var _useState = useState(),\n      phone = _useState[0],\n      setPhone = _useState[1];\n\n  var _useState2 = useState(),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(),\n      address = _useState3[0],\n      setAddress = _useState3[1];\n\n  var _useMutation = useMutation(CREATE_CUSTOMER),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createCustomer = _useMutation2[0];\n\n  var router = useRouter();\n\n  var submit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _e$target, phone, name, address, _yield$createCustomer, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              /**\n               * Prevent submit from reloading the page\n               */\n              e.preventDefault();\n              e.stopPropagation();\n              _e$target = e.target, phone = _e$target.phone, name = _e$target.name, address = _e$target.address;\n              _context.next = 5;\n              return createCustomer({\n                variables: {\n                  data: {\n                    phone: phone.value,\n                    name: name.value,\n                    address: address.value,\n                    ofSeller: {\n                      connect: {\n                        id: page.seller.id\n                      }\n                    }\n                  }\n                }\n              });\n\n            case 5:\n              _yield$createCustomer = _context.sent;\n              data = _yield$createCustomer.data;\n              chooseCustomer({\n                customer: data.createCustomer\n              });\n              setName(\"\");\n              setPhone(\"\");\n              setAddress(\"\");\n              onSubmit();\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"form\", {\n    onSubmit: submit\n  }, __jsx(\"h5\", null, \"T\\u1EA1o \\u0110\\u1ECBa Ch\\u1EC9 Nh\\u1EADn M\\u1EDBi\"), __jsx(\"input\", {\n    required: true,\n    name: \"name\",\n    placeholder: \"T\\xEAn\",\n    value: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    }\n  }), __jsx(\"input\", {\n    required: true,\n    name: \"phone\",\n    placeholder: \"\\u0110i\\u1EC7n Tho\\u1EA1i\",\n    type: \"number\",\n    value: phone,\n    onChange: function onChange(e) {\n      return setPhone(e.target.value);\n    }\n  }), __jsx(\"input\", {\n    required: true,\n    name: \"address\",\n    placeholder: \"\\u0110\\u1ECBa Ch\\u1EC9\",\n    value: address,\n    onChange: function onChange(e) {\n      return setAddress(e.target.value);\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\"\n  }, \"T\\u1EA1o\"));\n}","map":null,"metadata":{},"sourceType":"module"}