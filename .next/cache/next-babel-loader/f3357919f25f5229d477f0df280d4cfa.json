{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/huy/apps/ecom-ui/components/Cart/quickCart.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, Fragment, useReducer } from \"react\";\nimport { Create as CreateCustomer } from \"../Customer/create\";\nimport { CREATE_ORDER_ITEMS, CREATE_ORDER, CART, OrderItemsCreateInputs, order } from \".\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { Loading } from \"../src/Loading\";\nimport { useRouter } from \"next/router\";\nimport { page } from \"../../config/index\";\nexport var QuickCart = function QuickCart(_ref) {\n  _s();\n\n  var onClick = _ref.onClick;\n  var router = useRouter(); // query\n\n  var _useQuery = useQuery(CART),\n      cartData = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error; // mutation\n\n\n  var _useMutation = useMutation(CREATE_ORDER_ITEMS),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createOrderItems = _useMutation2[0];\n\n  var _useMutation3 = useMutation(CREATE_ORDER),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      createOrder = _useMutation4[0];\n\n  if (loading || error || !cartData) return __jsx(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 45\n    }\n  });\n  var customer = cartData.customer,\n      cartItems = cartData.cartItems,\n      user = cartData.user;\n  var sum = 0;\n  cartItems === null || cartItems === void 0 ? void 0 : cartItems.map(function (cartItem) {\n    sum += cartItem.price;\n  }); // create OrderItemsCreateInputs (GraphQL type)\n\n  var dataOICI = OrderItemsCreateInputs(cartItems);\n  dataOICI === null || dataOICI === void 0 ? void 0 : dataOICI.map(function (data) {\n    return data.data.ofSeller = {\n      connect: {\n        id: page.seller.id\n      }\n    };\n  }); // function\n\n  return __jsx(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(CreateCustomer, {\n    onCreate: function onCreate(_ref2) {\n      var customer = _ref2.customer;\n      order({\n        createOrderItems: createOrderItems,\n        createOrder: createOrder,\n        dataOICI: dataOICI,\n        page: page,\n        customer: customer,\n        sum: sum,\n        router: router\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(QuickCart, \"mlgFtjbWCv6kmZSWtKlWWdBFJGk=\", false, function () {\n  return [useRouter, useQuery, useMutation, useMutation];\n});\n\n_c = QuickCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuickCart\");","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/components/Cart/quickCart.js"],"names":["useState","Fragment","useReducer","Create","CreateCustomer","CREATE_ORDER_ITEMS","CREATE_ORDER","CART","OrderItemsCreateInputs","order","useMutation","useQuery","Loading","useRouter","page","QuickCart","onClick","router","cartData","data","loading","error","createOrderItems","createOrder","customer","cartItems","user","sum","map","cartItem","price","dataOICI","ofSeller","connect","id","seller"],"mappings":";;;;;;;;AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,UAA7B,QAA+C,OAA/C;AAEA,SAASC,MAAM,IAAIC,cAAnB,QAAyC,oBAAzC;AACA,SACEC,kBADF,EAEEC,YAFF,EAGEC,IAHF,EAIEC,sBAJF,EAKEC,KALF,QAMO,GANP;AAOA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,gBAAtC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAiB;AAAA;;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACxC,MAAMC,MAAM,GAAGJ,SAAS,EAAxB,CADwC,CAExC;;AAFwC,kBAGGF,QAAQ,CAACJ,IAAD,CAHX;AAAA,MAG1BW,QAH0B,aAGhCC,IAHgC;AAAA,MAGhBC,OAHgB,aAGhBA,OAHgB;AAAA,MAGPC,KAHO,aAGPA,KAHO,EAIxC;;;AAJwC,qBAKbX,WAAW,CAACL,kBAAD,CALE;AAAA;AAAA,MAKjCiB,gBALiC;;AAAA,sBAMlBZ,WAAW,CAACJ,YAAD,CANO;AAAA;AAAA,MAMjCiB,WANiC;;AAQxC,MAAIH,OAAO,IAAIC,KAAX,IAAoB,CAACH,QAAzB,EAAmC,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AARK,MAUhCM,QAVgC,GAUFN,QAVE,CAUhCM,QAVgC;AAAA,MAUtBC,SAVsB,GAUFP,QAVE,CAUtBO,SAVsB;AAAA,MAUXC,IAVW,GAUFR,QAVE,CAUXQ,IAVW;AAWxC,MAAIC,GAAG,GAAG,CAAV;AACAF,EAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEG,GAAX,CAAe,UAACC,QAAD,EAAc;AAC3BF,IAAAA,GAAG,IAAIE,QAAQ,CAACC,KAAhB;AACD,GAFD,EAZwC,CAgBxC;;AACA,MAAIC,QAAQ,GAAGvB,sBAAsB,CAACiB,SAAD,CAArC;AACAM,EAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEH,GAAV,CACE,UAACT,IAAD;AAAA,WAAWA,IAAI,CAACA,IAAL,CAAUa,QAAV,GAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,EAAE,EAAEpB,IAAI,CAACqB,MAAL,CAAYD;AAAlB;AAAX,KAAhC;AAAA,GADF,EAlBwC,CAsBxC;;AACA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AACE,IAAA,QAAQ,EAAE,yBAAkB;AAAA,UAAfV,QAAe,SAAfA,QAAe;AAC1Bf,MAAAA,KAAK,CAAC;AACJa,QAAAA,gBAAgB,EAAhBA,gBADI;AAEJC,QAAAA,WAAW,EAAXA,WAFI;AAGJQ,QAAAA,QAAQ,EAARA,QAHI;AAIJjB,QAAAA,IAAI,EAAJA,IAJI;AAKJU,QAAAA,QAAQ,EAARA,QALI;AAMJG,QAAAA,GAAG,EAAHA,GANI;AAOJV,QAAAA,MAAM,EAANA;AAPI,OAAD,CAAL;AASD,KAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAiBD,CAxCM;;GAAMF,S;UACIF,S,EAE4BF,Q,EAEhBD,W,EACLA,W;;;KANXK,S","sourcesContent":["import { useState, Fragment, useReducer } from \"react\";\n\nimport { Create as CreateCustomer } from \"../Customer/create\";\nimport {\n  CREATE_ORDER_ITEMS,\n  CREATE_ORDER,\n  CART,\n  OrderItemsCreateInputs,\n  order,\n} from \".\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { Loading } from \"../src/Loading\";\nimport { useRouter } from \"next/router\";\nimport { page } from \"../../config/index\";\nexport const QuickCart = ({ onClick }) => {\n  const router = useRouter();\n  // query\n  const { data: cartData, loading, error } = useQuery(CART);\n  // mutation\n  const [createOrderItems] = useMutation(CREATE_ORDER_ITEMS);\n  const [createOrder] = useMutation(CREATE_ORDER);\n\n  if (loading || error || !cartData) return <Loading />;\n\n  const { customer, cartItems, user } = cartData;\n  let sum = 0;\n  cartItems?.map((cartItem) => {\n    sum += cartItem.price;\n  });\n\n  // create OrderItemsCreateInputs (GraphQL type)\n  let dataOICI = OrderItemsCreateInputs(cartItems);\n  dataOICI?.map(\n    (data) => (data.data.ofSeller = { connect: { id: page.seller.id } })\n  );\n\n  // function\n  return (\n    <Fragment>\n      <CreateCustomer\n        onCreate={({ customer }) => {\n          order({\n            createOrderItems,\n            createOrder,\n            dataOICI,\n            page,\n            customer,\n            sum,\n            router,\n          });\n        }}\n      />\n    </Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}