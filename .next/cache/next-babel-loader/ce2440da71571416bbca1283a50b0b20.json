{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/ecom-ui/components/Product/list.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, Fragment } from \"react\";\nimport { gql, useQuery, rewriteURIForGET } from \"@apollo/client\";\nimport { useRouter, withRouter, Router } from \"next/router\";\nimport { Item as Product } from \"./item\";\nimport { Container, Row, Col, Spinner } from \"reactstrap\";\nimport { page } from \"../../config/yensaodatquang.json\";\nimport { toSlug } from \"../../lib/chip\";\nimport { Loading } from \"../src/Loading\";\nimport { Divider } from \"../src/Divider\";\nimport { useSpring } from \"react-spring\";\nconst GET_PRODUCTS = gql`\n  query(\n    $first: Int\n    $skip: Int\n    $attributes: AttributeGroupWhereInput\n    $category: String\n    $categories: [String]\n    $brand: BrandWhereInput\n    $orderBy: String\n    $suggestions: ProductSuggestionType\n    $seller: UserWhereInput\n    $sale_gt: Int\n    $price_from: Int\n    $price_to: Int\n    $keyword: String\n    $except: String\n  ) {\n    allProducts(\n      first: $first\n      skip: $skip\n      where: {\n        AND: [\n          { url_contains: $keyword }\n          { category: { OR: [{ url: $category }, { url_in: $categories }] } }\n          { brand: $brand }\n          { attributeGroups_some: $attributes }\n          { suggestions: $suggestions }\n          { seller: $seller }\n          { sale_gt: $sale_gt }\n          { price_gt: $price_from }\n          { price_lt: $price_to }\n          { url_not: $except }\n        ]\n      }\n      orderBy: $orderBy\n    ) {\n      id\n      name\n      description\n      image {\n        publicUrl\n      }\n      images {\n        file {\n          publicUrl\n        }\n      }\n      price\n      sale\n      attributeGroups {\n        id\n        name\n        attributes {\n          id\n          name\n          url\n        }\n      }\n      url\n    }\n  }\n`;\nexport const List = ({\n  first = 2,\n  skip = 0,\n  category,\n  categories,\n  brand = \"\",\n  attributes,\n  orderBy,\n  suggestions,\n  sale,\n  price_from = 0,\n  price_to,\n  sm,\n  md,\n  lg,\n  more = true,\n  search,\n  except\n}) => {\n  var _data$allProducts2;\n\n  let variables = {\n    first,\n    skip,\n    category,\n    categories,\n    brand: brand ? {\n      url_contains: brand\n    } : null,\n    attributes,\n    orderBy,\n    suggestions,\n    seller: page.seller,\n    price_from,\n    price_to: price_to ? price_to : 999999999,\n    except\n  };\n  if (search) variables.keyword = toSlug(search);\n  if (sale) variables.sale_gt = 0;\n  let {\n    data,\n    error,\n    loading,\n    fetchMore\n  } = useQuery(GET_PRODUCTS, {\n    variables\n  });\n  let {\n    0: on,\n    1: setOn\n  } = useState(true);\n  useEffect(() => {\n    const productsEle = document.getElementById(\"products\");\n    const scrollHeight = (productsEle === null || productsEle === void 0 ? void 0 : productsEle.clientHeight) - window.innerHeight;\n    if (!loading && scrollHeight < 0) loadingMore();\n\n    window.onscroll = () => {\n      const scrollHeight = (productsEle === null || productsEle === void 0 ? void 0 : productsEle.clientHeight) - window.innerHeight;\n\n      if (!loading && scrollHeight > 0) {\n        if (on && (productsEle === null || productsEle === void 0 ? void 0 : productsEle.clientHeight) - document.scrollingElement.scrollTop - window.innerHeight + 200 < 0) {\n          setOn(false);\n          loadingMore();\n        }\n\n        if (!on && (productsEle === null || productsEle === void 0 ? void 0 : productsEle.clientHeight) - document.scrollingElement.scrollTop - window.innerHeight + 200 > 0) {\n          setOn(true);\n        }\n      }\n    }; // if (!loading && scrollHeight < document.scrollingElement.scrollTop)\n    //   loadingMore();\n\n  });\n\n  function loadingMore() {\n    var _data$allProducts;\n\n    const count = data === null || data === void 0 ? void 0 : (_data$allProducts = data.allProducts) === null || _data$allProducts === void 0 ? void 0 : _data$allProducts.length;\n    console.log(count);\n    variables.skip = count;\n\n    try {\n      fetchMore({\n        variables,\n        updateQuery: (prev, {\n          fetchMoreResult\n        }) => {\n          if (!fetchMoreResult) {\n            return prev;\n          }\n\n          return Object.assign({}, prev, {\n            allProducts: [...prev.allProducts, ...fetchMoreResult.allProducts]\n          });\n        }\n      });\n    } catch (e) {}\n  }\n\n  if (error) return __jsx(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, error);\n  if (loading) return __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 23\n    }\n  });\n  return (data === null || data === void 0 ? void 0 : (_data$allProducts2 = data.allProducts) === null || _data$allProducts2 === void 0 ? void 0 : _data$allProducts2.length) ? __jsx(\"section\", {\n    id: \"products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    noGutters: true,\n    style: {\n      borderRadius: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, data.allProducts.map(product => __jsx(Col, {\n    style: {\n      padding: 8\n    },\n    key: product.id,\n    xs: sm ? sm : 6,\n    sm: sm ? sm : 6,\n    md: md ? md : 4,\n    lg: lg ? lg : 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, __jsx(Product, {\n    product: product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }))))) : __jsx(\"p\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }\n  }, \"Kh\\xF4ng c\\xF3 k\\u1EBFt qu\\u1EA3!\");\n};","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/components/Product/list.js"],"names":["useState","useEffect","Fragment","gql","useQuery","rewriteURIForGET","useRouter","withRouter","Router","Item","Product","Container","Row","Col","Spinner","page","toSlug","Loading","Divider","useSpring","GET_PRODUCTS","List","first","skip","category","categories","brand","attributes","orderBy","suggestions","sale","price_from","price_to","sm","md","lg","more","search","except","variables","url_contains","seller","keyword","sale_gt","data","error","loading","fetchMore","on","setOn","productsEle","document","getElementById","scrollHeight","clientHeight","window","innerHeight","loadingMore","onscroll","scrollingElement","scrollTop","count","allProducts","length","console","log","updateQuery","prev","fetchMoreResult","Object","assign","e","borderRadius","map","product","padding","id","textAlign"],"mappings":"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","sourcesContent":["import { useState, useEffect, Fragment } from \"react\";\nimport { gql, useQuery, rewriteURIForGET } from \"@apollo/client\";\nimport { useRouter, withRouter, Router } from \"next/router\";\nimport { Item as Product } from \"./item\";\nimport { Container, Row, Col, Spinner } from \"reactstrap\";\nimport { page } from \"../../config/yensaodatquang.json\";\nimport { toSlug } from \"../../lib/chip\";\nimport { Loading } from \"../src/Loading\";\nimport { Divider } from \"../src/Divider\";\nimport { useSpring } from \"react-spring\";\n\nconst GET_PRODUCTS = gql`\n  query(\n    $first: Int\n    $skip: Int\n    $attributes: AttributeGroupWhereInput\n    $category: String\n    $categories: [String]\n    $brand: BrandWhereInput\n    $orderBy: String\n    $suggestions: ProductSuggestionType\n    $seller: UserWhereInput\n    $sale_gt: Int\n    $price_from: Int\n    $price_to: Int\n    $keyword: String\n    $except: String\n  ) {\n    allProducts(\n      first: $first\n      skip: $skip\n      where: {\n        AND: [\n          { url_contains: $keyword }\n          { category: { OR: [{ url: $category }, { url_in: $categories }] } }\n          { brand: $brand }\n          { attributeGroups_some: $attributes }\n          { suggestions: $suggestions }\n          { seller: $seller }\n          { sale_gt: $sale_gt }\n          { price_gt: $price_from }\n          { price_lt: $price_to }\n          { url_not: $except }\n        ]\n      }\n      orderBy: $orderBy\n    ) {\n      id\n      name\n      description\n      image {\n        publicUrl\n      }\n      images {\n        file {\n          publicUrl\n        }\n      }\n      price\n      sale\n      attributeGroups {\n        id\n        name\n        attributes {\n          id\n          name\n          url\n        }\n      }\n      url\n    }\n  }\n`;\nexport const List = ({\n  first = 2,\n  skip = 0,\n  category,\n  categories,\n  brand = \"\",\n  attributes,\n  orderBy,\n  suggestions,\n  sale,\n  price_from = 0,\n  price_to,\n  sm,\n  md,\n  lg,\n  more = true,\n  search,\n  except,\n}) => {\n  let variables = {\n    first,\n    skip,\n    category,\n    categories,\n    brand: brand ? { url_contains: brand } : null,\n    attributes,\n    orderBy,\n    suggestions,\n    seller: page.seller,\n    price_from,\n    price_to: price_to ? price_to : 999999999,\n    except,\n  };\n  if (search) variables.keyword = toSlug(search);\n  if (sale) variables.sale_gt = 0;\n  let { data, error, loading, fetchMore } = useQuery(GET_PRODUCTS, {\n    variables,\n  });\n  let [on, setOn] = useState(true);\n  useEffect(() => {\n    const productsEle = document.getElementById(\"products\");\n    const scrollHeight = productsEle?.clientHeight - window.innerHeight;\n    if (!loading && scrollHeight < 0) loadingMore();\n    window.onscroll = () => {\n      const scrollHeight = productsEle?.clientHeight - window.innerHeight;\n      if (!loading && scrollHeight > 0) {\n        if (\n          on &&\n          productsEle?.clientHeight -\n            document.scrollingElement.scrollTop -\n            window.innerHeight +\n            200 <\n            0\n        ) {\n          setOn(false);\n          loadingMore();\n        }\n        if (\n          !on &&\n          productsEle?.clientHeight -\n            document.scrollingElement.scrollTop -\n            window.innerHeight +\n            200 >\n            0\n        ) {\n          setOn(true);\n        }\n      }\n    };\n    // if (!loading && scrollHeight < document.scrollingElement.scrollTop)\n    //   loadingMore();\n  });\n  function loadingMore() {\n    const count = data?.allProducts?.length;\n    console.log(count);\n    variables.skip = count;\n    try {\n      fetchMore({\n        variables,\n        updateQuery: (prev, { fetchMoreResult }) => {\n          if (!fetchMoreResult) {\n            return prev;\n          }\n          return Object.assign({}, prev, {\n            allProducts: [...prev.allProducts, ...fetchMoreResult.allProducts],\n          });\n        },\n      });\n    } catch (e) {}\n  }\n  if (error) return <i>{error}</i>;\n  if (loading) return <Loading />;\n  return data?.allProducts?.length ? (\n    <section id=\"products\">\n      <Row noGutters style={{ borderRadius: 8 }}>\n        {data.allProducts.map((product) => (\n          <Col\n            style={{ padding: 8 }}\n            key={product.id}\n            xs={sm ? sm : 6}\n            sm={sm ? sm : 6}\n            md={md ? md : 4}\n            lg={lg ? lg : 3}\n          >\n            <Product product={product} />\n          </Col>\n        ))}\n      </Row>\n    </section>\n  ) : (\n    <p style={{ textAlign: \"center\" }}>Không có kết quả!</p>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}