{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation(\\n    $items: [OrderItemWhereUniqueInput]\\n    $customer: CustomerWhereUniqueInput\\n    $ofSeller: UserWhereUniqueInput\\n    $total: Int\\n  ) {\\n    createOrder(\\n      data: {\\n        customer: { connect: $customer }\\n        items: { connect: $items }\\n        ofSeller: { connect: $ofSeller }\\n        total: $total\\n      }\\n    ) {\\n      id\\n      seller {\\n        id\\n        name\\n      }\\n      items {\\n        id\\n        product {\\n          image {\\n            publicUrl\\n          }\\n          images {\\n            file {\\n              publicUrl\\n            }\\n          }\\n          name\\n        }\\n        price\\n        quantity\\n        attributes {\\n          id\\n          name\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($data: [OrderItemsCreateInput]) {\\n    createOrderItems(data: $data) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    cartItems @client\\n    user @client\\n    customer @client\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery, useMutation } from \"@apollo/client\";\nimport { emptyCart } from \"../../apollo/action\";\nimport { customerVar, newOrderVar, newOrderCountVar } from \"../../apollo/client\";\nimport { Item as CartItem } from \"./item\";\nimport { List } from \"./list\";\nimport { useRouter } from \"next/router\";\nimport { page } from \"../../config/index\";\nimport { formatMoney, getErrorMessage } from \"../../lib/chip\";\nimport { Fragment } from \"react\";\nimport { css } from \"../src/css\";\nimport { theme } from \"../../config/index\";\nimport { Loading } from \"../src/Loading\";\nimport { Link } from \"../src/Link\";\nimport { List as Customer } from \"../Customer/CurrentCustomer\";\nimport { QuickCart } from \"./quickCart\";\nimport { Row, Col } from \"reactstrap\";\nexport var CART = gql(_templateObject()); // create orderItem\n\nexport var CREATE_ORDER_ITEMS = gql(_templateObject2()); // create Order\n\nexport var CREATE_ORDER = gql(_templateObject3());\nexport var OrderItemsCreateInput = function OrderItemsCreateInput(item) {\n  return {\n    data: {\n      product: {\n        connect: {\n          id: item.product.id\n        }\n      },\n      price: item.price,\n      quantity: item.quantity\n    }\n  };\n};\nexport var OrderItemsCreateInputs = function OrderItemsCreateInputs() {\n  var cartItems = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return cartItems === null || cartItems === void 0 ? void 0 : cartItems.map(function (item) {\n    return OrderItemsCreateInput(item);\n  });\n};\nexport var order = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var createOrderItems, createOrder, dataOICI, page, customer, sum, router, _yield$createOrderIte, dataCOI, error, variables, _dataCreateOrder$crea, _yield$createOrder, dataCreateOrder, ER;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            createOrderItems = _ref.createOrderItems, createOrder = _ref.createOrder, dataOICI = _ref.dataOICI, page = _ref.page, customer = _ref.customer, sum = _ref.sum, router = _ref.router;\n            _context.next = 3;\n            return createOrderItems({\n              variables: {\n                data: dataOICI\n              }\n            });\n\n          case 3:\n            _yield$createOrderIte = _context.sent;\n            dataCOI = _yield$createOrderIte.data;\n            error = _yield$createOrderIte.error;\n            console.log(dataCOI); // creat cart and connect cart items\n\n            if (!dataCOI.createOrderItems) {\n              _context.next = 24;\n              break;\n            }\n\n            variables = {\n              items: dataCOI.createOrderItems.map(function (e) {\n                return {\n                  id: e.id\n                };\n              }),\n              customer: {\n                id: customer.id\n              },\n              ofSeller: {\n                id: page.seller.id\n              },\n              total: sum\n            };\n            _context.prev = 9;\n            _context.next = 12;\n            return createOrder({\n              variables: variables\n            });\n\n          case 12:\n            _yield$createOrder = _context.sent;\n            dataCreateOrder = _yield$createOrder.data;\n            ER = _yield$createOrder.errors;\n            console.log(dataCreateOrder);\n            newOrderVar(true);\n            newOrderCountVar(true);\n            emptyCart();\n            router.push({\n              pathname: \"/order\",\n              query: {\n                createOrderId: dataCreateOrder === null || dataCreateOrder === void 0 ? void 0 : (_dataCreateOrder$crea = dataCreateOrder.createOrder) === null || _dataCreateOrder$crea === void 0 ? void 0 : _dataCreateOrder$crea.id\n              }\n            });\n            _context.next = 24;\n            break;\n\n          case 22:\n            _context.prev = 22;\n            _context.t0 = _context[\"catch\"](9);\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[9, 22]]);\n  }));\n\n  return function order(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport function Cart() {\n  var router = useRouter(); // query\n\n  var _useQuery = useQuery(CART),\n      cartData = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error; // mutation\n\n\n  var _useMutation = useMutation(CREATE_ORDER_ITEMS),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createOrderItems = _useMutation2[0];\n\n  var _useMutation3 = useMutation(CREATE_ORDER),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      createOrder = _useMutation4[0];\n\n  if (loading || error || !cartData) return __jsx(Loading, null);\n  var customer = cartData.customer,\n      cartItems = cartData.cartItems,\n      user = cartData.user;\n  var sum = 0;\n  cartItems === null || cartItems === void 0 ? void 0 : cartItems.map(function (cartItem) {\n    sum += cartItem.price;\n  }); // create OrderItemsCreateInputs (GraphQL type)\n\n  var dataOICI = OrderItemsCreateInputs(cartItems);\n  dataOICI === null || dataOICI === void 0 ? void 0 : dataOICI.map(function (data) {\n    return data.data.ofSeller = {\n      connect: {\n        id: page.seller.id\n      }\n    };\n  }); // function\n\n  return __jsx(Row, null, __jsx(Col, null, (user === null || user === void 0 ? void 0 : user.id) ? __jsx(\"div\", null, __jsx(Customer, {\n    customer: customer\n  })) : __jsx(\"div\", {\n    style: {\n      paddingBottom: theme.spacing(3)\n    }\n  }, __jsx(Link, {\n    href: {\n      pathname: \"/signin\",\n      query: {\n        redirect: \"/cart\"\n      }\n    },\n    style: {\n      marginBottom: theme.spacing(4),\n      display: \"block\"\n    }\n  }, \"Mua h\\xE0ng v\\u1EDBi t\\xE0i kho\\u1EA3n (Khuy\\xEAn d\\xF9ng)\"), __jsx(QuickCart, {\n    cartItems: cartItems\n  })), \" \", __jsx(List, {\n    cartItems: cartItems\n  }), (dataOICI === null || dataOICI === void 0 ? void 0 : dataOICI.length) && user ? __jsx(\"button\", {\n    style: css.button,\n    onClick: function onClick() {\n      order({\n        createOrderItems: createOrderItems,\n        createOrder: createOrder,\n        dataOICI: dataOICI,\n        page: page,\n        customer: customer,\n        sum: sum,\n        router: router\n      });\n    }\n  }, \"X\\xE1c nh\\u1EADn \\u0111\\u01A1n h\\xE0ng\") : null));\n}","map":null,"metadata":{},"sourceType":"module"}