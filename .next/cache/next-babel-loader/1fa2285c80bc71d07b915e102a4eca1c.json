{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/home/robert/Documents/loaloa.tech/ecom-ui/components/Attribute/listOne.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($seller: UserWhereInput) {\\n    allAttributes(where: { seller: $seller }) {\\n      id\\n      name\\n      url\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// show in product detail\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Item } from \"./itemOne\";\nimport { getErrorMessage } from \"../../lib/chip\";\nimport { Loading } from \"../src/Loading\";\nimport { useContext } from \"react\";\nimport { SellerContext } from \"../src/SellerProvider\";\nvar GET_ATTRIBUTES = gql(_templateObject());\nexport function List(_ref) {\n  _s();\n\n  var _this = this;\n\n  var attributes = _ref.attributes;\n  var theme = useContext(SellerContext);\n\n  var _useQuery = useQuery(GET_ATTRIBUTES, {\n    variables: {\n      seller: theme.seller\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 23\n    }\n  });\n  if (error) return __jsx(\"i\", {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, getErrorMessage(error));\n  var source = attributes ? attributes : data.allAttributes;\n  return !loading && data ? __jsx(\"div\", {\n    style: {\n      display: \"inline-block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, source.map(function (attribute) {\n    return __jsx(Item, {\n      key: attribute.id,\n      attribute: attribute,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    });\n  })) : null;\n}\n\n_s(List, \"zJtdSgFV/UMa8WNzQTSR5IaAzhk=\", false, function () {\n  return [useQuery];\n});\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/robert/Documents/loaloa.tech/ecom-ui/components/Attribute/listOne.js"],"names":["gql","useQuery","Item","getErrorMessage","Loading","useContext","SellerContext","GET_ATTRIBUTES","List","attributes","theme","variables","seller","data","loading","error","source","allAttributes","display","map","attribute","id"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,IAAMC,cAAc,GAAGP,GAAH,mBAApB;AASA,OAAO,SAASQ,IAAT,OAA8B;AAAA;;AAAA;;AAAA,MAAdC,UAAc,QAAdA,UAAc;AACnC,MAAMC,KAAK,GAAGL,UAAU,CAACC,aAAD,CAAxB;;AADmC,kBAEFL,QAAQ,CAACM,cAAD,EAAiB;AACxDI,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAM,EAAEF,KAAK,CAACE;AAAhB;AAD6C,GAAjB,CAFN;AAAA,MAE3BC,IAF2B,aAE3BA,IAF2B;AAAA,MAErBC,OAFqB,aAErBA,OAFqB;AAAA,MAEZC,KAFY,aAEZA,KAFY;;AAMnC,MAAID,OAAJ,EAAa,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAG,IAAA,KAAK,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBZ,eAAe,CAACY,KAAD,CAAlC,CAAP;AAEX,MAAIC,MAAM,GAAGP,UAAU,GAAGA,UAAH,GAAgBI,IAAI,CAACI,aAA5C;AACA,SAAO,CAACH,OAAD,IAAYD,IAAZ,GACL;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,MAAM,CAACG,GAAP,CAAW,UAACC,SAAD;AAAA,WACV,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,SAAS,CAACC,EAArB;AAAyB,MAAA,SAAS,EAAED,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA,GAAX,CADH,CADK,GAMH,IANJ;AAOD;;GAjBeZ,I;UAEmBP,Q;;;KAFnBO,I","sourcesContent":["// show in product detail\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Item } from \"./itemOne\";\nimport { getErrorMessage } from \"../../lib/chip\";\nimport { Loading } from \"../src/Loading\";\nimport { useContext } from \"react\";\nimport { SellerContext } from \"../src/SellerProvider\";\nconst GET_ATTRIBUTES = gql`\n  query($seller: UserWhereInput) {\n    allAttributes(where: { seller: $seller }) {\n      id\n      name\n      url\n    }\n  }\n`;\nexport function List({ attributes }) {\n  const theme = useContext(SellerContext);\n  const { data, loading, error } = useQuery(GET_ATTRIBUTES, {\n    variables: { seller: theme.seller },\n  });\n\n  if (loading) return <Loading />;\n  if (error) return <i color=\"danger\">{getErrorMessage(error)}</i>;\n\n  let source = attributes ? attributes : data.allAttributes;\n  return !loading && data ? (\n    <div style={{ display: \"inline-block\" }}>\n      {source.map((attribute) => (\n        <Item key={attribute.id} attribute={attribute} />\n      ))}\n    </div>\n  ) : null;\n}\n"]},"metadata":{},"sourceType":"module"}