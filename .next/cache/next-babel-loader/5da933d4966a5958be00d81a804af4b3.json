{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/home/huy/apps/ecom-ui/components/Order/list.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($id: ID) {\\n    customer @client\\n    allOrders(orderBy: \\\"time_DESC\\\", where: { id: $id }) {\\n      id\\n      total\\n      step\\n      customer {\\n        id\\n        name\\n        phone\\n        address\\n      }\\n      items {\\n        id\\n        product {\\n          name\\n          url\\n          image {\\n            publicUrl\\n          }\\n          images {\\n            file {\\n              publicUrl\\n            }\\n          }\\n        }\\n        price\\n        quantity\\n        attributes {\\n          id\\n          name\\n          url\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery, useApolloClient } from \"@apollo/client\";\nimport { getErrorMessage } from \"../../lib/chip\";\nimport { USER } from \"../../apollo/action\";\nimport { newOrderVar } from \"../../apollo/client\";\nimport { Item } from \"./item\";\nimport { Loading } from \"../src/Loading\";\nimport { useRouter } from \"next/router\";\nimport { route } from \"next/dist/next-server/server/router\";\nexport var GET_CART_ITEMS = gql(_templateObject());\nexport function List() {\n  _s();\n\n  var _router$query,\n      _data$allOrders,\n      _this = this;\n\n  var router = useRouter();\n  var id = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.createOrderId;\n  console.log(id);\n  var client = useApolloClient();\n  var user = client.readQuery({\n    query: USER\n  });\n\n  var _useQuery = useQuery(GET_CART_ITEMS, {\n    variables: {\n      seller: {\n        id: user === null || user === void 0 ? void 0 : user.id\n      },\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      refetch = _useQuery.refetch;\n\n  if (loading) return __jsx(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 23\n    }\n  });\n  if (error) return __jsx(\"i\", {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, getErrorMessage(error));\n  var allOrders = (data === null || data === void 0 ? void 0 : (_data$allOrders = data.allOrders) === null || _data$allOrders === void 0 ? void 0 : _data$allOrders.length) ? data === null || data === void 0 ? void 0 : data.allOrders : [];\n  var newOrder = newOrderVar();\n\n  if (newOrder) {\n    newOrderVar(false);\n\n    try {\n      refetch();\n    } catch (_unused) {}\n  }\n\n  return allOrders.map(function (order) {\n    return __jsx(Item, {\n      key: order.id,\n      order: order,\n      customer: data.customer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    });\n  });\n}\n\n_s(List, \"PatNweRaLqfludaAZh3lHgHobho=\", false, function () {\n  return [useRouter, useApolloClient, useQuery];\n});\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/components/Order/list.js"],"names":["gql","useQuery","useApolloClient","getErrorMessage","USER","newOrderVar","Item","Loading","useRouter","route","GET_CART_ITEMS","List","router","id","query","createOrderId","console","log","client","user","readQuery","variables","seller","data","loading","error","refetch","allOrders","length","newOrder","map","order","customer"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,QAAd,EAAwBC,eAAxB,QAA+C,gBAA/C;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,IAAT,QAAqB,qBAArB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,KAAT,QAAsB,qCAAtB;AACA,OAAO,IAAMC,cAAc,GAAGV,GAAH,mBAApB;AAuCP,OAAO,SAASW,IAAT,GAAgB;AAAA;;AAAA;AAAA;AAAA;;AACrB,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,MAAMK,EAAE,oBAAGD,MAAM,CAACE,KAAV,kDAAG,cAAcC,aAAzB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;AACA,MAAMK,MAAM,GAAGhB,eAAe,EAA9B;AACA,MAAMiB,IAAI,GAAGD,MAAM,CAACE,SAAP,CAAiB;AAAEN,IAAAA,KAAK,EAAEV;AAAT,GAAjB,CAAb;;AALqB,kBAMqBH,QAAQ,CAACS,cAAD,EAAiB;AACjEW,IAAAA,SAAS,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAET,QAAAA,EAAE,EAAEM,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEN;AAAZ,OAAV;AAA4BA,MAAAA,EAAE,EAAFA;AAA5B;AADsD,GAAjB,CAN7B;AAAA,MAMbU,IANa,aAMbA,IANa;AAAA,MAMPC,OANO,aAMPA,OANO;AAAA,MAMEC,KANF,aAMEA,KANF;AAAA,MAMSC,OANT,aAMSA,OANT;;AASrB,MAAIF,OAAJ,EAAa,OAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAG,IAAA,KAAK,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBtB,eAAe,CAACsB,KAAD,CAAlC,CAAP;AACX,MAAIE,SAAS,GAAG,CAAAJ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,+BAAAA,IAAI,CAAEI,SAAN,oEAAiBC,MAAjB,IAA0BL,IAA1B,aAA0BA,IAA1B,uBAA0BA,IAAI,CAAEI,SAAhC,GAA4C,EAA5D;AACA,MAAME,QAAQ,GAAGxB,WAAW,EAA5B;;AACA,MAAIwB,QAAJ,EAAc;AACZxB,IAAAA,WAAW,CAAC,KAAD,CAAX;;AACA,QAAI;AACFqB,MAAAA,OAAO;AACR,KAFD,CAEE,gBAAM,CAAE;AACX;;AAED,SAAOC,SAAS,CAACG,GAAV,CAAc,UAACC,KAAD;AAAA,WACnB,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAK,CAAClB,EAAjB;AAAqB,MAAA,KAAK,EAAEkB,KAA5B;AAAmC,MAAA,QAAQ,EAAER,IAAI,CAACS,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADmB;AAAA,GAAd,CAAP;AAGD;;GAvBerB,I;UACCH,S,EAGAN,e,EAE2BD,Q;;;KAN5BU,I","sourcesContent":["import { gql, useQuery, useApolloClient } from \"@apollo/client\";\nimport { getErrorMessage } from \"../../lib/chip\";\nimport { USER } from \"../../apollo/action\";\nimport { newOrderVar } from \"../../apollo/client\";\nimport { Item } from \"./item\";\nimport { Loading } from \"../src/Loading\";\nimport { useRouter } from \"next/router\";\nimport { route } from \"next/dist/next-server/server/router\";\nexport const GET_CART_ITEMS = gql`\n  query($id: ID) {\n    customer @client\n    allOrders(orderBy: \"time_DESC\", where: { id: $id }) {\n      id\n      total\n      step\n      customer {\n        id\n        name\n        phone\n        address\n      }\n      items {\n        id\n        product {\n          name\n          url\n          image {\n            publicUrl\n          }\n          images {\n            file {\n              publicUrl\n            }\n          }\n        }\n        price\n        quantity\n        attributes {\n          id\n          name\n          url\n        }\n      }\n    }\n  }\n`;\n\nexport function List() {\n  const router = useRouter();\n  const id = router.query?.createOrderId;\n  console.log(id);\n  const client = useApolloClient();\n  const user = client.readQuery({ query: USER });\n  const { data, loading, error, refetch } = useQuery(GET_CART_ITEMS, {\n    variables: { seller: { id: user?.id }, id },\n  });\n  if (loading) return <Loading />;\n  if (error) return <i color=\"danger\">{getErrorMessage(error)}</i>;\n  let allOrders = data?.allOrders?.length ? data?.allOrders : [];\n  const newOrder = newOrderVar();\n  if (newOrder) {\n    newOrderVar(false);\n    try {\n      refetch();\n    } catch {}\n  }\n\n  return allOrders.map((order) => (\n    <Item key={order.id} order={order} customer={data.customer} />\n  ));\n}\n"]},"metadata":{},"sourceType":"module"}