{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($seller: UserWhereInput, $category: String) {\\n    allCategories(where: { seller: $seller, url: $category }) {\\n      id\\n      name\\n      label\\n      url\\n      childs {\\n        id\\n        name\\n        label\\n        url\\n      }\\n      parent {\\n        id\\n        name\\n        label\\n        url\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Item } from \"./item\";\nimport { page } from \"../../config/index\";\nimport { Spinner } from \"reactstrap\";\nimport { Loading } from \"../src/Loading\";\nimport { useRouter } from \"next/router\";\nimport { css } from \"../src/css\";\nvar GET_CATEGORIES = gql(_templateObject());\nexport function List() {\n  var router = useRouter();\n  var category = router.query.category;\n  console.log(category);\n\n  var _useQuery = useQuery(GET_CATEGORIES, {\n    variables: {\n      seller: page.seller,\n      category: category\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (error) return __jsx(\"i\", null, error);\n  if (loading) return __jsx(Loading, null);\n  return !loading && data ? __jsx(\"div\", null, __jsx(\"h5\", {\n    style: css.h5\n  }, category ? data.allCategories[0].name : \"Danh Mục\"), __jsx(Item, {\n    categories: [{\n      id: \"all-category\",\n      name: category ? \"Trở lại mục trước\" : null,\n      url: \"back\"\n    }],\n    style: {\n      display: \"block\"\n    }\n  }), category ? data.allCategories[0].childs.map(function (cate) {\n    return __jsx(Item, {\n      key: cate.id,\n      categories: [cate],\n      level: 0\n    });\n  }) : data.allCategories.map(function (category) {\n    return __jsx(Item, {\n      key: category.id,\n      categories: [category],\n      level: 0,\n      style: {\n        display: \"block\"\n      }\n    });\n  })) : null;\n}","map":null,"metadata":{},"sourceType":"module"}