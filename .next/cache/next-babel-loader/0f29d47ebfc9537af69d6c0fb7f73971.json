{"ast":null,"code":"var _jsxFileName = \"/home/huy/apps/ecom-ui/components/Sidebar/filter.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { filterCategoryVar, filterAttributeVar } from \"../../apollo/client\";\nimport { Fragment } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nconst GET_NAME = gql`\n  query($category: ID!) {\n    Category(id: $category) {\n      id\n      name\n    }\n  }\n`;\nexport const Filter = ({\n  category,\n  brand,\n  search,\n  price_from,\n  price_to,\n  attributes\n}) => {\n  const {\n    data\n  } = useQuery(GET_NAME, {\n    variables: {\n      category\n    }\n  });\n  console.log(data);\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }\n  });\n};","map":{"version":3,"sources":["/home/huy/apps/ecom-ui/components/Sidebar/filter.js"],"names":["filterCategoryVar","filterAttributeVar","Fragment","gql","useQuery","GET_NAME","Filter","category","brand","search","price_from","price_to","attributes","data","variables","console","log"],"mappings":";;;AAAA,SAASA,iBAAT,EAA4BC,kBAA5B,QAAsD,qBAAtD;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,MAAMC,QAAQ,GAAGF,GAAI;;;;;;;CAArB;AAQA,OAAO,MAAMG,MAAM,GAAG,CAAC;AACrBC,EAAAA,QADqB;AAErBC,EAAAA,KAFqB;AAGrBC,EAAAA,MAHqB;AAIrBC,EAAAA,UAJqB;AAKrBC,EAAAA,QALqB;AAMrBC,EAAAA;AANqB,CAAD,KAOhB;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAWT,QAAQ,CAACC,QAAD,EAAW;AAAES,IAAAA,SAAS,EAAE;AAAEP,MAAAA;AAAF;AAAb,GAAX,CAAzB;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SAAO,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAXM","sourcesContent":["import { filterCategoryVar, filterAttributeVar } from \"../../apollo/client\";\nimport { Fragment } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nconst GET_NAME = gql`\n  query($category: ID!) {\n    Category(id: $category) {\n      id\n      name\n    }\n  }\n`;\nexport const Filter = ({\n  category,\n  brand,\n  search,\n  price_from,\n  price_to,\n  attributes,\n}) => {\n  const { data } = useQuery(GET_NAME, { variables: { category } });\n  console.log(data);\n  return <Fragment></Fragment>;\n};\n"]},"metadata":{},"sourceType":"module"}